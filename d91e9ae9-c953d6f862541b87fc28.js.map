{"version":3,"sources":["webpack://moscowjs.org/./node_modules/@firebase/database/dist/index.esm.js"],"names":["SDK_VERSION","setSDKVersion","version","id","DOMStorageWrapper","domStorage_","this","prefix_","prototype","set","key","value","removeItem","prefixedName_","setItem","stringify","get","storedVal","getItem","jsonEval","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","contains","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","log","bind","logWrapper","prefix","__spreadArray","__read","error","fatal","Error","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","fn","hasOwnProperty","doubleToIEEE754String","v","s","f","ln","bias","Infinity","Math","abs","pow","min","floor","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","RegExp","INTEGER_32_MIN","INTEGER_32_MAX","test","intVal","exceptionGuard","setTimeout","stack","setTimeoutNonBlocking","time","timeout","AppCheckTokenProvider","appName_","appCheckProvider","_this","appCheck","getImmediate","optional","then","getToken","forceRefresh","Promise","resolve","reject","addTokenChangeListener","listener","_a","addTokenListener","notifyForInvalidToken","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","onInit","auth","catch","code","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorTokenProvider","accessToken","OWNER","PROTOCOL_VERSION","FORGE_DOMAIN_RE","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","_host","_domain","indexOf","internalHost","isCacheableHost","isCustomHost","Object","defineProperty","newHost","enumerable","configurable","toURLString","protocol","query","repoInfoConnectionURL","repoInfo","type","params","connURL","repoInfoNeedsQueryParam","pairs","StatsCollection","counters_","incrementCounter","amount","deepCopy","collections","reporters","statsManagerGetCollection","hashString","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","callback","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","BrowserPollConnection","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","isNodeSdk","document","readyState","called_1","wrappedFn_1","body","addEventListener","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","random","uniqueCallbackIdentifier","location","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","href","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","base64Encode","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","domain","iframeContents","doc","write","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","size","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","add","doNewRequest","delete","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","String","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","e_1","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","_b","__values","ALL_TRANSPORTS","_c","next","done","transport","e_1_1","return","call","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","reason","ServerActions","put","pathString","onComplete","hash","merge","refreshAuthToken","token","refreshAppCheckToken","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats","EventEmitter","allowedEvents_","listeners_","trigger","eventType","listeners","context","on","validateEventType_","eventData","getInitialEvent","off","splice","find","et","OnlineMonitor","_super","online_","isMobileCordova","__extends","getInstance","currentlyOnline","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathSlice","begin","slice","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","max","stringLength","validationPathCheckValid","validationPath","validationPathToErrorString","__EMPTY_NODE","MAX_NODE","VisibilityMonitor","hidden","visibilityChange","visible_","visible","RECONNECT_MIN_DELAY","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","Map","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAuthTokenCount_","invalidAppCheckTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","onVisible_","onOnline_","action","onResponse","curReqNum","r","initConnection_","deferred","Deferred","request","p","_path","q","_queryObject","outstandingGet","index","undefined","sendGet_","promise","listen","currentHashFn","tag","queryId","_queryIdentifier","has","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","removeListen_","warnings","safeGet","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isAdmin","tryAppCheck","token_1","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","onAppCheckRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","result","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","scheduleConnect_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","__awaiter","onDataMessage","onReady","onDisconnect_1","canceled_1","connection_1","closeFn","sendRequestFn","error_1","__generator","label","nextConnectionId_","trys","all","sent","interrupt","resume","isEmpty","delta","serverTimeOffset","map","normalizedPathString","statusCode","explanation","console","replace","e_2","values","_d","queries","_e","_f","e_2_1","clientName","isReactNative","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","val","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","pop","hasNext","peek","LLRBNode","color","RED","SortedMap","EMPTY_NODE","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","_defaultIndexMap","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","root","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","__assign","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","ChildrenNode","children_","indexMap_","Default","child","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","setMaxNode$1","nodeFromJSON$1","json","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","setNodeFromJSON","lastPushTime","lastRandChars","PathIndex","indexPath_","extractChild","snap","aChild","bChild","valueNode","VALUE_INDEX","ValueIndex","PUSH_CHARS","nextPushId","now","duplicateTime","timeStampChars","charAt","successor","keyAsInt","i_1","source","sourcePlusOne","repeat","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","IndexedFilter","index_","newChild","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","matches","filtered","self","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","childKey","childSnap","changeAccumulator","indexCmp_1","oldEventCache","newChildNamedNode","windowBoundary","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasStartAfter","hasEndBefore","hasLimit","hasAnchoredLimit","queryParamsStartAt","queryParams","newParams","queryParamsEndAt","queryParamsOrderBy","queryParamsToRestQueryStringParameters","orderBy","qs","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","restRequest_","querystring","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","getNode","updateSnapshot","newSnapshotNode","newSparseSnapshotTree","children","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","sparseSnapshotTreeForget","tree","sparseSnapshotTreeForEachTree","prefixPath","func","forEach","sparseSnapshotTreeForEachChild","OperationType","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","newOperationSourceServerTaggedQuery","fromUser","fromServer","tagged","emptyChildrenSingleton","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForType","eventGenerator","events","changes","registrations","eventCache","filteredChanges","filter","change","aWrapped","bWrapped","eventGeneratorCompareChanges","materializedChange","prevName","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","complete","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","viewCacheGetCompleteServerSnap","ImmutableTree","fromObject","childPath","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite_1","writeTreeChildWrites","newWriteTreeRef","writeTreeRemoveWrite","writeId","allWrites","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","visibleWrites","writeTreeLayerTree_","writeTreeDefaultFilter_","lastWriteId","writeTreeResetTree_","writeRecord","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","merge_1","writeTreeCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeShadowingWrite","writeTreeRefCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeCalcCompleteChild","writeTreeRefChild","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","viewProcessorApplyOperation","viewProcessor","oldViewCache","operation","writesCache","completeCache","filterServerNode","accumulator","overwrite","viewProcessorApplyUserOverwrite","viewProcessorApplyServerOverwrite","changedChildren","curViewCache","viewProcessorCacheHasChild","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","serverChildren","viewProcessorRevertUserWrite","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","viewProcessorAckUserWrite","oldServerNode","viewProcessorGenerateEventCacheAfterServerEvent","viewProcessorListenComplete","isLeafOrEmpty","oldCompleteSnap","viewProcessorMaybeAddValueEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","referenceConstructor","View","initialViewCache","eventRegistrations_","indexFilter","processor_","newViewProcessor","initialServerCache","initialEventCache","eventGenerator_","viewGetCompleteServerCache","view","cache","viewIsEmpty","viewRemoveEventRegistration","eventRegistration","cancelError","cancelEvents","path_1","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","concat","viewApplyOperation","viewGenerateEventsForChanges_","eventRegistrations","moves","eventGeneratorGenerateEventsForChanges","referenceConstructor$1","SyncPoint","views","syncPointApplyOperation","syncPoint","optCompleteServerCache","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointAddEventRegistration","viewAddEventRegistration","initialChanges","viewGetInitialEvents","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointHasCompleteView","entries","viewQueryId","_repo","syncPointGetQueryViews","e_3","e_3_1","syncPointGetCompleteServerCache","e_4","e_4_1","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","e_5","e_5_1","syncTreeNextQueryTag_","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","writeTreeAddOverwrite","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","writeTreeAddMerge","changeTree","syncTreeAckUserWrite","record","writeTreeGetWrite","affectedTree_1","syncTreeApplyServerOverwrite","syncTreeRemoveEventRegistration","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","maybeChildSyncPoint","childMap","views_1","_key","childViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery_","stopListening","queryToRemove","tagToRemove","syncTreeMakeQueryKey_","removedQuery","removedQueryKey","removedQueryTag","syncTreeRemoveTags_","syncTreeAddEventRegistration","foundAncestorDefaultView","pathToSyncPoint","sp","childSyncPoint","viewAlreadyExists","queryKey","queriesToStop","queries_1","childQueries","queryToStop","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","syncTreeGetServerValue","serverCacheNode","viewGetCompleteNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","viewGetServerCache","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","syncTreeApplyTaggedOperation_","syncTreeApplyTaggedListenComplete","syncTreeApplyListenComplete","toUpperCase","errorForServerCode","splitIndex","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","op","unused","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","parent","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeGetPath","childEmpty","treeIsEmpty","childExists","treeUpdateChild","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidPriority","validateFirebaseDataArg","fnName","validateFirebaseData","errorPrefix","hasDotValue_1","hasActualChild_1","last","validationPathPush","validateFirebaseMergeDataArg","errorPrefix$1","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","validateKey","argumentName","validatePathString","validateWritablePath","validateUrl","parsedUrl","isValidRootPathString","validateBoolean","bool","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","Repo","forceRestClient_","appCheckProvider_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","repo","appId","authOverride","search","isMerge","repoOnDataUpdate","repoOnConnectStatus","connectStatus","repoUpdateInfo","repoOnServerInfoUpdate","creatorFunction","statsReporter_","infoData_","infoSyncTree_","infoEvents","serverSyncTree_","repoServerTime","offset","repoGenerateServerValues","taggedChildren","raw","syncTreeApplyTaggedQueryMerge","taggedSnap","syncTreeApplyTaggedQueryOverwrite","syncTreeApplyServerMerge","repoRerunTransactions","repoLog","resolvedOnDisconnectTree","resolved","repoAbortTransactions","repoRunOnDisconnectEvents","repoGetNextWriteId","repoSetWithPriority","newVal","newNodeUnresolved","success","clearEvents","repoCallOnCompleteCallback","repoOnDisconnectCancel","repoOnDisconnectSet","repoRemoveEventCallbackForQuery","repoInterrupt","repoGetLatestState","excludeSets","repoSendReadyTransactions","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","every","transaction","setsToIgnore","txn","currentWriteId","latestState","snapToSend","latestHash","retryCount","currentOutputSnapshotRaw","dataToSend","pathToSend","callbacks","currentOutputSnapshotResolved","unwatcher","abortReason","repoSendTransactionQueue","rootMostTransactionNode","repoGetAncestorTransactionNode","abortTransaction","currentNode","currentInputSnapshot","newDataNode","oldWriteId","newNodeResolved","applyLocally","repoRerunTransactionQueue","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","order","nodeQueue","to","treeForEachAncestor","repoAbortTransactionsOnNode","lastSent","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","decodePath","queryString","results","segment","kv","decodeQuery","hostWithoutPort","dotInd","DataEvent","snapshot","ref","getEventType","exportVal","CancelEvent","CallbackContext","snapshotCallback","cancelCallback","onValue","expDataSnapshot","previousChildName","onCancel","hasCancelCallback","userCallback","OnDisconnect","cancel","wrapCallback","setWithPriority","repoOnDisconnectSetWithPriority","childrenToMerge","repoOnDisconnectUpdate","QueryImpl","_orderByCalled","ReferenceImpl","isEqual","getModularInstance","sameRepo","samePath","sameQueryIdentifier","toJSON","encodeURIComponent","pathToUrlEncodedString","validateNoPreviousOrderByCall","validateQueryEndpoints","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit","parentPath","DataSnapshot","_node","_index","childRef","exists","hasChildren","db","_checkNotDeleted","_root","refFromURL","parsedURL","thennablePushRef","pushRef","setPriority","changedKey","changedValue","writeId_1","repoUpdate","cached","err","repoGetValue","ValueEventRegistration","callbackContext","ChildEventRegistration","eventToCheck","cancelCallbackOrListenOptions","onlyOnce","userCallback_1","onceCallback","dataSnapshot","container","repoAddEventCallbackForQuery","onChildAdded","onChildChanged","onChildMoved","onChildRemoved","expCallback","QueryConstraint","QueryEndAtConstraint","_value","_apply","endAt","QueryEndBeforeConstraint","endBefore","QueryStartAtConstraint","startAt","QueryStartAfterConstraint","queryParamsStartAfter","startAfter","QueryLimitToFirstConstraint","_limit","newLimit","limitToFirst","limit","QueryLimitToLastConstraint","limitToLast","QueryOrderByChildConstraint","parsedPath","orderByChild","QueryOrderByKeyConstraint","orderByKey","QueryOrderByPriorityConstraint","orderByPriority","QueryOrderByValueConstraint","orderByValue","QueryEqualToValueConstraint","equalTo","queryConstraints","queryImpl","queryConstraints_1","queryConstraints_1_1","constraint","syncPointSetReferenceConstructor","syncTreeSetReferenceConstructor","repos","useRestClient","repoManagerDatabaseFromApp","app","authProvider","dbUrl","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","appRepos","repoManagerCreateRepo","FirebaseDatabase","_repoInternal","_instanceStarted","_rootInternal","_delete","appName","apiName","useDatabaseEmulator","tokenProvider","mockUserToken","createMockUserToken","repoManagerApplyEmulatorSettings","goOffline","goOnline","SERVER_TIMESTAMP","TransactionResult","committed","runTransaction","transactionUpdate","currentState","queueNode","priorityForNode","repoStartTransaction","OnDisconnect$1","_delegate","validateArgCount","validateCallback","objectToMerge","newObjectToMerge","TransactionResult$1","DataSnapshot$1","_database","getRef","Reference","Query","database","cancelCallbackOrContext","ret","getCancelAndContextArgs_","valueCallback","expSnapshot","validateContextObject","once","failureCallbackOrContext","cancelOrContext","getKey","getParent","getRoot","transactionResult","expPromise","expRef","Database","INTERNAL","useEmulator","ServerValue","TIMESTAMP","increment","_increment","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","repoStats","statsIncrementCounter","metric","reporter","repoStatsIncrementCounter","interceptServerData","repoInterceptServerData","initStandalone","customAuthImpl","Provider","ComponentContainer","setComponent","Component","instance","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","queryIdentifier","forceRestClient","_forceRestClient","repoManagerForceRestClient","registerComponent","instanceIdentifier","getProvider","setServiceProps","setMultipleInstances","registerVersion","module","exports","registerDatabase"],"mappings":"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","file":"d91e9ae9-c953d6f862541b87fc28.js","sourcesContent":["import firebase from '@firebase/app';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\nimport { stringify, jsonEval, contains, assert, isNodeSdk, base64, stringToByteArray, Sha1, deepCopy, base64Encode, isMobileCordova, stringLength, Deferred, safeGet, isAdmin, isValidFormat, isEmpty, isReactNative, assertionError, map, querystring, errorPrefix, getModularInstance, createMockUserToken, validateArgCount, validateCallback, validateContextObject } from '@firebase/util';\nimport { __spreadArray, __read, __values, __extends, __awaiter, __generator, __assign } from 'tslib';\nimport { Logger, LogLevel } from '@firebase/logger';\nvar name = \"@firebase/database\";\nvar version = \"0.10.5\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** The semver (www.semver.org) version of the SDK. */\n\nvar SDK_VERSION = ''; // SDK_VERSION should be set before any database instance is created\n\nfunction setSDKVersion(version) {\n  SDK_VERSION = version;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\n\n\nvar DOMStorageWrapper =\n/** @class */\nfunction () {\n  /**\r\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n   */\n  function DOMStorageWrapper(domStorage_) {\n    this.domStorage_ = domStorage_; // Use a prefix to avoid collisions with other stuff saved by the app.\n\n    this.prefix_ = 'firebase:';\n  }\n  /**\r\n   * @param key - The key to save the value under\r\n   * @param value - The value being stored, or null to remove the key.\r\n   */\n\n\n  DOMStorageWrapper.prototype.set = function (key, value) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  };\n  /**\r\n   * @returns The value that was stored under this key, or null\r\n   */\n\n\n  DOMStorageWrapper.prototype.get = function (key) {\n    var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  };\n\n  DOMStorageWrapper.prototype.remove = function (key) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  };\n\n  DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n    return this.prefix_ + name;\n  };\n\n  DOMStorageWrapper.prototype.toString = function () {\n    return this.domStorage_.toString();\n  };\n\n  return DOMStorageWrapper;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\n\n\nvar MemoryStorage =\n/** @class */\nfunction () {\n  function MemoryStorage() {\n    this.cache_ = {};\n    this.isInMemoryStorage = true;\n  }\n\n  MemoryStorage.prototype.set = function (key, value) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  };\n\n  MemoryStorage.prototype.get = function (key) {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n\n    return null;\n  };\n\n  MemoryStorage.prototype.remove = function (key) {\n    delete this.cache_[key];\n  };\n\n  return MemoryStorage;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */\n\n\nvar createStoragefor = function createStoragefor(domStorageName) {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (typeof window !== 'undefined' && typeof window[domStorageName] !== 'undefined') {\n      // Need to test cache. Just because it's here doesn't mean it works\n      var domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {} // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n\n\n  return new MemoryStorage();\n};\n/** A storage object that lasts across sessions */\n\n\nvar PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\n\nvar SessionStorage = createStoragefor('sessionStorage');\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar logClient = new Logger('@firebase/database');\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\n\nvar LUIDGenerator = function () {\n  var id = 1;\n  return function () {\n    return id++;\n  };\n}();\n/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */\n\n\nvar sha1 = function sha1(str) {\n  var utf8Bytes = stringToByteArray(str);\n  var sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  var sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nvar buildLogMessage_ = function buildLogMessage_() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = '';\n\n  for (var i = 0; i < varArgs.length; i++) {\n    var arg = varArgs[i];\n\n    if (Array.isArray(arg) || arg && typeof arg === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof arg.length === 'number') {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n\n    message += ' ';\n  }\n\n  return message;\n};\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\n\n\nvar logger = null;\n/**\r\n * Flag to check for log availability on first log message\r\n */\n\nvar firstLog_ = true;\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */\n\nvar enableLogging = function enableLogging(logger_, persistent) {\n  assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\n\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nvar log = function log() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  if (firstLog_ === true) {\n    firstLog_ = false;\n\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    var message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nvar logWrapper = function logWrapper(prefix) {\n  return function () {\n    var varArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n\n    log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\n  };\n};\n\nvar error = function error() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.error(message);\n};\n\nvar fatal = function fatal() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.error(message);\n  throw new Error(message);\n};\n\nvar warn = function warn() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.warn(message);\n};\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\n\n\nvar warnIfPageIsSecure = function warnIfPageIsSecure() {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https:') !== -1) {\n    warn('Insecure Firebase access from a secure page. ' + 'Please use https in calls to new Firebase().');\n  }\n};\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\n\n\nvar isInvalidJSONNumber = function isInvalidJSONNumber(data) {\n  return typeof data === 'number' && (data !== data || // NaN\n  data === Number.POSITIVE_INFINITY || data === Number.NEGATIVE_INFINITY);\n};\n\nvar executeWhenDOMReady = function executeWhenDOMReady(fn) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n    var called_1 = false;\n\n    var wrappedFn_1 = function wrappedFn_1() {\n      if (!document.body) {\n        setTimeout(wrappedFn_1, Math.floor(10));\n        return;\n      }\n\n      if (!called_1) {\n        called_1 = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn_1, false); // fallback to onload.\n\n      window.addEventListener('load', wrappedFn_1, false); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (document.attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      document.attachEvent('onreadystatechange', function () {\n        if (document.readyState === 'complete') {\n          wrappedFn_1();\n        }\n      }); // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      window.attachEvent('onload', wrappedFn_1); // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\n\n\nvar MIN_NAME = '[MIN_NAME]';\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\n\nvar MAX_NAME = '[MAX_NAME]';\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\n\nvar nameCompare = function nameCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    var aAsInt = tryParseInt(a),\n        bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n/**\r\n * @returns {!number} comparison result.\r\n */\n\n\nvar stringCompare = function stringCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nvar requireKey = function requireKey(key, obj) {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\n  }\n};\n\nvar ObjectToUniqueKey = function ObjectToUniqueKey(obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  var keys = []; // eslint-disable-next-line guard-for-in\n\n  for (var k in obj) {\n    keys.push(k);\n  } // Export as json, but with the keys sorted.\n\n\n  keys.sort();\n  var key = '{';\n\n  for (var i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */\n\n\nvar splitStringBySize = function splitStringBySize(str, segsize) {\n  var len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  var dataSegs = [];\n\n  for (var c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n\n  return dataSegs;\n};\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */\n\n\nfunction each(obj, fn) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */\n\n\nvar doubleToIEEE754String = function doubleToIEEE754String(v) {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  var ebits = 11,\n      fbits = 52;\n  var bias = (1 << ebits - 1) - 1;\n  var s, e, f, ln, i; // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  } // Pack sign, exponent, fraction\n\n\n  var bits = [];\n\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  var str = bits.join(''); // Return the data as a hex string. --MJL\n\n  var hexByteString = '';\n\n  for (i = 0; i < 64; i += 8) {\n    var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n\n    hexByteString = hexByteString + hexByte;\n  }\n\n  return hexByteString.toLowerCase();\n};\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\n\n\nvar isChromeExtensionContentScript = function isChromeExtensionContentScript() {\n  return !!(typeof window === 'object' && window['chrome'] && window['chrome']['extension'] && !/^chrome/.test(window.location.href));\n};\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\n\n\nvar isWindowsStoreApp = function isWindowsStoreApp() {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\n\n\nfunction errorForServerCode(code, query) {\n  var reason = 'Unknown Error';\n\n  if (code === 'too_big') {\n    reason = 'The data requested exceeds the maximum size ' + 'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  var error = new Error(code + ' at ' + query._path.toString() + ': ' + reason); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  error.code = code.toUpperCase();\n  return error;\n}\n/**\r\n * Used to test for integer-looking strings\r\n */\n\n\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\n\nvar INTEGER_32_MIN = -2147483648;\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\n\nvar INTEGER_32_MAX = 2147483647;\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\n\nvar tryParseInt = function tryParseInt(str) {\n  if (INTEGER_REGEXP_.test(str)) {\n    var intVal = Number(str);\n\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n\n  return null;\n};\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */\n\n\nvar exceptionGuard = function exceptionGuard(fn) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(function () {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      var stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */\n\n\nvar beingCrawled = function beingCrawled() {\n  var userAgent = typeof window === 'object' && window['navigator'] && window['navigator']['userAgent'] || ''; // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n\n  return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0;\n};\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */\n\n\nvar setTimeoutNonBlocking = function setTimeoutNonBlocking(fn, time) {\n  var timeout = setTimeout(fn, time); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  if (typeof timeout === 'object' && timeout['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    timeout['unref']();\n  }\n\n  return timeout;\n};\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Abstraction around AppCheck's token fetching capabilities.\r\n */\n\n\nvar AppCheckTokenProvider =\n/** @class */\nfunction () {\n  function AppCheckTokenProvider(appName_, appCheckProvider) {\n    var _this = this;\n\n    this.appName_ = appName_;\n    this.appCheckProvider = appCheckProvider;\n    this.appCheck = appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.getImmediate({\n      optional: true\n    });\n\n    if (!this.appCheck) {\n      appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.get().then(function (appCheck) {\n        return _this.appCheck = appCheck;\n      });\n    }\n  }\n\n  AppCheckTokenProvider.prototype.getToken = function (forceRefresh) {\n    var _this = this;\n\n    if (!this.appCheck) {\n      return new Promise(function (resolve, reject) {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(function () {\n          if (_this.appCheck) {\n            _this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.appCheck.getToken(forceRefresh);\n  };\n\n  AppCheckTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    var _a;\n\n    (_a = this.appCheckProvider) === null || _a === void 0 ? void 0 : _a.get().then(function (appCheck) {\n      return appCheck.addTokenListener(listener);\n    });\n  };\n\n  AppCheckTokenProvider.prototype.notifyForInvalidToken = function () {\n    warn(\"Provided AppCheck credentials for the app named \\\"\" + this.appName_ + \"\\\" \" + 'are invalid. This usually indicates your app was not initialized correctly.');\n  };\n\n  return AppCheckTokenProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\n\n\nvar FirebaseAuthTokenProvider =\n/** @class */\nfunction () {\n  function FirebaseAuthTokenProvider(appName_, firebaseOptions_, authProvider_) {\n    var _this = this;\n\n    this.appName_ = appName_;\n    this.firebaseOptions_ = firebaseOptions_;\n    this.authProvider_ = authProvider_;\n    this.auth_ = null;\n    this.auth_ = authProvider_.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth_) {\n      authProvider_.onInit(function (auth) {\n        return _this.auth_ = auth;\n      });\n    }\n  }\n\n  FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\n    var _this = this;\n\n    if (!this.auth_) {\n      return new Promise(function (resolve, reject) {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(function () {\n          if (_this.auth_) {\n            _this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(function (error) {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_.get().then(function (auth) {\n        return auth.addAuthTokenListener(listener);\n      });\n    }\n  };\n\n  FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n    this.authProvider_.get().then(function (auth) {\n      return auth.removeAuthTokenListener(listener);\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\n    var errorMessage = 'Provided authentication credentials for the app named \"' + this.appName_ + '\" are invalid. This usually indicates your app was not ' + 'initialized correctly. ';\n\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage += 'Make sure the \"credential\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage += 'Make sure the \"serviceAccount\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else {\n      errorMessage += 'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' + 'initializeApp() match the values provided for your app at ' + 'https://console.firebase.google.com/.';\n    }\n\n    warn(errorMessage);\n  };\n\n  return FirebaseAuthTokenProvider;\n}();\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\n\n\nvar EmulatorTokenProvider =\n/** @class */\nfunction () {\n  function EmulatorTokenProvider(accessToken) {\n    this.accessToken = accessToken;\n  }\n\n  EmulatorTokenProvider.prototype.getToken = function (forceRefresh) {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  };\n\n  EmulatorTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  };\n\n  EmulatorTokenProvider.prototype.removeTokenChangeListener = function (listener) {};\n\n  EmulatorTokenProvider.prototype.notifyForInvalidToken = function () {};\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n\n\n  EmulatorTokenProvider.OWNER = 'owner';\n  return EmulatorTokenProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PROTOCOL_VERSION = '5';\nvar VERSION_PARAM = 'v';\nvar TRANSPORT_SESSION_PARAM = 's';\nvar REFERER_PARAM = 'r';\nvar FORGE_REF = 'f'; // Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\n\nvar FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\nvar LAST_SESSION_PARAM = 'ls';\nvar APPLICATION_ID_PARAM = 'p';\nvar APP_CHECK_TOKEN_PARAM = 'ac';\nvar WEBSOCKET = 'websocket';\nvar LONG_POLLING = 'long_polling';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A class that holds metadata about a Repo object\r\n */\n\nvar RepoInfo =\n/** @class */\nfunction () {\n  /**\r\n   * @param host - Hostname portion of the url for the repo\r\n   * @param secure - Whether or not this repo is accessed over ssl\r\n   * @param namespace - The namespace represented by the repo\r\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n   * @param persistenceKey - Override the default session persistence storage key\r\n   */\n  function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\n    if (nodeAdmin === void 0) {\n      nodeAdmin = false;\n    }\n\n    if (persistenceKey === void 0) {\n      persistenceKey = '';\n    }\n\n    if (includeNamespaceInQueryParams === void 0) {\n      includeNamespaceInQueryParams = false;\n    }\n\n    this.secure = secure;\n    this.namespace = namespace;\n    this.webSocketOnly = webSocketOnly;\n    this.nodeAdmin = nodeAdmin;\n    this.persistenceKey = persistenceKey;\n    this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost = PersistentStorage.get('host:' + host) || this._host;\n  }\n\n  RepoInfo.prototype.isCacheableHost = function () {\n    return this.internalHost.substr(0, 2) === 's-';\n  };\n\n  RepoInfo.prototype.isCustomHost = function () {\n    return this._domain !== 'firebaseio.com' && this._domain !== 'firebaseio-demo.com';\n  };\n\n  Object.defineProperty(RepoInfo.prototype, \"host\", {\n    get: function get() {\n      return this._host;\n    },\n    set: function set(newHost) {\n      if (newHost !== this.internalHost) {\n        this.internalHost = newHost;\n\n        if (this.isCacheableHost()) {\n          PersistentStorage.set('host:' + this._host, this.internalHost);\n        }\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  RepoInfo.prototype.toString = function () {\n    var str = this.toURLString();\n\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n\n    return str;\n  };\n\n  RepoInfo.prototype.toURLString = function () {\n    var protocol = this.secure ? 'https://' : 'http://';\n    var query = this.includeNamespaceInQueryParams ? \"?ns=\" + this.namespace : '';\n    return \"\" + protocol + this.host + \"/\" + query;\n  };\n\n  return RepoInfo;\n}();\n\nfunction repoInfoNeedsQueryParam(repoInfo) {\n  return repoInfo.host !== repoInfo.internalHost || repoInfo.isCustomHost() || repoInfo.includeNamespaceInQueryParams;\n}\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\n\n\nfunction repoInfoConnectionURL(repoInfo, type, params) {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n  var connURL;\n\n  if (type === WEBSOCKET) {\n    connURL = (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL = (repoInfo.secure ? 'https://' : 'http://') + repoInfo.internalHost + '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  var pairs = [];\n  each(params, function (key, value) {\n    pairs.push(key + '=' + value);\n  });\n  return connURL + pairs.join('&');\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Tracks a collection of stats.\r\n */\n\n\nvar StatsCollection =\n/** @class */\nfunction () {\n  function StatsCollection() {\n    this.counters_ = {};\n  }\n\n  StatsCollection.prototype.incrementCounter = function (name, amount) {\n    if (amount === void 0) {\n      amount = 1;\n    }\n\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  };\n\n  StatsCollection.prototype.get = function () {\n    return deepCopy(this.counters_);\n  };\n\n  return StatsCollection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar collections = {};\nvar reporters = {};\n\nfunction statsManagerGetCollection(repoInfo) {\n  var hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\n  var hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString];\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\n\n\nvar PacketReceiver =\n/** @class */\nfunction () {\n  /**\r\n   * @param onMessage_\r\n   */\n  function PacketReceiver(onMessage_) {\n    this.onMessage_ = onMessage_;\n    this.pendingResponses = [];\n    this.currentResponseNum = 0;\n    this.closeAfterResponse = -1;\n    this.onClose = null;\n  }\n\n  PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  };\n  /**\r\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n   * browsers will respond in the same order as the requests we sent\r\n   */\n\n\n  PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n    var _this = this;\n\n    this.pendingResponses[requestNum] = data;\n\n    var _loop_1 = function _loop_1() {\n      var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n      delete this_1.pendingResponses[this_1.currentResponseNum];\n\n      var _loop_2 = function _loop_2(i) {\n        if (toProcess[i]) {\n          exceptionGuard(function () {\n            _this.onMessage_(toProcess[i]);\n          });\n        }\n      };\n\n      for (var i = 0; i < toProcess.length; ++i) {\n        _loop_2(i);\n      }\n\n      if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n        if (this_1.onClose) {\n          this_1.onClose();\n          this_1.onClose = null;\n        }\n\n        return \"break\";\n      }\n\n      this_1.currentResponseNum++;\n    };\n\n    var this_1 = this;\n\n    while (this.pendingResponses[this.currentResponseNum]) {\n      var state_1 = _loop_1();\n\n      if (state_1 === \"break\") break;\n    }\n  };\n\n  return PacketReceiver;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// URL query parameters associated with longpolling\n\n\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe'; //Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\n\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\n\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\n\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\n\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\r\n * This class manages a single long-polling connection.\r\n */\n\nvar BrowserPollConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId An identifier for this connection, used for logging\r\n   * @param repoInfo The info for the endpoint to send data to.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param appCheckToken The AppCheck token for this client.\r\n   * @param authToken The AuthToken to use for this connection.\r\n   * @param transportSessionId Optional transportSessionid if we are\r\n   * reconnecting for an existing transport session\r\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\r\n   * already created a connection previously\r\n   */\n  function BrowserPollConnection(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\n    var _this = this;\n\n    this.connId = connId;\n    this.repoInfo = repoInfo;\n    this.applicationId = applicationId;\n    this.appCheckToken = appCheckToken;\n    this.authToken = authToken;\n    this.transportSessionId = transportSessionId;\n    this.lastSessionId = lastSessionId;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.everConnected_ = false;\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n\n    this.urlFn = function (params) {\n      // Always add the token if we have one.\n      if (_this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = _this.appCheckToken;\n      }\n\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n  /**\r\n   * @param onMessage - Callback when messages arrive\r\n   * @param onDisconnect - Callback with connection lost.\r\n   */\n\n\n  BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n    this.connectTimeoutTimer_ = setTimeout(function () {\n      _this.log_('Timed out trying to connect.'); // Make sure we clear the host cache\n\n\n      _this.onClosed_();\n\n      _this.connectTimeoutTimer_ = null; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)); // Ensure we delay the creation of the iframe until the DOM is loaded.\n\n    executeWhenDOMReady(function () {\n      if (_this.isClosed_) {\n        return;\n      } //Set up a callback that gets triggered once a connection is set up.\n\n\n      _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = __read(args, 5),\n            command = _a[0],\n            arg1 = _a[1],\n            arg2 = _a[2],\n            arg3 = _a[3],\n            arg4 = _a[4];\n\n        _this.incrementIncomingBytes_(args);\n\n        if (!_this.scriptTagHolder) {\n          return; // we closed the connection.\n        }\n\n        if (_this.connectTimeoutTimer_) {\n          clearTimeout(_this.connectTimeoutTimer_);\n          _this.connectTimeoutTimer_ = null;\n        }\n\n        _this.everConnected_ = true;\n\n        if (command === FIREBASE_LONGPOLL_START_PARAM) {\n          _this.id = arg1;\n          _this.password = arg2;\n        } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n          // Don't clear the host cache. We got a response from the server, so we know it's reachable\n          if (arg1) {\n            // We aren't expecting any more data (other than what the server's already in the process of sending us\n            // through our already open polls), so don't send any more.\n            _this.scriptTagHolder.sendNewPolls = false; // arg1 in this case is the last response number sent by the server. We should try to receive\n            // all of the responses up to this one before closing\n\n            _this.myPacketOrderer.closeAfter(arg1, function () {\n              _this.onClosed_();\n            });\n          } else {\n            _this.onClosed_();\n          }\n        } else {\n          throw new Error('Unrecognized command received: ' + command);\n        }\n      }, function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = __read(args, 2),\n            pN = _a[0],\n            data = _a[1];\n\n        _this.incrementIncomingBytes_(args);\n\n        _this.myPacketOrderer.handleResponse(pN, data);\n      }, function () {\n        _this.onClosed_();\n      }, _this.urlFn); //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n\n      if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n      if (_this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\n      }\n\n      if (_this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\n      }\n\n      if (_this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\n      }\n\n      if (_this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = _this.appCheckToken;\n      }\n\n      if (typeof location !== 'undefined' && location.hostname && FORGE_DOMAIN_RE.test(location.hostname)) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n\n      var connectURL = _this.urlFn(urlParams);\n\n      _this.log_('Connecting via long-poll to ' + connectURL);\n\n      _this.scriptTagHolder.addTag(connectURL, function () {\n        /* do nothing */\n      });\n    });\n  };\n  /**\r\n   * Call this when a handshake has completed successfully and we want to consider the connection established\r\n   */\n\n\n  BrowserPollConnection.prototype.start = function () {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  };\n  /**\r\n   * Forces long polling to be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceAllow = function () {\n    BrowserPollConnection.forceAllow_ = true;\n  };\n  /**\r\n   * Forces longpolling to not be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceDisallow = function () {\n    BrowserPollConnection.forceDisallow_ = true;\n  }; // Static method, use string literal so it can be accessed in a generic way\n\n\n  BrowserPollConnection.isAvailable = function () {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return !BrowserPollConnection.forceDisallow_ && typeof document !== 'undefined' && document.createElement != null && !isChromeExtensionContentScript() && !isWindowsStoreApp();\n    }\n  };\n  /**\r\n   * No-op for polling\r\n   */\n\n\n  BrowserPollConnection.prototype.markConnectionHealthy = function () {};\n  /**\r\n   * Stops polling and cleans up the iframe\r\n   */\n\n\n  BrowserPollConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    } //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n\n\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  };\n  /**\r\n   * Triggered when this transport is closed\r\n   */\n\n\n  BrowserPollConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n   * that we've left.\r\n   */\n\n\n  BrowserPollConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n   * broken into chunks (since URLs have a small maximum length).\r\n   * @param data - The JSON data to transmit.\r\n   */\n\n\n  BrowserPollConnection.prototype.send = function (data) {\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //first, lets get the base64-encoded data\n\n    var base64data = base64Encode(dataStr); //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE); //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n      this.curSegmentNum++;\n    }\n  };\n  /**\r\n   * This is how we notify the server that we're leaving.\r\n   * We aren't able to send requests with DHTML on a window close event, but we can\r\n   * trigger XHR requests in some browsers (everything but Opera basically).\r\n   */\n\n\n  BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n    if (isNodeSdk()) {\n      return;\n    }\n\n    this.myDisconnFrame = document.createElement('iframe');\n    var urlParams = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n    document.body.appendChild(this.myDisconnFrame);\n  };\n  /**\r\n   * Used to track the bytes received by this client\r\n   */\n\n\n  BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    var bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  };\n\n  return BrowserPollConnection;\n}();\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\n\n\nvar FirebaseIFrameScriptHolder =\n/** @class */\nfunction () {\n  /**\r\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n   */\n  function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n    this.onDisconnect = onDisconnect;\n    this.urlFn = urlFn; //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n    //problems in some browsers.\n\n    this.outstandingRequests = new Set(); //A queue of the pending segments waiting for transmission to the server.\n\n    this.pendingSegs = []; //A serial number. We use this for two things:\n    // 1) A way to ensure the browser doesn't cache responses to polls\n    // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n    //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n    //    JSONP code in the order it was added to the iframe.\n\n    this.currentSerial = Math.floor(Math.random() * 100000000); // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n    // incoming data from the server that we're waiting for).\n\n    this.sendNewPolls = true;\n\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB; //Create an iframe for us to add script tags to.\n\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_(); // Set the iframe's contents.\n\n      var script = ''; // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n\n      if (this.myIFrame.src && this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n        var currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n\n      var iframeContents = '<html><body>' + script + '</body></html>';\n\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n\n        if (e.stack) {\n          log(e.stack);\n        }\n\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n  /**\r\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n   * actually use.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.createIFrame_ = function () {\n    var iframe = document.createElement('iframe');\n    iframe.style.display = 'none'; // This is necessary in order to initialize the document inside the iframe\n\n    if (document.body) {\n      document.body.appendChild(iframe);\n\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        var a = iframe.contentWindow.document;\n\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        var domain = document.domain;\n        iframe.src = \"javascript:void((function(){document.open();document.domain='\" + domain + \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    } // Get the document of the iframe in a browser-specific way.\n\n\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (iframe.document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = iframe.document; //others?\n    }\n\n    return iframe;\n  };\n  /**\r\n   * Cancel all outstanding queries and remove the frame.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.close = function () {\n    var _this = this; //Mark this iframe as dead, so no new requests are sent.\n\n\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(function () {\n        if (_this.myIFrame !== null) {\n          document.body.removeChild(_this.myIFrame);\n          _this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    } // Protect from being called recursively.\n\n\n    var onDisconnect = this.onDisconnect;\n\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  };\n  /**\r\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n   * @param id - The ID of this connection\r\n   * @param pw - The password for this connection\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true; //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n\n    while (this.newRequest_()) {}\n  };\n  /**\r\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n   * too many outstanding requests and we are still alive.\r\n   *\r\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n   * needed.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (this.alive && this.sendNewPolls && this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\n      //construct our url\n      this.currentSerial++;\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      var theURL = this.urlFn(urlParams); //Now add as much data as we can.\n\n      var curDataString = '';\n      var i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        var nextSeg = this.pendingSegs[0];\n\n        if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <= MAX_URL_DATA_SIZE) {\n          //great, the segment will fit. Lets append it.\n          var theSeg = this.pendingSegs.shift();\n          curDataString = curDataString + '&' + FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM + i + '=' + theSeg.seg + '&' + FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET + i + '=' + theSeg.ts + '&' + FIREBASE_LONGPOLL_DATA_PARAM + i + '=' + theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * Queue a packet for transmission to the server.\r\n   * @param segnum - A sequential id for this packet segment used for reassembly\r\n   * @param totalsegs - The total number of segments in this packet\r\n   * @param data - The data for this segment.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({\n      seg: segnum,\n      ts: totalsegs,\n      d: data\n    }); //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n\n    if (this.alive) {\n      this.newRequest_();\n    }\n  };\n  /**\r\n   * Add a script tag for a regular long-poll request.\r\n   * @param url - The URL of the script tag.\r\n   * @param serial - The serial number of the request.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n    var _this = this; //remember that we sent this request.\n\n\n    this.outstandingRequests.add(serial);\n\n    var doNewRequest = function doNewRequest() {\n      _this.outstandingRequests.delete(serial);\n\n      _this.newRequest_();\n    }; // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n\n\n    var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n\n    var readyStateCB = function readyStateCB() {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout); // Trigger a new request so we can continue receiving data.\n\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  };\n  /**\r\n   * Add an arbitrary script tag to the iframe.\r\n   * @param url - The URL for the script tag source.\r\n   * @param loadCB - A callback to be triggered once the script has loaded.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n    var _this = this;\n\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(function () {\n        try {\n          // if we're already closed, don't add this poll\n          if (!_this.sendNewPolls) {\n            return;\n          }\n\n          var newScript_1 = _this.myIFrame.doc.createElement('script');\n\n          newScript_1.type = 'text/javascript';\n          newScript_1.async = true;\n          newScript_1.src = url; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          newScript_1.onload = newScript_1.onreadystatechange = function () {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rstate = newScript_1.readyState;\n\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              newScript_1.onload = newScript_1.onreadystatechange = null;\n\n              if (newScript_1.parentNode) {\n                newScript_1.parentNode.removeChild(newScript_1);\n              }\n\n              loadCB();\n            }\n          };\n\n          newScript_1.onerror = function () {\n            log('Long-poll script failed to load: ' + url);\n            _this.sendNewPolls = false;\n\n            _this.close();\n          };\n\n          _this.myIFrame.doc.body.appendChild(newScript_1);\n        } catch (e) {// TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  };\n\n  return FirebaseIFrameScriptHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\n\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\n\n\nvar WebSocketConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId identifier for this transport\r\n   * @param repoInfo The info for the websocket endpoint.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param appCheckToken The App Check Token for this client.\r\n   * @param authToken The Auth Token for this client.\r\n   * @param transportSessionId Optional transportSessionId if this is connecting\r\n   * to an existing transport session\r\n   * @param lastSessionId Optional lastSessionId if there was a previous\r\n   * connection\r\n   */\n  function WebSocketConnection(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.applicationId = applicationId;\n    this.appCheckToken = appCheckToken;\n    this.authToken = authToken;\n    this.keepaliveTimer = null;\n    this.frames = null;\n    this.totalFrames = 0;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId, appCheckToken);\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n  /**\r\n   * @param repoInfo - The info for the websocket endpoint.\r\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n   * @returns connection url\r\n   */\n\n\n  WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId, appCheckToken) {\n    var urlParams = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (!isNodeSdk() && typeof location !== 'undefined' && location.hostname && FORGE_DOMAIN_RE.test(location.hostname)) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  };\n  /**\r\n   * @param onMessage - Callback when messages arrive\r\n   * @param onDisconnect - Callback with connection lost.\r\n   */\n\n\n  WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n    this.log_('Websocket connecting to ' + this.connURL);\n    this.everConnected_ = false; // Assume failure until proven otherwise.\n\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (isNodeSdk()) {\n        var device = this.nodeAdmin ? 'AdminNode' : 'Node'; // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n\n        var options = {\n          headers: {\n            'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        }; // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // It will send the authorization token.\n\n        if (this.nodeAdmin) {\n          options.headers['Authorization'] = this.authToken || '';\n        } else {\n          // If using Node without admin creds (which includes all uses of the\n          // client-side Node SDK), it will send an AppCheck token if available.\n          // Any other auth credentials will eventually be sent after the connection\n          // is established, but aren't needed here as they don't effect the initial\n          // request to establish a connection.\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken || '';\n        } // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n\n\n        var env = process['env'];\n        var proxy = this.connURL.indexOf('wss://') === 0 ? env['HTTPS_PROXY'] || env['https_proxy'] : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = {\n            origin: proxy\n          };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        var options = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || '',\n            'X-Firebase-AppCheck': this.appCheckToken || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      var error = e.message || e.data;\n\n      if (error) {\n        this.log_(error);\n      }\n\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = function () {\n      _this.log_('Websocket connected.');\n\n      _this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = function () {\n      _this.log_('Websocket connection was disconnected.');\n\n      _this.mySock = null;\n\n      _this.onClosed_();\n    };\n\n    this.mySock.onmessage = function (m) {\n      _this.handleIncomingFrame(m);\n    };\n\n    this.mySock.onerror = function (e) {\n      _this.log_('WebSocket error.  Closing connection.'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var error = e.message || e.data;\n\n      if (error) {\n        _this.log_(error);\n      }\n\n      _this.onClosed_();\n    };\n  };\n  /**\r\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n   */\n\n\n  WebSocketConnection.prototype.start = function () {};\n\n  WebSocketConnection.forceDisallow = function () {\n    WebSocketConnection.forceDisallow_ = true;\n  };\n\n  WebSocketConnection.isAvailable = function () {\n    var isOldAndroid = false;\n\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return !isOldAndroid && WebSocketImpl !== null && !WebSocketConnection.forceDisallow_;\n  };\n  /**\r\n   * Returns true if we previously failed to connect with this transport.\r\n   */\n\n\n  WebSocketConnection.previouslyFailed = function () {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return PersistentStorage.isInMemoryStorage || PersistentStorage.get('previous_websocket_failure') === true;\n  };\n\n  WebSocketConnection.prototype.markConnectionHealthy = function () {\n    PersistentStorage.remove('previous_websocket_failure');\n  };\n\n  WebSocketConnection.prototype.appendFrame_ = function (data) {\n    this.frames.push(data);\n\n    if (this.frames.length === this.totalFrames) {\n      var fullMess = this.frames.join('');\n      this.frames = null;\n      var jsonMess = jsonEval(fullMess); //handle the message\n\n      this.onMessage(jsonMess);\n    }\n  };\n  /**\r\n   * @param frameCount - The number of frames we are expecting from the server\r\n   */\n\n\n  WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  };\n  /**\r\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n   * @returns Any remaining data to be process, or null if there is none\r\n   */\n\n\n  WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n    assert(this.frames === null, 'We already have a frame buffer'); // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n\n    if (data.length <= 6) {\n      var frameCount = Number(data);\n\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n\n    this.handleNewFrameCount_(1);\n    return data;\n  };\n  /**\r\n   * Process a websocket frame that has arrived from the server.\r\n   * @param mess - The frame data\r\n   */\n\n\n  WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n\n    var data = mess['data'];\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      var remainingData = this.extractFrameCount_(data);\n\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  };\n  /**\r\n   * Send a message to the server\r\n   * @param data - The JSON object to transmit\r\n   */\n\n\n  WebSocketConnection.prototype.send = function (data) {\n    this.resetKeepAlive();\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE); //Send the length header\n\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    } //Send the actual data in segments.\n\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  };\n\n  WebSocketConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  };\n\n  WebSocketConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_(); // since this is an internal close, trigger the close listener\n\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler.\r\n   * Close the websocket and kill the connection.\r\n   */\n\n\n  WebSocketConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n   * the last activity.\r\n   */\n\n\n  WebSocketConnection.prototype.resetKeepAlive = function () {\n    var _this = this;\n\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(function () {\n      //If there has been no websocket activity for a while, send a no-op\n      if (_this.mySock) {\n        _this.sendString_('0');\n      }\n\n      _this.resetKeepAlive(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n  };\n  /**\r\n   * Send a string over the websocket.\r\n   *\r\n   * @param str - String to send.\r\n   */\n\n\n  WebSocketConnection.prototype.sendString_ = function (str) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  };\n  /**\r\n   * Number of response before we consider the connection \"healthy.\"\r\n   */\n\n\n  WebSocketConnection.responsesRequiredToBeHealthy = 2;\n  /**\r\n   * Time to wait for the connection te become healthy before giving up.\r\n   */\n\n  WebSocketConnection.healthyTimeout = 30000;\n  return WebSocketConnection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\n\n\nvar TransportManager =\n/** @class */\nfunction () {\n  /**\r\n   * @param repoInfo - Metadata around the namespace we're connecting to\r\n   */\n  function TransportManager(repoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n    get: function get() {\n      return [BrowserPollConnection, WebSocketConnection];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  TransportManager.prototype.initTransports_ = function (repoInfo) {\n    var e_1, _a;\n\n    var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\n    var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      var transports = this.transports_ = [];\n\n      try {\n        for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var transport = _c.value;\n\n          if (transport && transport['isAvailable']()) {\n            transports.push(transport);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n  /**\r\n   * @returns The constructor for the initial transport to use\r\n   */\n\n\n  TransportManager.prototype.initialTransport = function () {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  };\n  /**\r\n   * @returns The constructor for the next transport, or null\r\n   */\n\n\n  TransportManager.prototype.upgradeTransport = function () {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  };\n\n  return TransportManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Abort upgrade attempt if it takes longer than 60s.\n\n\nvar UPGRADE_TIMEOUT = 60000; // For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\n\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000; // If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\n\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\n\nvar Connection =\n/** @class */\nfunction () {\n  /**\r\n   * @param id - an id for this connection\r\n   * @param repoInfo_ - the info for the endpoint to connect to\r\n   * @param applicationId_ - the Firebase App ID for this project\r\n   * @param appCheckToken_ - The App Check Token for this device.\r\n   * @param authToken_ - The auth token for this session.\r\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n   */\n  function Connection(id, repoInfo_, applicationId_, appCheckToken_, authToken_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n    this.id = id;\n    this.repoInfo_ = repoInfo_;\n    this.applicationId_ = applicationId_;\n    this.appCheckToken_ = appCheckToken_;\n    this.authToken_ = authToken_;\n    this.onMessage_ = onMessage_;\n    this.onReady_ = onReady_;\n    this.onDisconnect_ = onDisconnect_;\n    this.onKill_ = onKill_;\n    this.lastSessionId = lastSessionId;\n    this.connectionCount = 0;\n    this.pendingDataMessages = [];\n    this.state_ = 0\n    /* CONNECTING */\n    ;\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n  /**\r\n   * Starts a connection attempt\r\n   */\n\n\n  Connection.prototype.start_ = function () {\n    var _this = this;\n\n    var conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.lastSessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessageReceived = this.connReceiver_(this.conn_);\n    var onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n    /*\r\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n     * still have the context of your originating frame.\r\n     */\n\n    setTimeout(function () {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n    var healthyTimeoutMS = conn['healthyTimeout'] || 0;\n\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(function () {\n        _this.healthyTimeout_ = null;\n\n        if (!_this.isHealthy_) {\n          if (_this.conn_ && _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has received ' + _this.conn_.bytesReceived + ' bytes.  Marking connection healthy.');\n\n            _this.isHealthy_ = true;\n\n            _this.conn_.markConnectionHealthy();\n          } else if (_this.conn_ && _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has sent ' + _this.conn_.bytesSent + ' bytes.  Leaving connection alive.'); // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n\n          } else {\n            _this.log_('Closing unhealthy connection after timeout.');\n\n            _this.close();\n          }\n        } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      }, Math.floor(healthyTimeoutMS));\n    }\n  };\n\n  Connection.prototype.nextTransportId_ = function () {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  };\n\n  Connection.prototype.disconnReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (everConnected) {\n      if (conn === _this.conn_) {\n        _this.onConnectionLost_(everConnected);\n      } else if (conn === _this.secondaryConn_) {\n        _this.log_('Secondary connection lost.');\n\n        _this.onSecondaryConnectionLost_();\n      } else {\n        _this.log_('closing an old connection');\n      }\n    };\n  };\n\n  Connection.prototype.connReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (message) {\n      if (_this.state_ !== 2\n      /* DISCONNECTED */\n      ) {\n          if (conn === _this.rx_) {\n            _this.onPrimaryMessageReceived_(message);\n          } else if (conn === _this.secondaryConn_) {\n            _this.onSecondaryMessageReceived_(message);\n          } else {\n            _this.log_('message on old connection');\n          }\n        }\n    };\n  };\n  /**\r\n   * @param dataMsg - An arbitrary data message to be sent to the server\r\n   */\n\n\n  Connection.prototype.sendRequest = function (dataMsg) {\n    // wrap in a data message envelope and send it on\n    var msg = {\n      t: 'd',\n      d: dataMsg\n    };\n    this.sendData_(msg);\n  };\n\n  Connection.prototype.tryCleanupConnection = function () {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null; // the server will shutdown the old connection\n    }\n  };\n\n  Connection.prototype.onSecondaryControl_ = function (controlData) {\n    if (MESSAGE_TYPE in controlData) {\n      var cmd = controlData[MESSAGE_TYPE];\n\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close(); // If we were already using this connection for something, than we need to fully close\n\n        if (this.tx_ === this.secondaryConn_ || this.rx_ === this.secondaryConn_) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  };\n\n  Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onSecondaryControl_(data);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  };\n\n  Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({\n        t: 'c',\n        d: {\n          t: PING,\n          d: {}\n        }\n      });\n    }\n  };\n\n  Connection.prototype.proceedWithUpgrade_ = function () {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start(); // send ack\n\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({\n      t: 'c',\n      d: {\n        t: SWITCH_ACK,\n        d: {}\n      }\n    }); // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n\n    this.log_('Ending transmission on primary');\n    this.conn_.send({\n      t: 'c',\n      d: {\n        t: END_TRANSMISSION,\n        d: {}\n      }\n    });\n    this.tx_ = this.secondaryConn_;\n    this.tryCleanupConnection();\n  };\n\n  Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onControl_(data);\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  };\n\n  Connection.prototype.onDataMessage_ = function (message) {\n    this.onPrimaryResponse_(); // We don't do anything with data messages, just kick them up a level\n\n    this.onMessage_(message);\n  };\n\n  Connection.prototype.onPrimaryResponse_ = function () {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  };\n\n  Connection.prototype.onControl_ = function (controlData) {\n    var cmd = requireKey(MESSAGE_TYPE, controlData);\n\n    if (MESSAGE_DATA in controlData) {\n      var payload = controlData[MESSAGE_DATA];\n\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(payload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n\n        for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  };\n  /**\r\n   * @param handshake - The handshake data returned from the server\r\n   */\n\n\n  Connection.prototype.onHandshake_ = function (handshake) {\n    var timestamp = handshake.ts;\n    var version = handshake.v;\n    var host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host; // if we've already closed the connection, then don't bother trying to progress further\n\n    if (this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.conn_.start();\n        this.onConnectionEstablished_(this.conn_, timestamp);\n\n        if (PROTOCOL_VERSION !== version) {\n          warn('Protocol version mismatch detected');\n        } // TODO: do we want to upgrade? when? maybe a delay?\n\n\n        this.tryStartUpgrade_();\n      }\n  };\n\n  Connection.prototype.tryStartUpgrade_ = function () {\n    var conn = this.transportManager_.upgradeTransport();\n\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  };\n\n  Connection.prototype.startUpgrade_ = function (conn) {\n    var _this = this;\n\n    this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, this.sessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.secondaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessage = this.connReceiver_(this.secondaryConn_);\n    var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect); // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n\n    setTimeoutNonBlocking(function () {\n      if (_this.secondaryConn_) {\n        _this.log_('Timed out trying to upgrade.');\n\n        _this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  };\n\n  Connection.prototype.onReset_ = function (host) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host; // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n\n    if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.close();\n      } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  };\n\n  Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n    var _this = this;\n\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = 1\n    /* CONNECTED */\n    ;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    } // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n\n\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(function () {\n        _this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  };\n\n  Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('sending ping on primary.');\n        this.sendData_({\n          t: 'c',\n          d: {\n            t: PING,\n            d: {}\n          }\n        });\n      }\n  };\n\n  Connection.prototype.onSecondaryConnectionLost_ = function () {\n    var conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  };\n  /**\r\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n   * we should flush the host cache\r\n   */\n\n\n  Connection.prototype.onConnectionLost_ = function (everConnected) {\n    this.conn_ = null; // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n\n    if (!everConnected && this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.log_('Realtime connection failed.'); // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n\n        if (this.repoInfo_.isCacheableHost()) {\n          PersistentStorage.remove('host:' + this.repoInfo_.host); // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n\n          this.repoInfo_.internalHost = this.repoInfo_.host;\n        }\n      } else if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('Realtime connection lost.');\n      }\n\n    this.close();\n  };\n\n  Connection.prototype.onConnectionShutdown_ = function (reason) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    } // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n\n\n    this.onDisconnect_ = null;\n    this.close();\n  };\n\n  Connection.prototype.sendData_ = function (data) {\n    if (this.state_ !== 1\n    /* CONNECTED */\n    ) {\n        throw 'Connection is not connected';\n      } else {\n      this.tx_.send(data);\n    }\n  };\n  /**\r\n   * Cleans up this connection, calling the appropriate callbacks\r\n   */\n\n\n  Connection.prototype.close = function () {\n    if (this.state_ !== 2\n    /* DISCONNECTED */\n    ) {\n        this.log_('Closing realtime connection.');\n        this.state_ = 2\n        /* DISCONNECTED */\n        ;\n        this.closeConnections_();\n\n        if (this.onDisconnect_) {\n          this.onDisconnect_();\n          this.onDisconnect_ = null;\n        }\n      }\n  };\n\n  Connection.prototype.closeConnections_ = function () {\n    this.log_('Shutting down all connections');\n\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  };\n\n  return Connection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\n\n\nvar ServerActions =\n/** @class */\nfunction () {\n  function ServerActions() {}\n\n  ServerActions.prototype.put = function (pathString, data, onComplete, hash) {};\n\n  ServerActions.prototype.merge = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * Refreshes the auth token for the current connection.\r\n   * @param token - The authentication token\r\n   */\n\n\n  ServerActions.prototype.refreshAuthToken = function (token) {};\n  /**\r\n   * Refreshes the app check token for the current connection.\r\n   * @param token The app check token\r\n   */\n\n\n  ServerActions.prototype.refreshAppCheckToken = function (token) {};\n\n  ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) {};\n\n  ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) {};\n\n  ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) {};\n\n  ServerActions.prototype.reportStats = function (stats) {};\n\n  return ServerActions;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\n\n\nvar EventEmitter =\n/** @class */\nfunction () {\n  function EventEmitter(allowedEvents_) {\n    this.allowedEvents_ = allowedEvents_;\n    this.listeners_ = {};\n    assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n  }\n  /**\r\n   * To be called by derived classes to trigger events.\r\n   */\n\n\n  EventEmitter.prototype.trigger = function (eventType) {\n    var varArgs = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      varArgs[_i - 1] = arguments[_i];\n    }\n\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      var listeners = __spreadArray([], __read(this.listeners_[eventType]));\n\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  };\n\n  EventEmitter.prototype.on = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({\n      callback: callback,\n      context: context\n    });\n    var eventData = this.getInitialEvent(eventType);\n\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  };\n\n  EventEmitter.prototype.off = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    var listeners = this.listeners_[eventType] || [];\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i].callback === callback && (!context || context === listeners[i].context)) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  };\n\n  EventEmitter.prototype.validateEventType_ = function (eventType) {\n    assert(this.allowedEvents_.find(function (et) {\n      return et === eventType;\n    }), 'Unknown event: ' + eventType);\n  };\n\n  return EventEmitter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\n\n\nvar OnlineMonitor =\n/** @class */\nfunction (_super) {\n  __extends(OnlineMonitor, _super);\n\n  function OnlineMonitor() {\n    var _this = _super.call(this, ['online']) || this;\n\n    _this.online_ = true; // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n\n    if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined' && !isMobileCordova()) {\n      window.addEventListener('online', function () {\n        if (!_this.online_) {\n          _this.online_ = true;\n\n          _this.trigger('online', true);\n        }\n      }, false);\n      window.addEventListener('offline', function () {\n        if (_this.online_) {\n          _this.online_ = false;\n\n          _this.trigger('online', false);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  OnlineMonitor.getInstance = function () {\n    return new OnlineMonitor();\n  };\n\n  OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  };\n\n  OnlineMonitor.prototype.currentlyOnline = function () {\n    return this.online_;\n  };\n\n  return OnlineMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** Maximum key depth. */\n\n\nvar MAX_PATH_DEPTH = 32;\n/** Maximum number of (UTF8) bytes in a Firebase path. */\n\nvar MAX_PATH_LENGTH_BYTES = 768;\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\n\nvar Path =\n/** @class */\nfunction () {\n  /**\r\n   * @param pathOrString - Path string to parse, or another path, or the raw\r\n   * tokens array\r\n   */\n  function Path(pathOrString, pieceNum) {\n    if (pieceNum === void 0) {\n      this.pieces_ = pathOrString.split('/'); // Remove empty pieces.\n\n      var copyTo = 0;\n\n      for (var i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n\n      this.pieces_.length = copyTo;\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString;\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  Path.prototype.toString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  };\n\n  return Path;\n}();\n\nfunction newEmptyPath() {\n  return new Path('');\n}\n\nfunction pathGetFront(path) {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n/**\r\n * @returns The number of segments in this path\r\n */\n\n\nfunction pathGetLength(path) {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nfunction pathPopFront(path) {\n  var pieceNum = path.pieceNum_;\n\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n\n  return new Path(path.pieces_, pieceNum);\n}\n\nfunction pathGetBack(path) {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nfunction pathToUrlEncodedString(path) {\n  var pathString = '';\n\n  for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\n\n\nfunction pathSlice(path, begin) {\n  if (begin === void 0) {\n    begin = 0;\n  }\n\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nfunction pathParent(path) {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  var pieces = [];\n\n  for (var i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nfunction pathChild(path, childPathObj) {\n  var pieces = [];\n\n  for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    var childPieces = childPathObj.split('/');\n\n    for (var i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n/**\r\n * @returns True if there are no segments in this path\r\n */\n\n\nfunction pathIsEmpty(path) {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n/**\r\n * @returns The path from outerPath to innerPath\r\n */\n\n\nfunction newRelativePath(outerPath, innerPath) {\n  var outer = pathGetFront(outerPath),\n      inner = pathGetFront(innerPath);\n\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error('INTERNAL ERROR: innerPath (' + innerPath + ') is not within ' + 'outerPath (' + outerPath + ')');\n  }\n}\n/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\n\n\nfunction pathCompare(left, right) {\n  var leftKeys = pathSlice(left, 0);\n  var rightKeys = pathSlice(right, 0);\n\n  for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    var cmp = nameCompare(leftKeys[i], rightKeys[i]);\n\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n/**\r\n * @returns true if paths are the same.\r\n */\n\n\nfunction pathEquals(path, other) {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (var i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\r\n * @returns True if this path is a parent (or the same as) other\r\n */\n\n\nfunction pathContains(path, other) {\n  var i = path.pieceNum_;\n  var j = other.pieceNum_;\n\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n\n    ++i;\n    ++j;\n  }\n\n  return true;\n}\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\n\n\nvar ValidationPath =\n/** @class */\nfunction () {\n  /**\r\n   * @param path - Initial Path.\r\n   * @param errorPrefix_ - Prefix for any error messages.\r\n   */\n  function ValidationPath(path, errorPrefix_) {\n    this.errorPrefix_ = errorPrefix_;\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (var i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n\n    validationPathCheckValid(this);\n  }\n\n  return ValidationPath;\n}();\n\nfunction validationPathPush(validationPath, child) {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nfunction validationPathPop(validationPath) {\n  var last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last); // Un-count the previous '/'\n\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath) {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(validationPath.errorPrefix_ + 'has a key path longer than ' + MAX_PATH_LENGTH_BYTES + ' bytes (' + validationPath.byteLength_ + ').');\n  }\n\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(validationPath.errorPrefix_ + 'path specified exceeds the maximum depth that can be written (' + MAX_PATH_DEPTH + ') or object contains a cycle ' + validationPathToErrorString(validationPath));\n  }\n}\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\n\n\nfunction validationPathToErrorString(validationPath) {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar VisibilityMonitor =\n/** @class */\nfunction (_super) {\n  __extends(VisibilityMonitor, _super);\n\n  function VisibilityMonitor() {\n    var _this = _super.call(this, ['visible']) || this;\n\n    var hidden;\n    var visibilityChange;\n\n    if (typeof document !== 'undefined' && typeof document.addEventListener !== 'undefined') {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    } // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n\n\n    _this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(visibilityChange, function () {\n        var visible = !document[hidden];\n\n        if (visible !== _this.visible_) {\n          _this.visible_ = visible;\n\n          _this.trigger('visible', visible);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  VisibilityMonitor.getInstance = function () {\n    return new VisibilityMonitor();\n  };\n\n  VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  };\n\n  return VisibilityMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\n\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\n\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\n\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill'; // If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\n\nvar INVALID_TOKEN_THRESHOLD = 3;\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\n\nvar PersistentConnection =\n/** @class */\nfunction (_super) {\n  __extends(PersistentConnection, _super);\n  /**\r\n   * @param repoInfo_ - Data about the namespace we are connecting to\r\n   * @param applicationId_ - The Firebase App ID for this project\r\n   * @param onDataUpdate_ - A callback for new data from the server\r\n   */\n\n\n  function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, appCheckTokenProvider_, authOverride_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.applicationId_ = applicationId_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.onConnectStatus_ = onConnectStatus_;\n    _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    _this.appCheckTokenProvider_ = appCheckTokenProvider_;\n    _this.authOverride_ = authOverride_; // Used for diagnostic logging.\n\n    _this.id = PersistentConnection.nextPersistentConnectionId_++;\n    _this.log_ = logWrapper('p:' + _this.id + ':');\n    _this.interruptReasons_ = {};\n    _this.listens = new Map();\n    _this.outstandingPuts_ = [];\n    _this.outstandingGets_ = [];\n    _this.outstandingPutCount_ = 0;\n    _this.outstandingGetCount_ = 0;\n    _this.onDisconnectRequestQueue_ = [];\n    _this.connected_ = false;\n    _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n    _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n    _this.securityDebugCallback_ = null;\n    _this.lastSessionId = null;\n    _this.establishConnectionTimer_ = null;\n    _this.visible_ = false; // Before we get connected, we keep a queue of pending messages to send.\n\n    _this.requestCBHash_ = {};\n    _this.requestNumber_ = 0;\n    _this.realtime_ = null;\n    _this.authToken_ = null;\n    _this.appCheckToken_ = null;\n    _this.forceTokenRefresh_ = false;\n    _this.invalidAuthTokenCount_ = 0;\n    _this.invalidAppCheckTokenCount_ = 0;\n    _this.firstConnection_ = true;\n    _this.lastConnectionAttemptTime_ = null;\n    _this.lastConnectionEstablishedTime_ = null;\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n    }\n\n    VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n    }\n\n    return _this;\n  }\n\n  PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n    var curReqNum = ++this.requestNumber_;\n    var msg = {\n      r: curReqNum,\n      a: action,\n      b: body\n    };\n    this.log_(stringify(msg));\n    assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n    this.realtime_.sendRequest(msg);\n\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  };\n\n  PersistentConnection.prototype.get = function (query) {\n    var _this = this;\n\n    this.initConnection_();\n    var deferred = new Deferred();\n    var request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    var outstandingGet = {\n      action: 'g',\n      request: request,\n      onComplete: function onComplete(message) {\n        var payload = message['d'];\n\n        if (message['s'] === 'ok') {\n          _this.onDataUpdate_(request['p'], payload,\n          /*isMerge*/\n          false,\n          /*tag*/\n          null);\n\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    var index = this.outstandingGets_.length - 1;\n\n    if (!this.connected_) {\n      setTimeout(function () {\n        var get = _this.outstandingGets_[index];\n\n        if (get === undefined || outstandingGet !== get) {\n          return;\n        }\n\n        delete _this.outstandingGets_[index];\n        _this.outstandingGetCount_--;\n\n        if (_this.outstandingGetCount_ === 0) {\n          _this.outstandingGets_ = [];\n        }\n\n        _this.log_('get ' + index + ' timed out on connection');\n\n        deferred.reject(new Error('Client is offline.'));\n      }, GET_CONNECT_TIMEOUT);\n    }\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  };\n\n  PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    this.initConnection_();\n    var queryId = query._queryIdentifier;\n\n    var pathString = query._path.toString();\n\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n\n    assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'listen() called for non-default but complete query');\n    assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\n    var listenSpec = {\n      onComplete: onComplete,\n      hashFn: currentHashFn,\n      query: query,\n      tag: tag\n    };\n    this.listens.get(pathString).set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  };\n\n  PersistentConnection.prototype.sendGet_ = function (index) {\n    var _this = this;\n\n    var get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, function (message) {\n      delete _this.outstandingGets_[index];\n      _this.outstandingGetCount_--;\n\n      if (_this.outstandingGetCount_ === 0) {\n        _this.outstandingGets_ = [];\n      }\n\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  };\n\n  PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n    var _this = this;\n\n    var query = listenSpec.query;\n\n    var pathString = query._path.toString();\n\n    var queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'q'; // Only bother to send query if it's non-default.\n\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[\n    /*hash*/\n    'h'] = listenSpec.hashFn();\n    this.sendRequest(action, req, function (message) {\n      var payload = message[\n      /*data*/\n      'd'];\n      var status = message[\n      /*status*/\n      's']; // print warnings in any case...\n\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      var currentListenSpec = _this.listens.get(pathString) && _this.listens.get(pathString).get(queryId); // only trigger actions if the listen hasn't been removed and readded\n\n\n      if (currentListenSpec === listenSpec) {\n        _this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          _this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  };\n\n  PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var warnings = safeGet(payload, 'w');\n\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        var indexSpec = '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n\n        var indexPath = query._path.toString();\n\n        warn(\"Using an unspecified index. Your data will be downloaded and \" + (\"filtered on the client. Consider adding \" + indexSpec + \" at \") + (indexPath + \" to your security rules for better performance.\"));\n      }\n    }\n  };\n\n  PersistentConnection.prototype.refreshAuthToken = function (token) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, function () {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  };\n\n  PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    var isFirebaseSecret = credential && credential.length === 40;\n\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  };\n\n  PersistentConnection.prototype.refreshAppCheckToken = function (token) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, function () {});\n      }\n    }\n  };\n  /**\r\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n   * a auth revoked (the connection is closed).\r\n   */\n\n\n  PersistentConnection.prototype.tryAuth = function () {\n    var _this = this;\n\n    if (this.connected_ && this.authToken_) {\n      var token_1 = this.authToken_;\n      var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\n      var requestData = {\n        cred: token_1\n      };\n\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n\n      this.sendRequest(authMethod, requestData, function (res) {\n        var status = res[\n        /*status*/\n        's'];\n        var data = res[\n        /*data*/\n        'd'] || 'error';\n\n        if (_this.authToken_ === token_1) {\n          if (status === 'ok') {\n            _this.invalidAuthTokenCount_ = 0;\n          } else {\n            // Triggers reconnect and force refresh for auth token\n            _this.onAuthRevoked_(status, data);\n          }\n        }\n      });\n    }\n  };\n  /**\r\n   * Attempts to authenticate with the given token. If the authentication\r\n   * attempt fails, it's triggered like the token was revoked (the connection is\r\n   * closed).\r\n   */\n\n\n  PersistentConnection.prototype.tryAppCheck = function () {\n    var _this = this;\n\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest('appcheck', {\n        'token': this.appCheckToken_\n      }, function (res) {\n        var status = res[\n        /*status*/\n        's'];\n        var data = res[\n        /*data*/\n        'd'] || 'error';\n\n        if (status === 'ok') {\n          _this.invalidAppCheckTokenCount_ = 0;\n        } else {\n          _this.onAppCheckRevoked_(status, data);\n        }\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.unlisten = function (query, tag) {\n    var pathString = query._path.toString();\n\n    var queryId = query._queryIdentifier;\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n    assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'unlisten() called for non-default but complete query');\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  };\n\n  PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'n'; // Only bother sending queryId if it's non-default.\n\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  };\n\n  PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'o',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'om',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'oc',\n        data: null,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, function (response) {\n      if (onComplete) {\n        setTimeout(function () {\n          onComplete(response[\n          /*status*/\n          's'], response[\n          /* data */\n          'd']);\n        }, Math.floor(0));\n      }\n    });\n  };\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  };\n\n  PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  };\n\n  PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n    this.initConnection_();\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n\n    if (hash !== undefined) {\n      request[\n      /*hash*/\n      'h'] = hash;\n    } // TODO: Only keep track of the most recent put for a given path?\n\n\n    this.outstandingPuts_.push({\n      action: action,\n      request: request,\n      onComplete: onComplete\n    });\n    this.outstandingPutCount_++;\n    var index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  };\n\n  PersistentConnection.prototype.sendPut_ = function (index) {\n    var _this = this;\n\n    var action = this.outstandingPuts_[index].action;\n    var request = this.outstandingPuts_[index].request;\n    var onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n    this.sendRequest(action, request, function (message) {\n      _this.log_(action + ' response', message);\n\n      delete _this.outstandingPuts_[index];\n      _this.outstandingPutCount_--; // Clean up array occasionally.\n\n      if (_this.outstandingPutCount_ === 0) {\n        _this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(message[\n        /*status*/\n        's'], message[\n        /* data */\n        'd']);\n      }\n    });\n  };\n\n  PersistentConnection.prototype.reportStats = function (stats) {\n    var _this = this; // If we're not connected, we just drop the stats.\n\n\n    if (this.connected_) {\n      var request = {\n        /*counters*/\n        c: stats\n      };\n      this.log_('reportStats', request);\n      this.sendRequest(\n      /*stats*/\n      's', request, function (result) {\n        var status = result[\n        /*status*/\n        's'];\n\n        if (status !== 'ok') {\n          var errorReason = result[\n          /* data */\n          'd'];\n\n          _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDataMessage_ = function (message) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      var reqNum = message['r'];\n      var onResponse = this.requestCBHash_[reqNum];\n\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[\n        /*body*/\n        'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'], message['b']);\n    }\n  };\n\n  PersistentConnection.prototype.onDataPush_ = function (action, body) {\n    this.log_('handleServerMessage', action, body);\n\n    if (action === 'd') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge*/\n      false, body['t']);\n    } else if (action === 'm') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge=*/\n      true, body['t']);\n    } else if (action === 'c') {\n      this.onListenRevoked_(body[\n      /*path*/\n      'p'], body[\n      /*query*/\n      'q']);\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(body[\n      /*status code*/\n      's'], body[\n      /* explanation */\n      'd']);\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(body[\n      /*status code*/\n      's'], body[\n      /* explanation */\n      'd']);\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error('Unrecognized action received from server: ' + stringify(action) + '\\nAre you using the latest client?');\n    }\n  };\n\n  PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  };\n\n  PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n    var _this = this;\n\n    assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    } // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n\n    this.establishConnectionTimer_ = setTimeout(function () {\n      _this.establishConnectionTimer_ = null;\n\n      _this.establishConnection_(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(timeout));\n  };\n\n  PersistentConnection.prototype.initConnection_ = function () {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  };\n\n  PersistentConnection.prototype.onVisible_ = function (visible) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (visible && !this.visible_ && this.reconnectDelay_ === this.maxReconnectDelay_) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n\n    this.visible_ = visible;\n  };\n\n  PersistentConnection.prototype.onOnline_ = function (online) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null; // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n\n    this.cancelSentTransactions_(); // Clear out the pending requests.\n\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n      var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n      reconnectDelay = Math.random() * reconnectDelay;\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay); // Adjust reconnect delay for next time.\n\n      this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n    }\n\n    this.onConnectStatus_(false);\n  };\n\n  PersistentConnection.prototype.establishConnection_ = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var onDataMessage, onReady, onDisconnect_1, connId, lastSessionId, canceled_1, connection_1, closeFn, sendRequestFn, forceRefresh, _a, authToken, appCheckToken, error_1;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!this.shouldReconnect_()) return [3\n            /*break*/\n            , 4];\n            this.log_('Making a connection attempt');\n            this.lastConnectionAttemptTime_ = new Date().getTime();\n            this.lastConnectionEstablishedTime_ = null;\n            onDataMessage = this.onDataMessage_.bind(this);\n            onReady = this.onReady_.bind(this);\n            onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n            connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n            lastSessionId = this.lastSessionId;\n            canceled_1 = false;\n            connection_1 = null;\n\n            closeFn = function closeFn() {\n              if (connection_1) {\n                connection_1.close();\n              } else {\n                canceled_1 = true;\n                onDisconnect_1();\n              }\n            };\n\n            sendRequestFn = function sendRequestFn(msg) {\n              assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n              connection_1.sendRequest(msg);\n            };\n\n            this.realtime_ = {\n              close: closeFn,\n              sendRequest: sendRequestFn\n            };\n            forceRefresh = this.forceTokenRefresh_;\n            this.forceTokenRefresh_ = false;\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , Promise.all([this.authTokenProvider_.getToken(forceRefresh), this.appCheckTokenProvider_.getToken(forceRefresh)])];\n\n          case 2:\n            _a = __read.apply(void 0, [_b.sent(), 2]), authToken = _a[0], appCheckToken = _a[1];\n\n            if (!canceled_1) {\n              log('getToken() completed. Creating connection.');\n              this.authToken_ = authToken && authToken.accessToken;\n              this.appCheckToken_ = appCheckToken && appCheckToken.token;\n              connection_1 = new Connection(connId, this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, onDataMessage, onReady, onDisconnect_1,\n              /* onKill= */\n              function (reason) {\n                warn(reason + ' (' + _this.repoInfo_.toString() + ')');\n\n                _this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n              }, lastSessionId);\n            } else {\n              log('getToken() completed but was canceled');\n            }\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_1 = _b.sent();\n            this.log_('Failed to get token: ' + error_1);\n\n            if (!canceled_1) {\n              if (this.repoInfo_.nodeAdmin) {\n                // This may be a critical error for the Admin Node.js SDK, so log a warning.\n                // But getToken() may also just have temporarily failed, so we still want to\n                // continue retrying.\n                warn(error_1);\n              }\n\n              closeFn();\n            }\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  PersistentConnection.prototype.interrupt = function (reason) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.resume = function (reason) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  };\n\n  PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n    var delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({\n      serverTimeOffset: delta\n    });\n  };\n\n  PersistentConnection.prototype.cancelSentTransactions_ = function () {\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      var put = this.outstandingPuts_[i];\n\n      if (put &&\n      /*hash*/\n      'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    } // Clean up array occasionally.\n\n\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  };\n\n  PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    var queryId;\n\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(function (q) {\n        return ObjectToUniqueKey(q);\n      }).join('$');\n    }\n\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  };\n\n  PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n    var normalizedPathString = new Path(pathString).toString(); // normalize path.\n\n    var listen;\n\n    if (this.listens.has(normalizedPathString)) {\n      var map = this.listens.get(normalizedPathString);\n      listen = map.get(queryId);\n      map.delete(queryId);\n\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n\n    return listen;\n  };\n\n  PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS; // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onAppCheckRevoked_ = function (statusCode, explanation) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true; // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n      }\n    }\n  };\n\n  PersistentConnection.prototype.restoreState_ = function () {\n    var e_1, _a, e_2, _b; //Re-authenticate ourselves if we have a credential stored.\n\n\n    this.tryAuth();\n    this.tryAppCheck();\n\n    try {\n      // Puts depend on having received the corresponding data update from the server before they complete, so we must\n      // make sure to send listens before puts.\n      for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var queries = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var listenSpec = _f.value;\n            this.sendListen_(listenSpec);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      var request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n    }\n\n    for (var i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  };\n  /**\r\n   * Sends client stats for first connection\r\n   */\n\n\n  PersistentConnection.prototype.sendConnectStats_ = function () {\n    var stats = {};\n    var clientName = 'js';\n\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n\n    this.reportStats(stats);\n  };\n\n  PersistentConnection.prototype.shouldReconnect_ = function () {\n    var online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  };\n\n  PersistentConnection.nextPersistentConnectionId_ = 0;\n  /**\r\n   * Counter for number of connections created. Mainly used for tagging in the logs\r\n   */\n\n  PersistentConnection.nextConnectionId_ = 0;\n  return PersistentConnection;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar NamedNode =\n/** @class */\nfunction () {\n  function NamedNode(name, node) {\n    this.name = name;\n    this.node = node;\n  }\n\n  NamedNode.Wrap = function (name, node) {\n    return new NamedNode(name, node);\n  };\n\n  return NamedNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Index =\n/** @class */\nfunction () {\n  function Index() {}\n  /**\r\n   * @returns A standalone comparison function for\r\n   * this index\r\n   */\n\n\n  Index.prototype.getCompare = function () {\n    return this.compare.bind(this);\n  };\n  /**\r\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n   *\r\n   *\r\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n   */\n\n\n  Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n    var oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    var newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  };\n  /**\r\n   * @returns a node wrapper that will sort equal to or less than\r\n   * any other node wrapper, using this index\r\n   */\n\n\n  Index.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  return Index;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __EMPTY_NODE;\n\nvar KeyIndex =\n/** @class */\nfunction (_super) {\n  __extends(KeyIndex, _super);\n\n  function KeyIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n    get: function get() {\n      return __EMPTY_NODE;\n    },\n    set: function set(val) {\n      __EMPTY_NODE = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  KeyIndex.prototype.compare = function (a, b) {\n    return nameCompare(a.name, b.name);\n  };\n\n  KeyIndex.prototype.isDefinedOn = function (node) {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  };\n\n  KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return false; // The key for a node never changes.\n  };\n\n  KeyIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  KeyIndex.prototype.maxPost = function () {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  };\n\n  KeyIndex.prototype.makePost = function (indexValue, name) {\n    assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.'); // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  };\n  /**\r\n   * @returns String representation for inclusion in a query spec\r\n   */\n\n\n  KeyIndex.prototype.toString = function () {\n    return '.key';\n  };\n\n  return KeyIndex;\n}(Index);\n\nvar KEY_INDEX = new KeyIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An iterator over an LLRBNode.\r\n */\n\nvar SortedMapIterator =\n/** @class */\nfunction () {\n  /**\r\n   * @param node - Node to iterate.\r\n   * @param isReverse_ - Whether or not to iterate in reverse\r\n   */\n  function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n    if (resultGenerator_ === void 0) {\n      resultGenerator_ = null;\n    }\n\n    this.isReverse_ = isReverse_;\n    this.resultGenerator_ = resultGenerator_;\n    this.nodeStack_ = [];\n    var cmp = 1;\n\n    while (!node.isEmpty()) {\n      node = node;\n      cmp = startKey ? comparator(node.key, startKey) : 1; // flip the comparison if we're going in reverse\n\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  SortedMapIterator.prototype.getNext = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_.pop();\n    var result;\n\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = {\n        key: node.key,\n        value: node.value\n      };\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  };\n\n  SortedMapIterator.prototype.hasNext = function () {\n    return this.nodeStack_.length > 0;\n  };\n\n  SortedMapIterator.prototype.peek = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_[this.nodeStack_.length - 1];\n\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return {\n        key: node.key,\n        value: node.value\n      };\n    }\n  };\n\n  return SortedMapIterator;\n}();\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\n\n\nvar LLRBNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param key - Key associated with this node.\r\n   * @param value - Value associated with this node.\r\n   * @param color - Whether this node is red.\r\n   * @param left - Left child.\r\n   * @param right - Right child.\r\n   */\n  function LLRBNode(key, value, color, left, right) {\n    this.key = key;\n    this.value = value;\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left = left != null ? left : SortedMap.EMPTY_NODE;\n    this.right = right != null ? right : SortedMap.EMPTY_NODE;\n  }\n  /**\r\n   * Returns a copy of the current node, optionally replacing pieces of it.\r\n   *\r\n   * @param key - New key for the node, or null.\r\n   * @param value - New value for the node, or null.\r\n   * @param color - New color for the node, or null.\r\n   * @param left - New left child for the node, or null.\r\n   * @param right - New right child for the node, or null.\r\n   * @returns The node copy.\r\n   */\n\n\n  LLRBNode.prototype.copy = function (key, value, color, left, right) {\n    return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n  };\n  /**\r\n   * @returns The total number of nodes in the tree.\r\n   */\n\n\n  LLRBNode.prototype.count = function () {\n    return this.left.count() + 1 + this.right.count();\n  };\n  /**\r\n   * @returns True if the tree is empty.\r\n   */\n\n\n  LLRBNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   *   node.  If it returns true, traversal is aborted.\r\n   * @returns The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  LLRBNode.prototype.inorderTraversal = function (action) {\n    return this.left.inorderTraversal(action) || !!action(this.key, this.value) || this.right.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @returns True if traversal was aborted.\r\n   */\n\n\n  LLRBNode.prototype.reverseTraversal = function (action) {\n    return this.right.reverseTraversal(action) || action(this.key, this.value) || this.left.reverseTraversal(action);\n  };\n  /**\r\n   * @returns The minimum node in the tree.\r\n   */\n\n\n  LLRBNode.prototype.min_ = function () {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return this.left.min_();\n    }\n  };\n  /**\r\n   * @returns The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.minKey = function () {\n    return this.min_().key;\n  };\n  /**\r\n   * @returns The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.maxKey = function () {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  };\n  /**\r\n   * @param key - Key to insert.\r\n   * @param value - Value to insert.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with the key/value added.\r\n   */\n\n\n  LLRBNode.prototype.insert = function (key, value, comparator) {\n    var n = this;\n    var cmp = comparator(key, n.key);\n\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @returns New tree, with the minimum key removed.\r\n   */\n\n\n  LLRBNode.prototype.removeMin_ = function () {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE;\n    }\n\n    var n = this;\n\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n\n    n = n.copy(null, null, null, n.left.removeMin_(), null);\n    return n.fixUp_();\n  };\n  /**\r\n   * @param key - The key of the item to remove.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with the specified item removed.\r\n   */\n\n\n  LLRBNode.prototype.remove = function (key, comparator) {\n    var n, smallest;\n    n = this;\n\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE;\n        } else {\n          smallest = n.right.min_();\n          n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n        }\n      }\n\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @returns Whether this is a RED node.\r\n   */\n\n\n  LLRBNode.prototype.isRed_ = function () {\n    return this.color;\n  };\n  /**\r\n   * @returns New tree after performing any needed rotations.\r\n   */\n\n\n  LLRBNode.prototype.fixUp_ = function () {\n    var n = this;\n\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @returns New tree, after moveRedLeft.\r\n   */\n\n\n  LLRBNode.prototype.moveRedLeft_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.right.left.isRed_()) {\n      n = n.copy(null, null, null, null, n.right.rotateRight_());\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @returns New tree, after moveRedRight.\r\n   */\n\n\n  LLRBNode.prototype.moveRedRight_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @returns New tree, after rotateLeft.\r\n   */\n\n\n  LLRBNode.prototype.rotateLeft_ = function () {\n    var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null);\n  };\n  /**\r\n   * @returns New tree, after rotateRight.\r\n   */\n\n\n  LLRBNode.prototype.rotateRight_ = function () {\n    var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr);\n  };\n  /**\r\n   * @returns Newt ree, after colorFlip.\r\n   */\n\n\n  LLRBNode.prototype.colorFlip_ = function () {\n    var left = this.left.copy(null, null, !this.left.color, null, null);\n    var right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  };\n  /**\r\n   * For testing.\r\n   *\r\n   * @returns True if all is well.\r\n   */\n\n\n  LLRBNode.prototype.checkMaxDepth_ = function () {\n    var blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  };\n\n  LLRBNode.prototype.check_ = function () {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n    }\n\n    if (this.right.isRed_()) {\n      throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n    }\n\n    var blackDepth = this.left.check_();\n\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  };\n\n  LLRBNode.RED = true;\n  LLRBNode.BLACK = false;\n  return LLRBNode;\n}();\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\n\n\nvar LLRBEmptyNode =\n/** @class */\nfunction () {\n  function LLRBEmptyNode() {}\n  /**\r\n   * Returns a copy of the current node.\r\n   *\r\n   * @returns The node copy.\r\n   */\n\n\n  LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n    return this;\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key/value added.\r\n   *\r\n   * @param key - Key to be added.\r\n   * @param value - Value to be added.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with item added.\r\n   */\n\n\n  LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n    return new LLRBNode(key, value, null);\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key removed.\r\n   *\r\n   * @param key - The key to remove.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with item removed.\r\n   */\n\n\n  LLRBEmptyNode.prototype.remove = function (key, comparator) {\n    return this;\n  };\n  /**\r\n   * @returns The total number of nodes in the tree.\r\n   */\n\n\n  LLRBEmptyNode.prototype.count = function () {\n    return 0;\n  };\n  /**\r\n   * @returns True if the tree is empty.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isEmpty = function () {\n    return true;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @returns True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @returns True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n    return false;\n  };\n\n  LLRBEmptyNode.prototype.minKey = function () {\n    return null;\n  };\n\n  LLRBEmptyNode.prototype.maxKey = function () {\n    return null;\n  };\n\n  LLRBEmptyNode.prototype.check_ = function () {\n    return 0;\n  };\n  /**\r\n   * @returns Whether this node is red.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isRed_ = function () {\n    return false;\n  };\n\n  return LLRBEmptyNode;\n}();\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\n\n\nvar SortedMap =\n/** @class */\nfunction () {\n  /**\r\n   * @param comparator_ - Key comparator.\r\n   * @param root_ - Optional root node for the map.\r\n   */\n  function SortedMap(comparator_, root_) {\n    if (root_ === void 0) {\n      root_ = SortedMap.EMPTY_NODE;\n    }\n\n    this.comparator_ = comparator_;\n    this.root_ = root_;\n  }\n  /**\r\n   * Returns a copy of the map, with the specified key/value added or replaced.\r\n   * (TODO: We should perhaps rename this method to 'put')\r\n   *\r\n   * @param key - Key to be added.\r\n   * @param value - Value to be added.\r\n   * @returns New map, with item added.\r\n   */\n\n\n  SortedMap.prototype.insert = function (key, value) {\n    return new SortedMap(this.comparator_, this.root_.insert(key, value, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns a copy of the map, with the specified key removed.\r\n   *\r\n   * @param key - The key to remove.\r\n   * @returns New map, with item removed.\r\n   */\n\n\n  SortedMap.prototype.remove = function (key) {\n    return new SortedMap(this.comparator_, this.root_.remove(key, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns the value of the node with the given key, or null.\r\n   *\r\n   * @param key - The key to look up.\r\n   * @returns The value of the node with the given key, or null if the\r\n   * key doesn't exist.\r\n   */\n\n\n  SortedMap.prototype.get = function (key) {\n    var cmp;\n    var node = this.root_;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n   * @param key - The key to find the predecessor of\r\n   * @returns The predecessor key.\r\n   */\n\n\n  SortedMap.prototype.getPredecessorKey = function (key) {\n    var cmp,\n        node = this.root_,\n        rightParent = null;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n  };\n  /**\r\n   * @returns True if the map is empty.\r\n   */\n\n\n  SortedMap.prototype.isEmpty = function () {\n    return this.root_.isEmpty();\n  };\n  /**\r\n   * @returns The total number of nodes in the map.\r\n   */\n\n\n  SortedMap.prototype.count = function () {\n    return this.root_.count();\n  };\n  /**\r\n   * @returns The minimum key in the map.\r\n   */\n\n\n  SortedMap.prototype.minKey = function () {\n    return this.root_.minKey();\n  };\n  /**\r\n   * @returns The maximum key in the map.\r\n   */\n\n\n  SortedMap.prototype.maxKey = function () {\n    return this.root_.maxKey();\n  };\n  /**\r\n   * Traverses the map in key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param action - Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @returns The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  SortedMap.prototype.inorderTraversal = function (action) {\n    return this.root_.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the map in reverse key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param action - Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @returns True if the traversal was aborted.\r\n   */\n\n\n  SortedMap.prototype.reverseTraversal = function (action) {\n    return this.root_.reverseTraversal(action);\n  };\n  /**\r\n   * Returns an iterator over the SortedMap.\r\n   * @returns The iterator.\r\n   */\n\n\n  SortedMap.prototype.getIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n  };\n  /**\r\n   * Always use the same empty node, to reduce memory.\r\n   */\n\n\n  SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n  return SortedMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction NAME_ONLY_COMPARATOR(left, right) {\n  return nameCompare(left.name, right.name);\n}\n\nfunction NAME_COMPARATOR(left, right) {\n  return nameCompare(left, right);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MAX_NODE;\n\nfunction setMaxNode(val) {\n  MAX_NODE = val;\n}\n\nvar priorityHashText = function priorityHashText(priority) {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\n\n\nvar validatePriorityNode = function validatePriorityNode(priorityNode) {\n  if (priorityNode.isLeafNode()) {\n    var val = priorityNode.val();\n    assert(typeof val === 'string' || typeof val === 'number' || typeof val === 'object' && contains(val, '.sv'), 'Priority must be a string or number.');\n  } else {\n    assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\n  } // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n\n\n  assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __childrenNodeConstructor;\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\n\n\nvar LeafNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param value_ - The value to store in this leaf node. The object type is\r\n   * possible in the event of a deferred value\r\n   * @param priorityNode_ - The priority of this node.\r\n   */\n  function LeafNode(value_, priorityNode_) {\n    if (priorityNode_ === void 0) {\n      priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n\n    this.value_ = value_;\n    this.priorityNode_ = priorityNode_;\n    this.lazyHash_ = null;\n    assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n    get: function get() {\n      return __childrenNodeConstructor;\n    },\n    set: function set(val) {\n      __childrenNodeConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  LeafNode.prototype.isLeafNode = function () {\n    return true;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPriority = function () {\n    return this.priorityNode_;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updatePriority = function (newPriorityNode) {\n    return new LeafNode(this.value_, newPriorityNode);\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getChild = function (path) {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n\n  LeafNode.prototype.hasChild = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n    return null;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateChild = function (path, newChildNode) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\n      return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.numChildren = function () {\n    return 0;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.forEachChild = function (index, action) {\n    return false;\n  };\n\n  LeafNode.prototype.val = function (exportFormat) {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash = '';\n\n      if (!this.priorityNode_.isEmpty()) {\n        toHash += 'priority:' + priorityHashText(this.priorityNode_.val()) + ':';\n      }\n\n      var type = typeof this.value_;\n      toHash += type + ':';\n\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_);\n      } else {\n        toHash += this.value_;\n      }\n\n      this.lazyHash_ = sha1(toHash);\n    }\n\n    return this.lazyHash_;\n  };\n  /**\r\n   * Returns the value of the leaf node.\r\n   * @returns The value of the node.\r\n   */\n\n\n  LeafNode.prototype.getValue = function () {\n    return this.value_;\n  };\n\n  LeafNode.prototype.compareTo = function (other) {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other);\n    }\n  };\n  /**\r\n   * Comparison specifically for two leaf nodes\r\n   */\n\n\n  LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n    var otherLeafType = typeof otherLeaf.value_;\n    var thisLeafType = typeof this.value_;\n    var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  };\n\n  LeafNode.prototype.withIndex = function () {\n    return this;\n  };\n\n  LeafNode.prototype.isIndexed = function () {\n    return true;\n  };\n\n  LeafNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      var otherLeaf = other;\n      return this.value_ === otherLeaf.value_ && this.priorityNode_.equals(otherLeaf.priorityNode_);\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n   * the same type, the comparison falls back to their value\r\n   */\n\n\n  LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n  return LeafNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar nodeFromJSON;\nvar MAX_NODE$1;\n\nfunction setNodeFromJSON(val) {\n  nodeFromJSON = val;\n}\n\nfunction setMaxNode$1(val) {\n  MAX_NODE$1 = val;\n}\n\nvar PriorityIndex =\n/** @class */\nfunction (_super) {\n  __extends(PriorityIndex, _super);\n\n  function PriorityIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PriorityIndex.prototype.compare = function (a, b) {\n    var aPriority = a.node.getPriority();\n    var bPriority = b.node.getPriority();\n    var indexCmp = aPriority.compareTo(bPriority);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n\n  PriorityIndex.prototype.isDefinedOn = function (node) {\n    return !node.getPriority().isEmpty();\n  };\n\n  PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  };\n\n  PriorityIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  PriorityIndex.prototype.maxPost = function () {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\n  };\n\n  PriorityIndex.prototype.makePost = function (indexValue, name) {\n    var priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  };\n  /**\r\n   * @returns String representation for inclusion in a query spec\r\n   */\n\n\n  PriorityIndex.prototype.toString = function () {\n    return '.priority';\n  };\n\n  return PriorityIndex;\n}(Index);\n\nvar PRIORITY_INDEX = new PriorityIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar LOG_2 = Math.log(2);\n\nvar Base12Num =\n/** @class */\nfunction () {\n  function Base12Num(length) {\n    var logBase2 = function logBase2(num) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return parseInt(Math.log(num) / LOG_2, 10);\n    };\n\n    var bitMask = function bitMask(bits) {\n      return parseInt(Array(bits + 1).join('1'), 2);\n    };\n\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    var mask = bitMask(this.count);\n    this.bits_ = length + 1 & mask;\n  }\n\n  Base12Num.prototype.nextBitIsOne = function () {\n    //noinspection JSBitwiseOperatorUsage\n    var result = !(this.bits_ & 0x1 << this.current_);\n    this.current_--;\n    return result;\n  };\n\n  return Base12Num;\n}();\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */\n\n\nvar buildChildSet = function buildChildSet(childList, cmp, keyFn, mapSortFn) {\n  childList.sort(cmp);\n\n  var buildBalancedTree = function buildBalancedTree(low, high) {\n    var length = high - low;\n    var namedNode;\n    var key;\n\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var middle = parseInt(length / 2, 10) + low;\n      var left = buildBalancedTree(low, middle);\n      var right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\n    }\n  };\n\n  var buildFrom12Array = function buildFrom12Array(base12) {\n    var node = null;\n    var root = null;\n    var index = childList.length;\n\n    var buildPennant = function buildPennant(chunkSize, color) {\n      var low = index - chunkSize;\n      var high = index;\n      index -= chunkSize;\n      var childTree = buildBalancedTree(low + 1, high);\n      var namedNode = childList[low];\n      var key = keyFn ? keyFn(namedNode) : namedNode;\n      attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\n    };\n\n    var attachPennant = function attachPennant(pennant) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (var i = 0; i < base12.count; ++i) {\n      var isOne = base12.nextBitIsOne(); // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n\n      var chunkSize = Math.pow(2, base12.count - (i + 1));\n\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n\n    return root;\n  };\n\n  var base12 = new Base12Num(childList.length);\n  var root = buildFrom12Array(base12); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return new SortedMap(mapSortFn || cmp, root);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _defaultIndexMap;\n\nvar fallbackObject = {};\n\nvar IndexMap =\n/** @class */\nfunction () {\n  function IndexMap(indexes_, indexSet_) {\n    this.indexes_ = indexes_;\n    this.indexSet_ = indexSet_;\n  }\n\n  Object.defineProperty(IndexMap, \"Default\", {\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\n    get: function get() {\n      assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\n      _defaultIndexMap = _defaultIndexMap || new IndexMap({\n        '.priority': fallbackObject\n      }, {\n        '.priority': PRIORITY_INDEX\n      });\n      return _defaultIndexMap;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IndexMap.prototype.get = function (indexKey) {\n    var sortedMap = safeGet(this.indexes_, indexKey);\n\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  };\n\n  IndexMap.prototype.hasIndex = function (indexDefinition) {\n    return contains(this.indexSet_, indexDefinition.toString());\n  };\n\n  IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n    assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n    var childList = [];\n    var sawIndexedValue = false;\n    var iter = existingChildren.getIterator(NamedNode.Wrap);\n    var next = iter.getNext();\n\n    while (next) {\n      sawIndexedValue = sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n\n    var newIndex;\n\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n\n    var indexName = indexDefinition.toString();\n\n    var newIndexSet = __assign({}, this.indexSet_);\n\n    newIndexSet[indexName] = indexDefinition;\n\n    var newIndexes = __assign({}, this.indexes_);\n\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  };\n  /**\r\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n   */\n\n\n  IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n    var _this = this;\n\n    var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\n      var index = safeGet(_this.indexSet_, indexName);\n      assert(index, 'Missing index implementation for ' + indexName);\n\n      if (indexedChildren === fallbackObject) {\n        // Check to see if we need to index everything\n        if (index.isDefinedOn(namedNode.node)) {\n          // We need to build this index\n          var childList = [];\n          var iter = existingChildren.getIterator(NamedNode.Wrap);\n          var next = iter.getNext();\n\n          while (next) {\n            if (next.name !== namedNode.name) {\n              childList.push(next);\n            }\n\n            next = iter.getNext();\n          }\n\n          childList.push(namedNode);\n          return buildChildSet(childList, index.getCompare());\n        } else {\n          // No change, this remains a fallback\n          return fallbackObject;\n        }\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n        var newChildren = indexedChildren;\n\n        if (existingSnap) {\n          newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        }\n\n        return newChildren.insert(namedNode, namedNode.node);\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n  /**\r\n   * Create a new IndexMap instance with the given value removed\r\n   */\n\n\n  IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n    var newIndexes = map(this.indexes_, function (indexedChildren) {\n      if (indexedChildren === fallbackObject) {\n        // This is the fallback. Just return it, nothing to do in this case\n        return indexedChildren;\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n\n        if (existingSnap) {\n          return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        } else {\n          // No record of this child\n          return indexedChildren;\n        }\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n\n  return IndexMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\n\nvar EMPTY_NODE;\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\n\nvar ChildrenNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param children_ - List of children of this node..\r\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n   */\n  function ChildrenNode(children_, priorityNode_, indexMap_) {\n    this.children_ = children_;\n    this.priorityNode_ = priorityNode_;\n    this.indexMap_ = indexMap_;\n    this.lazyHash_ = null;\n    /**\r\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n     * class instead of an empty ChildrenNode.\r\n     */\n\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n    }\n  }\n\n  Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n    get: function get() {\n      return EMPTY_NODE || (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  ChildrenNode.prototype.isLeafNode = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPriority = function () {\n    return this.priorityNode_ || EMPTY_NODE;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      var child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getChild = function (path) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hasChild = function (childName) {\n    return this.children_.get(childName) !== null;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      var namedNode = new NamedNode(childName, newChildNode);\n      var newChildren = void 0,\n          newIndexMap = void 0;\n\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      var newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\n      var newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.isEmpty = function () {\n    return this.children_.isEmpty();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.numChildren = function () {\n    return this.children_.count();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.val = function (exportFormat) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    var obj = {};\n    var numKeys = 0,\n        maxKey = 0,\n        allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      obj[key] = childNode.val(exportFormat);\n      numKeys++;\n\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      var array = []; // eslint-disable-next-line guard-for-in\n\n      for (var key in obj) {\n        array[key] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n\n      return obj;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash_1 = '';\n\n      if (!this.getPriority().isEmpty()) {\n        toHash_1 += 'priority:' + priorityHashText(this.getPriority().val()) + ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        var childHash = childNode.hash();\n\n        if (childHash !== '') {\n          toHash_1 += ':' + key + ':' + childHash;\n        }\n      });\n      this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\n    }\n\n    return this.lazyHash_;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  };\n\n  ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  };\n\n  ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n    var minKey = this.getFirstChildName(indexDefinition);\n\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Given an index, return the key name of the largest value we have, according to that index\r\n   */\n\n\n  ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  };\n\n  ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n    var maxKey = this.getLastChildName(indexDefinition);\n\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  };\n\n  ChildrenNode.prototype.forEachChild = function (index, action) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      return idx.inorderTraversal(function (wrappedNode) {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  };\n\n  ChildrenNode.prototype.getIterator = function (indexDefinition) {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  };\n\n  ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getIteratorFrom(startPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n\n  ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n    return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n  };\n\n  ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n\n  ChildrenNode.prototype.compareTo = function (other) {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE$2) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  };\n\n  ChildrenNode.prototype.withIndex = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX || this.indexMap_.hasIndex(indexDefinition)) {\n      return this;\n    } else {\n      var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  };\n\n  ChildrenNode.prototype.isIndexed = function (index) {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  };\n\n  ChildrenNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      var otherChildrenNode = other;\n\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (this.children_.count() === otherChildrenNode.children_.count()) {\n        var thisIter = this.getIterator(PRIORITY_INDEX);\n        var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        var thisCurrent = thisIter.getNext();\n        var otherCurrent = otherIter.getNext();\n\n        while (thisCurrent && otherCurrent) {\n          if (thisCurrent.name !== otherCurrent.name || !thisCurrent.node.equals(otherCurrent.node)) {\n            return false;\n          }\n\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  };\n  /**\r\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n   * instead.\r\n   *\r\n   */\n\n\n  ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  };\n\n  ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n  return ChildrenNode;\n}();\n\nvar MaxNode =\n/** @class */\nfunction (_super) {\n  __extends(MaxNode, _super);\n\n  function MaxNode() {\n    return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\n  }\n\n  MaxNode.prototype.compareTo = function (other) {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  MaxNode.prototype.equals = function (other) {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  };\n\n  MaxNode.prototype.getPriority = function () {\n    return this;\n  };\n\n  MaxNode.prototype.getImmediateChild = function (childName) {\n    return ChildrenNode.EMPTY_NODE;\n  };\n\n  MaxNode.prototype.isEmpty = function () {\n    return false;\n  };\n\n  return MaxNode;\n}(ChildrenNode);\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\n\n\nvar MAX_NODE$2 = new MaxNode();\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE$2)\n  }\n});\n/**\r\n * Reference Extensions\r\n */\n\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE$2);\nsetMaxNode$1(MAX_NODE$2);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar USE_HINZE = true;\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\n\nfunction nodeFromJSON$1(json, priority) {\n  if (priority === void 0) {\n    priority = null;\n  }\n\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(priority === null || typeof priority === 'string' || typeof priority === 'number' || typeof priority === 'object' && '.sv' in priority, 'Invalid priority type found: ' + typeof priority);\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  } // Valid leaf nodes include non-objects or server-value wrapper objects\n\n\n  if (typeof json !== 'object' || '.sv' in json) {\n    var jsonLeaf = json;\n    return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    var children_1 = [];\n    var childrenHavePriority_1 = false;\n    var hinzeJsonObj = json;\n    each(hinzeJsonObj, function (key, child) {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        var childNode = nodeFromJSON$1(child);\n\n        if (!childNode.isEmpty()) {\n          childrenHavePriority_1 = childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n          children_1.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children_1.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) {\n      return namedNode.name;\n    }, NAME_COMPARATOR);\n\n    if (childrenHavePriority_1) {\n      var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({\n        '.priority': sortedChildSet\n      }, {\n        '.priority': PRIORITY_INDEX\n      }));\n    } else {\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\n    }\n  } else {\n    var node_1 = ChildrenNode.EMPTY_NODE;\n    each(json, function (key, childData) {\n      if (contains(json, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          var childNode = nodeFromJSON$1(childData);\n\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node_1 = node_1.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n    return node_1.updatePriority(nodeFromJSON$1(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON$1);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar PathIndex =\n/** @class */\nfunction (_super) {\n  __extends(PathIndex, _super);\n\n  function PathIndex(indexPath_) {\n    var _this = _super.call(this) || this;\n\n    _this.indexPath_ = indexPath_;\n    assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n    return _this;\n  }\n\n  PathIndex.prototype.extractChild = function (snap) {\n    return snap.getChild(this.indexPath_);\n  };\n\n  PathIndex.prototype.isDefinedOn = function (node) {\n    return !node.getChild(this.indexPath_).isEmpty();\n  };\n\n  PathIndex.prototype.compare = function (a, b) {\n    var aChild = this.extractChild(a.node);\n    var bChild = this.extractChild(b.node);\n    var indexCmp = aChild.compareTo(bChild);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n\n  PathIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n    return new NamedNode(name, node);\n  };\n\n  PathIndex.prototype.maxPost = function () {\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\n    return new NamedNode(MAX_NAME, node);\n  };\n\n  PathIndex.prototype.toString = function () {\n    return pathSlice(this.indexPath_, 0).join('/');\n  };\n\n  return PathIndex;\n}(Index);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ValueIndex =\n/** @class */\nfunction (_super) {\n  __extends(ValueIndex, _super);\n\n  function ValueIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ValueIndex.prototype.compare = function (a, b) {\n    var indexCmp = a.node.compareTo(b.node);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n\n  ValueIndex.prototype.isDefinedOn = function (node) {\n    return true;\n  };\n\n  ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.equals(newNode);\n  };\n\n  ValueIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  ValueIndex.prototype.maxPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MAX;\n  };\n\n  ValueIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    return new NamedNode(name, valueNode);\n  };\n  /**\r\n   * @returns String representation for inclusion in a query spec\r\n   */\n\n\n  ValueIndex.prototype.toString = function () {\n    return '.value';\n  };\n\n  return ValueIndex;\n}(Index);\n\nvar VALUE_INDEX = new ValueIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Modeled after base64 web-safe chars, but ordered by ASCII.\n\nvar PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nvar MIN_PUSH_CHAR = '-';\nvar MAX_PUSH_CHAR = 'z';\nvar MAX_KEY_LEN = 786;\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\n\nvar nextPushId = function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  var lastPushTime = 0; // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n\n  var lastRandChars = [];\n  return function (now) {\n    var duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n    var i;\n    var timeStampChars = new Array(8);\n\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64); // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n\n      now = Math.floor(now / 64);\n    }\n\n    assert(now === 0, 'Cannot push at time == 0');\n    var id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n\n      lastRandChars[i]++;\n    }\n\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n    return id;\n  };\n}();\n\nvar successor = function successor(key) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n\n  var keyAsInt = tryParseInt(key);\n\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n\n  var next = new Array(key.length);\n\n  for (var i_1 = 0; i_1 < next.length; i_1++) {\n    next[i_1] = key.charAt(i_1);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  var i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  } // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n\n\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  var source = next[i];\n  var sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n  return next.slice(0, i + 1).join('');\n}; // `key` is assumed to be non-empty.\n\n\nvar predecessor = function predecessor(key) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n\n  var keyAsInt = tryParseInt(key);\n\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n\n  var next = new Array(key.length);\n\n  for (var i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  } // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n\n\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n\n    delete next[next.length - 1];\n    return next.join('');\n  } // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n\n\n  next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction changeValue(snapshotNode) {\n  return {\n    type: \"value\"\n    /* VALUE */\n    ,\n    snapshotNode: snapshotNode\n  };\n}\n\nfunction changeChildAdded(childName, snapshotNode) {\n  return {\n    type: \"child_added\"\n    /* CHILD_ADDED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n\nfunction changeChildRemoved(childName, snapshotNode) {\n  return {\n    type: \"child_removed\"\n    /* CHILD_REMOVED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\n  return {\n    type: \"child_changed\"\n    /* CHILD_CHANGED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName,\n    oldSnap: oldSnap\n  };\n}\n\nfunction changeChildMoved(childName, snapshotNode) {\n  return {\n    type: \"child_moved\"\n    /* CHILD_MOVED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\n\n\nvar IndexedFilter =\n/** @class */\nfunction () {\n  function IndexedFilter(index_) {\n    this.index_ = index_;\n  }\n\n  IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n    var oldChild = snap.getImmediateChild(key); // Check if anything actually changed.\n\n    if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\n        } else {\n          assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\n      }\n    }\n\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  };\n\n  IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\n          }\n        });\n      }\n\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (oldSnap.hasChild(key)) {\n            var oldChild = oldSnap.getImmediateChild(key);\n\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\n          }\n        });\n      }\n    }\n\n    return newSnap.withIndex(this.index_);\n  };\n\n  IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  };\n\n  IndexedFilter.prototype.filtersNodes = function () {\n    return false;\n  };\n\n  IndexedFilter.prototype.getIndexedFilter = function () {\n    return this;\n  };\n\n  IndexedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  return IndexedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\n\n\nvar RangedFilter =\n/** @class */\nfunction () {\n  function RangedFilter(params) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n\n  RangedFilter.prototype.getStartPost = function () {\n    return this.startPost_;\n  };\n\n  RangedFilter.prototype.getEndPost = function () {\n    return this.endPost_;\n  };\n\n  RangedFilter.prototype.matches = function (node) {\n    return this.index_.compare(this.getStartPost(), node) <= 0 && this.index_.compare(node, this.getEndPost()) <= 0;\n  };\n\n  RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n  };\n\n  RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n\n    var filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    var self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n\n  RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n\n  RangedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n\n  RangedFilter.prototype.getIndexedFilter = function () {\n    return this.indexedFilter_;\n  };\n\n  RangedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  RangedFilter.getStartPost_ = function (params) {\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  };\n\n  RangedFilter.getEndPost_ = function (params) {\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  };\n\n  return RangedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\n\n\nvar LimitedFilter =\n/** @class */\nfunction () {\n  function LimitedFilter(params) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n\n  LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_.getIndexedFilter().updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    } else {\n      return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n    }\n  };\n\n  LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    var filtered;\n\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (this.limit_ * 2 < newSnap.numChildren() && newSnap.isIndexed(this.index_)) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_); // anchor to the startPost, endPost, or last element as appropriate\n\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n        } else {\n          iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n        }\n\n        var count = 0;\n\n        while (iterator.hasNext() && count < this.limit_) {\n          var next = iterator.getNext();\n          var inRange = void 0;\n\n          if (this.reverse_) {\n            inRange = this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange = this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n        var startPost = void 0;\n        var endPost = void 0;\n        var cmp = void 0;\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          var indexCompare_1 = this.index_.getCompare();\n\n          cmp = function cmp(a, b) {\n            return indexCompare_1(b, a);\n          };\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        var count = 0;\n        var foundStartPost = false;\n\n        while (iterator.hasNext()) {\n          var next = iterator.getNext();\n\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n\n          var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\n          }\n        }\n      }\n    }\n\n    return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n\n  LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n\n  LimitedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n\n  LimitedFilter.prototype.getIndexedFilter = function () {\n    return this.rangedFilter_.getIndexedFilter();\n  };\n\n  LimitedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n    // TODO: rename all cache stuff etc to general snap terminology\n    var cmp;\n\n    if (this.reverse_) {\n      var indexCmp_1 = this.index_.getCompare();\n\n      cmp = function cmp(a, b) {\n        return indexCmp_1(b, a);\n      };\n    } else {\n      cmp = this.index_.getCompare();\n    }\n\n    var oldEventCache = snap;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    var newChildNamedNode = new NamedNode(childKey, childSnap);\n    var windowBoundary = this.reverse_ ? oldEventCache.getFirstChild(this.index_) : oldEventCache.getLastChild(this.index_);\n    var inRange = this.rangedFilter_.matches(newChildNamedNode);\n\n    if (oldEventCache.hasChild(childKey)) {\n      var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n\n      while (nextChild != null && (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n      }\n\n      var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\n        }\n\n        var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\n        var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\n          }\n\n          return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\n          changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap).updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  };\n\n  return LimitedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */\n\n\nvar QueryParams =\n/** @class */\nfunction () {\n  function QueryParams() {\n    this.limitSet_ = false;\n    this.startSet_ = false;\n    this.startNameSet_ = false;\n    this.startAfterSet_ = false;\n    this.endSet_ = false;\n    this.endNameSet_ = false;\n    this.endBeforeSet_ = false;\n    this.limit_ = 0;\n    this.viewFrom_ = '';\n    this.indexStartValue_ = null;\n    this.indexStartName_ = '';\n    this.indexEndValue_ = null;\n    this.indexEndName_ = '';\n    this.index_ = PRIORITY_INDEX;\n  }\n\n  QueryParams.prototype.hasStart = function () {\n    return this.startSet_;\n  };\n\n  QueryParams.prototype.hasStartAfter = function () {\n    return this.startAfterSet_;\n  };\n\n  QueryParams.prototype.hasEndBefore = function () {\n    return this.endBeforeSet_;\n  };\n  /**\r\n   * @returns True if it would return from left.\r\n   */\n\n\n  QueryParams.prototype.isViewFromLeft = function () {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === \"l\"\n      /* VIEW_FROM_LEFT */\n      ;\n    }\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true\r\n   */\n\n\n  QueryParams.prototype.getIndexStartValue = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true.\r\n   * Returns the starting key name for the range defined by these query parameters\r\n   */\n\n\n  QueryParams.prototype.getIndexStartName = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  };\n\n  QueryParams.prototype.hasEnd = function () {\n    return this.endSet_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   */\n\n\n  QueryParams.prototype.getIndexEndValue = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * Returns the end key name for the range defined by these query parameters\r\n   */\n\n\n  QueryParams.prototype.getIndexEndName = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  };\n\n  QueryParams.prototype.hasLimit = function () {\n    return this.limitSet_;\n  };\n  /**\r\n   * @returns True if a limit has been set and it has been explicitly anchored\r\n   */\n\n\n  QueryParams.prototype.hasAnchoredLimit = function () {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  };\n  /**\r\n   * Only valid to call if hasLimit() returns true\r\n   */\n\n\n  QueryParams.prototype.getLimit = function () {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  };\n\n  QueryParams.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  QueryParams.prototype.loadsAllData = function () {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  };\n\n  QueryParams.prototype.isDefault = function () {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  };\n\n  QueryParams.prototype.copy = function () {\n    var copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  };\n\n  return QueryParams;\n}();\n\nfunction queryParamsGetNodeFilter(queryParams) {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\n  var newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = \"l\"\n  /* VIEW_FROM_LEFT */\n  ;\n  return newParams;\n}\n\nfunction queryParamsLimitToLast(queryParams, newLimit) {\n  var newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = \"r\"\n  /* VIEW_FROM_RIGHT */\n  ;\n  return newParams;\n}\n\nfunction queryParamsStartAt(queryParams, indexValue, key) {\n  var newParams = queryParams.copy();\n  newParams.startSet_ = true;\n\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n\n  newParams.indexStartValue_ = indexValue;\n\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n\n  return newParams;\n}\n\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\n  var params;\n\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = successor(indexValue);\n    }\n\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    var childKey = void 0;\n\n    if (key == null) {\n      childKey = MAX_NAME;\n    } else {\n      childKey = successor(key);\n    }\n\n    params = queryParamsStartAt(queryParams, indexValue, childKey);\n  }\n\n  params.startAfterSet_ = true;\n  return params;\n}\n\nfunction queryParamsEndAt(queryParams, indexValue, key) {\n  var newParams = queryParams.copy();\n  newParams.endSet_ = true;\n\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n\n  newParams.indexEndValue_ = indexValue;\n\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n\n  return newParams;\n}\n\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\n  var childKey;\n  var params;\n\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = predecessor(indexValue);\n    }\n\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    if (key == null) {\n      childKey = MIN_NAME;\n    } else {\n      childKey = predecessor(key);\n    }\n\n    params = queryParamsEndAt(queryParams, indexValue, childKey);\n  }\n\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nfunction queryParamsOrderBy(queryParams, index) {\n  var newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */\n\n\nfunction queryParamsToRestQueryStringParameters(queryParams) {\n  var qs = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  var orderBy;\n\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = \"$priority\"\n    /* PRIORITY_INDEX */\n    ;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = \"$value\"\n    /* VALUE_INDEX */\n    ;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = \"$key\"\n    /* KEY_INDEX */\n    ;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n\n  qs[\"orderBy\"\n  /* ORDER_BY */\n  ] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    qs[\"startAt\"\n    /* START_AT */\n    ] = stringify(queryParams.indexStartValue_);\n\n    if (queryParams.startNameSet_) {\n      qs[\"startAt\"\n      /* START_AT */\n      ] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    qs[\"endAt\"\n    /* END_AT */\n    ] = stringify(queryParams.indexEndValue_);\n\n    if (queryParams.endNameSet_) {\n      qs[\"endAt\"\n      /* END_AT */\n      ] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[\"limitToFirst\"\n      /* LIMIT_TO_FIRST */\n      ] = queryParams.limit_;\n    } else {\n      qs[\"limitToLast\"\n      /* LIMIT_TO_LAST */\n      ] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nfunction queryParamsGetQueryObject(queryParams) {\n  var obj = {};\n\n  if (queryParams.startSet_) {\n    obj[\"sp\"\n    /* INDEX_START_VALUE */\n    ] = queryParams.indexStartValue_;\n\n    if (queryParams.startNameSet_) {\n      obj[\"sn\"\n      /* INDEX_START_NAME */\n      ] = queryParams.indexStartName_;\n    }\n  }\n\n  if (queryParams.endSet_) {\n    obj[\"ep\"\n    /* INDEX_END_VALUE */\n    ] = queryParams.indexEndValue_;\n\n    if (queryParams.endNameSet_) {\n      obj[\"en\"\n      /* INDEX_END_NAME */\n      ] = queryParams.indexEndName_;\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    obj[\"l\"\n    /* LIMIT */\n    ] = queryParams.limit_;\n    var viewFrom = queryParams.viewFrom_;\n\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = \"l\"\n        /* VIEW_FROM_LEFT */\n        ;\n      } else {\n        viewFrom = \"r\"\n        /* VIEW_FROM_RIGHT */\n        ;\n      }\n    }\n\n    obj[\"vf\"\n    /* VIEW_FROM */\n    ] = viewFrom;\n  } // For now, priority index is the default, so we only specify if it's some other index\n\n\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[\"i\"\n    /* INDEX */\n    ] = queryParams.index_.toString();\n  }\n\n  return obj;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\n\n\nvar ReadonlyRestClient =\n/** @class */\nfunction (_super) {\n  __extends(ReadonlyRestClient, _super);\n  /**\r\n   * @param repoInfo_ - Data about the namespace we are connecting to\r\n   * @param onDataUpdate_ - A callback for new data from the server\r\n   */\n\n\n  function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_, appCheckTokenProvider_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    _this.appCheckTokenProvider_ = appCheckTokenProvider_;\n    /** @private {function(...[*])} */\n\n    _this.log_ = logWrapper('p:rest:');\n    /**\r\n     * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n     * that's been removed. :-/\r\n     */\n\n    _this.listens_ = {};\n    return _this;\n  }\n\n  ReadonlyRestClient.prototype.reportStats = function (stats) {\n    throw new Error('Method not implemented.');\n  };\n\n  ReadonlyRestClient.getListenId_ = function (query, tag) {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(query._queryParams.isDefault(), \"should have a tag if it's not a default query.\");\n      return query._path.toString();\n    }\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var _this = this;\n\n    var pathString = query._path.toString();\n\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier); // Mark this listener so we can tell if it's removed.\n\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    var thisListen = {};\n    this.listens_[listenId] = thisListen;\n    var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false, tag);\n      }\n\n      if (safeGet(_this.listens_, listenId) === thisListen) {\n        var status_1;\n\n        if (!error) {\n          status_1 = 'ok';\n        } else if (error === 401) {\n          status_1 = 'permission_denied';\n        } else {\n          status_1 = 'rest_error:' + error;\n        }\n\n        onComplete(status_1, null);\n      }\n    });\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  };\n\n  ReadonlyRestClient.prototype.get = function (query) {\n    var _this = this;\n\n    var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\n\n    var pathString = query._path.toString();\n\n    var deferred = new Deferred();\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false,\n        /*tag=*/\n        null);\n\n        deferred.resolve(data);\n      } else {\n        deferred.reject(new Error(data));\n      }\n    });\n    return deferred.promise;\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.refreshAuthToken = function (token) {// no-op since we just always call getToken.\n  };\n  /**\r\n   * Performs a REST request to the given path, with the provided query string parameters,\r\n   * and any auth credentials we have.\r\n   */\n\n\n  ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n    var _this = this;\n\n    if (queryStringParameters === void 0) {\n      queryStringParameters = {};\n    }\n\n    queryStringParameters['format'] = 'export';\n    return Promise.all([this.authTokenProvider_.getToken(\n    /*forceRefresh=*/\n    false), this.appCheckTokenProvider_.getToken(\n    /*forceRefresh=*/\n    false)]).then(function (_a) {\n      var _b = __read(_a, 2),\n          authToken = _b[0],\n          appCheckToken = _b[1];\n\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      var url = (_this.repoInfo_.secure ? 'https://' : 'http://') + _this.repoInfo_.host + pathString + '?' + 'ns=' + _this.repoInfo_.namespace + querystring(queryStringParameters);\n\n      _this.log_('Sending REST request for ' + url);\n\n      var xhr = new XMLHttpRequest();\n\n      xhr.onreadystatechange = function () {\n        if (callback && xhr.readyState === 4) {\n          _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n\n          var res = null;\n\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn('Failed to parse JSON response for ' + url + ': ' + xhr.responseText);\n            }\n\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn('Got unsuccessful REST response for ' + url + ' Status: ' + xhr.status);\n            }\n\n            callback(xhr.status);\n          }\n\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url,\n      /*asynchronous=*/\n      true);\n      xhr.send();\n    });\n  };\n\n  return ReadonlyRestClient;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\n\n\nvar SnapshotHolder =\n/** @class */\nfunction () {\n  function SnapshotHolder() {\n    this.rootNode_ = ChildrenNode.EMPTY_NODE;\n  }\n\n  SnapshotHolder.prototype.getNode = function (path) {\n    return this.rootNode_.getChild(path);\n  };\n\n  SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  };\n\n  return SnapshotHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction newSparseSnapshotTree() {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */\n\n\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    var childKey = pathGetFront(path);\n\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    var child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */\n\n\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        var value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n        value.forEachChild(PRIORITY_INDEX, function (key, tree) {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      var childKey = pathGetFront(path);\n      path = pathPopFront(path);\n\n      if (sparseSnapshotTree.children.has(childKey)) {\n        var safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\n\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */\n\n\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, function (key, tree) {\n      var path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */\n\n\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\n  sparseSnapshotTree.children.forEach(function (tree, key) {\n    func(key, tree);\n  });\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */\n\n\nvar StatsListener =\n/** @class */\nfunction () {\n  function StatsListener(collection_) {\n    this.collection_ = collection_;\n    this.last_ = null;\n  }\n\n  StatsListener.prototype.get = function () {\n    var newStats = this.collection_.get();\n\n    var delta = __assign({}, newStats);\n\n    if (this.last_) {\n      each(this.last_, function (stat, value) {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n\n    this.last_ = newStats;\n    return delta;\n  };\n\n  return StatsListener;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\n\n\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\nvar FIRST_STATS_MAX_TIME = 30 * 1000; // We'll continue to report stats on average every 5 minutes.\n\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nvar StatsReporter =\n/** @class */\nfunction () {\n  function StatsReporter(collection, server_) {\n    this.server_ = server_;\n    this.statsToReport_ = {};\n    this.statsListener_ = new StatsListener(collection);\n    var timeout = FIRST_STATS_MIN_TIME + (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  StatsReporter.prototype.reportStats_ = function () {\n    var _this = this;\n\n    var stats = this.statsListener_.get();\n    var reportedStats = {};\n    var haveStatsToReport = false;\n    each(stats, function (stat, value) {\n      if (value > 0 && contains(_this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    } // queue our next run.\n\n\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n  };\n\n  return StatsReporter;\n}();\n\nfunction statsReporterIncludeStat(reporter, stat) {\n  reporter.statsToReport_[stat] = true;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @enum\r\n */\n\n\nvar OperationType;\n\n(function (OperationType) {\n  OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n  OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n  OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n  OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType || (OperationType = {}));\n\nfunction newOperationSourceUser() {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nfunction newOperationSourceServer() {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nfunction newOperationSourceServerTaggedQuery(queryId) {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: queryId,\n    tagged: true\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar AckUserWrite =\n/** @class */\nfunction () {\n  /**\r\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n   */\n  function AckUserWrite(\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  affectedTree,\n  /** @inheritDoc */\n  revert) {\n    this.path = path;\n    this.affectedTree = affectedTree;\n    this.revert = revert;\n    /** @inheritDoc */\n\n    this.type = OperationType.ACK_USER_WRITE;\n    /** @inheritDoc */\n\n    this.source = newOperationSourceUser();\n  }\n\n  AckUserWrite.prototype.operationForChild = function (childName) {\n    if (!pathIsEmpty(this.path)) {\n      assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\n      return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\n    } else if (this.affectedTree.value != null) {\n      assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.'); // All child locations are affected as well; just return same operation.\n\n      return this;\n    } else {\n      var childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  };\n\n  return AckUserWrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ListenComplete =\n/** @class */\nfunction () {\n  function ListenComplete(source, path) {\n    this.source = source;\n    this.path = path;\n    /** @inheritDoc */\n\n    this.type = OperationType.LISTEN_COMPLETE;\n  }\n\n  ListenComplete.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  };\n\n  return ListenComplete;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Overwrite =\n/** @class */\nfunction () {\n  function Overwrite(source, path, snap) {\n    this.source = source;\n    this.path = path;\n    this.snap = snap;\n    /** @inheritDoc */\n\n    this.type = OperationType.OVERWRITE;\n  }\n\n  Overwrite.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  };\n\n  return Overwrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Merge =\n/** @class */\nfunction () {\n  function Merge(\n  /** @inheritDoc */\n  source,\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  children) {\n    this.source = source;\n    this.path = path;\n    this.children = children;\n    /** @inheritDoc */\n\n    this.type = OperationType.MERGE;\n  }\n\n  Merge.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      var childTree = this.children.subtree(new Path(childName));\n\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  };\n\n  Merge.prototype.toString = function () {\n    return 'Operation(' + this.path + ': ' + this.source.toString() + ' merge: ' + this.children.toString() + ')';\n  };\n\n  return Merge;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\n\n\nvar CacheNode =\n/** @class */\nfunction () {\n  function CacheNode(node_, fullyInitialized_, filtered_) {\n    this.node_ = node_;\n    this.fullyInitialized_ = fullyInitialized_;\n    this.filtered_ = filtered_;\n  }\n  /**\r\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n   */\n\n\n  CacheNode.prototype.isFullyInitialized = function () {\n    return this.fullyInitialized_;\n  };\n  /**\r\n   * Returns whether this node is potentially missing children due to a filter applied to the node\r\n   */\n\n\n  CacheNode.prototype.isFiltered = function () {\n    return this.filtered_;\n  };\n\n  CacheNode.prototype.isCompleteForPath = function (path) {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    var childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  };\n\n  CacheNode.prototype.isCompleteForChild = function (key) {\n    return this.isFullyInitialized() && !this.filtered_ || this.node_.hasChild(key);\n  };\n\n  CacheNode.prototype.getNode = function () {\n    return this.node_;\n  };\n\n  return CacheNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\n\n\nvar EventGenerator =\n/** @class */\nfunction () {\n  function EventGenerator(query_) {\n    this.query_ = query_;\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n\n  return EventGenerator;\n}();\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\n\n\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\n  var events = [];\n  var moves = [];\n  changes.forEach(function (change) {\n    if (change.type === \"child_changed\"\n    /* CHILD_CHANGED */\n    && eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\"\n  /* CHILD_REMOVED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\"\n  /* CHILD_ADDED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\"\n  /* CHILD_MOVED */\n  , moves, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\"\n  /* CHILD_CHANGED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\"\n  /* VALUE */\n  , changes, eventRegistrations, eventCache);\n  return events;\n}\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\n\n\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\n  var filteredChanges = changes.filter(function (change) {\n    return change.type === eventType;\n  });\n  filteredChanges.sort(function (a, b) {\n    return eventGeneratorCompareChanges(eventGenerator, a, b);\n  });\n  filteredChanges.forEach(function (change) {\n    var materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\n    registrations.forEach(function (registration) {\n      if (registration.respondsTo(change.type)) {\n        events.push(registration.createEvent(materializedChange, eventGenerator.query_));\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n\n  var aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  var bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction newViewCache(eventCache, serverCache) {\n  return {\n    eventCache: eventCache,\n    serverCache: serverCache\n  };\n}\n\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\n  return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\n}\n\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\n  return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\n}\n\nfunction viewCacheGetCompleteEventSnap(viewCache) {\n  return viewCache.eventCache.isFullyInitialized() ? viewCache.eventCache.getNode() : null;\n}\n\nfunction viewCacheGetCompleteServerSnap(viewCache) {\n  return viewCache.serverCache.isFullyInitialized() ? viewCache.serverCache.getNode() : null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar emptyChildrenSingleton;\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\n\nvar EmptyChildren = function EmptyChildren() {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap(stringCompare);\n  }\n\n  return emptyChildrenSingleton;\n};\n/**\r\n * A tree with immutable elements.\r\n */\n\n\nvar ImmutableTree =\n/** @class */\nfunction () {\n  function ImmutableTree(value, children) {\n    if (children === void 0) {\n      children = EmptyChildren();\n    }\n\n    this.value = value;\n    this.children = children;\n  }\n\n  ImmutableTree.fromObject = function (obj) {\n    var tree = new ImmutableTree(null);\n    each(obj, function (childPath, childSnap) {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  };\n  /**\r\n   * True if the value is empty and there are no children\r\n   */\n\n\n  ImmutableTree.prototype.isEmpty = function () {\n    return this.value === null && this.children.isEmpty();\n  };\n  /**\r\n   * Given a path and predicate, return the first node and the path to that node\r\n   * where the predicate returns true.\r\n   *\r\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n   *\r\n   * @param relativePath - The remainder of the path\r\n   * @param predicate - The predicate to satisfy to return a node\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n    if (this.value != null && predicate(this.value)) {\n      return {\n        path: newEmptyPath(),\n        value: this.value\n      };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        var front = pathGetFront(relativePath);\n        var child = this.children.get(front);\n\n        if (child !== null) {\n          var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\n\n          if (childExistingPathAndValue != null) {\n            var fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\n            return {\n              path: fullPath,\n              value: childExistingPathAndValue.value\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   * Find, if it exists, the shortest subpath of the given path that points a defined\r\n   * value in the tree\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n    return this.findRootMostMatchingPathAndValue(relativePath, function () {\n      return true;\n    });\n  };\n  /**\r\n   * @returns The subtree at the given path\r\n   */\n\n\n  ImmutableTree.prototype.subtree = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      var front = pathGetFront(relativePath);\n      var childTree = this.children.get(front);\n\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree(null);\n      }\n    }\n  };\n  /**\r\n   * Sets a value at the specified path.\r\n   *\r\n   * @param relativePath - Path to set value at.\r\n   * @param toSet - Value to set.\r\n   * @returns Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.set = function (relativePath, toSet) {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front) || new ImmutableTree(null);\n      var newChild = child.set(pathPopFront(relativePath), toSet);\n      var newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Removes the value at the specified path.\r\n   *\r\n   * @param relativePath - Path to value to remove.\r\n   * @returns Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.remove = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front);\n\n      if (child) {\n        var newChild = child.remove(pathPopFront(relativePath));\n        var newChildren = void 0;\n\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  };\n  /**\r\n   * Gets a value from the tree.\r\n   *\r\n   * @param relativePath - Path to get value for.\r\n   * @returns Value at path, or null.\r\n   */\n\n\n  ImmutableTree.prototype.get = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front);\n\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Replace the subtree at the specified path with the given new tree.\r\n   *\r\n   * @param relativePath - Path to replace subtree for.\r\n   * @param newTree - New tree.\r\n   * @returns Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front) || new ImmutableTree(null);\n      var newChild = child.setTree(pathPopFront(relativePath), newTree);\n      var newChildren = void 0;\n\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Performs a depth first fold on this tree. Transforms a tree into a single\r\n   * value, given a function that operates on the path to a node, an optional\r\n   * current value, and a map of child names to folded subtrees\r\n   */\n\n\n  ImmutableTree.prototype.fold = function (fn) {\n    return this.fold_(newEmptyPath(), fn);\n  };\n  /**\r\n   * Recursive helper for public-facing fold() method\r\n   */\n\n\n  ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n    var accum = {};\n    this.children.inorderTraversal(function (childKey, childTree) {\n      accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n    });\n    return fn(pathSoFar, this.value, accum);\n  };\n  /**\r\n   * Find the first matching value on the given path. Return the result of applying f to it.\r\n   */\n\n\n  ImmutableTree.prototype.findOnPath = function (path, f) {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n    var result = this.value ? f(pathSoFar, this.value) : false;\n\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        var front = pathGetFront(pathToFollow);\n        var nextChild = this.children.get(front);\n\n        if (nextChild) {\n          return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n\n  ImmutableTree.prototype.foreachOnPath = function (path, f) {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n\n      var front = pathGetFront(pathToFollow);\n      var nextChild = this.children.get(front);\n\n      if (nextChild) {\n        return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\n      } else {\n        return new ImmutableTree(null);\n      }\n    }\n  };\n  /**\r\n   * Calls the given function for each node in the tree that has a value.\r\n   *\r\n   * @param f - A function to be called with the path from the root of the tree to\r\n   * a node, and the value at that node. Called in depth-first order.\r\n   */\n\n\n  ImmutableTree.prototype.foreach = function (f) {\n    this.foreach_(newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  };\n\n  ImmutableTree.prototype.foreachChild = function (f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value) {\n        f(childName, childTree.value);\n      }\n    });\n  };\n\n  return ImmutableTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\n\n\nvar CompoundWrite =\n/** @class */\nfunction () {\n  function CompoundWrite(writeTree_) {\n    this.writeTree_ = writeTree_;\n  }\n\n  CompoundWrite.empty = function () {\n    return new CompoundWrite(new ImmutableTree(null));\n  };\n\n  return CompoundWrite;\n}();\n\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n\n    if (rootmost != null) {\n      var rootMostPath = rootmost.path;\n      var value = rootmost.value;\n      var relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\n    } else {\n      var subtree = new ImmutableTree(node);\n      var newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\n  var newWrite = compoundWrite;\n  each(updates, function (childKey, node) {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */\n\n\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    var newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\n    return new CompoundWrite(newWriteTree);\n  }\n}\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */\n\n\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */\n\n\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\n  var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n\n  if (rootmost != null) {\n    return compoundWrite.writeTree_.get(rootmost.path).getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */\n\n\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\n  var children = [];\n  var node = compoundWrite.writeTree_.value;\n\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n        children.push(new NamedNode(childName, childNode));\n      });\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value != null) {\n        children.push(new NamedNode(childName, childTree.value));\n      }\n    });\n  }\n\n  return children;\n}\n\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    var shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */\n\n\nfunction compoundWriteIsEmpty(compoundWrite) {\n  return compoundWrite.writeTree_.isEmpty();\n}\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */\n\n\nfunction compoundWriteApply(compoundWrite, node) {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(relativePath, writeTree, node) {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    var priorityWrite_1 = null;\n    writeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\n        priorityWrite_1 = childTree.value;\n      } else {\n        node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\n      }\n    }); // If there was a priority write, we only apply it if the node is not empty\n\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n      node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite_1);\n    }\n\n    return node;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\n\n\nfunction writeTreeChildWrites(writeTree, path) {\n  return newWriteTreeRef(path, writeTree);\n}\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */\n\n\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\n  assert(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\n\n  if (visible === undefined) {\n    visible = true;\n  }\n\n  writeTree.allWrites.push({\n    path: path,\n    snap: snap,\n    writeId: writeId,\n    visible: visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\n  }\n\n  writeTree.lastWriteId = writeId;\n}\n/**\r\n * Record a new merge from user code.\r\n */\n\n\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\n  assert(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\n  writeTree.allWrites.push({\n    path: path,\n    children: changedChildren,\n    writeId: writeId,\n    visible: true\n  });\n  writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\n  writeTree.lastWriteId = writeId;\n}\n\nfunction writeTreeGetWrite(writeTree, writeId) {\n  for (var i = 0; i < writeTree.allWrites.length; i++) {\n    var record = writeTree.allWrites[i];\n\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n\n  return null;\n}\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\n\n\nfunction writeTreeRemoveWrite(writeTree, writeId) {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n  var idx = writeTree.allWrites.findIndex(function (s) {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  var writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n  var removedWriteWasVisible = writeToRemove.visible;\n  var removedWriteOverlapsWithOtherWrites = false;\n  var i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    var currentWrite = writeTree.allWrites[i];\n\n    if (currentWrite.visible) {\n      if (i >= idx && writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\n    } else {\n      var children = writeToRemove.children;\n      each(children, function (childName) {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\n      });\n    }\n\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (var childName in writeRecord.children) {\n      if (writeRecord.children.hasOwnProperty(childName) && pathContains(pathChild(writeRecord.path, childName), path)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\n\n\nfunction writeTreeResetTree_(writeTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\n\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId = writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\n\n\nfunction writeTreeDefaultFilter_(write) {\n  return write.visible;\n}\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\n\n\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\n  var compoundWrite = CompoundWrite.empty();\n\n  for (var i = 0; i < writes.length; ++i) {\n    var write = writes[i]; // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n\n    if (filter(write)) {\n      var writePath = write.path;\n      var relativePath = void 0;\n\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\n        } else ;\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\n          } else {\n            var child = safeGet(write.children, pathGetFront(relativePath));\n\n            if (child) {\n              // There exists a child in this node that matches the root path\n              var deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\n            }\n          }\n        } else ;\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n\n  return compoundWrite;\n}\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\n\n\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\n\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      var subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (completeServerCache == null && !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (!includeHiddenWrites && completeServerCache == null && !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\n        return null;\n      } else {\n        var filter = function filter(write) {\n          return (write.visible || includeHiddenWrites) && (!writeIdsToExclude || !~writeIdsToExclude.indexOf(write.writeId)) && (pathContains(write.path, treePath) || pathContains(treePath, write.path));\n        };\n\n        var mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\n        var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\n\n\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\n  var completeChildren = ChildrenNode.EMPTY_NODE;\n  var topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\n\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\n        completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n      });\n    }\n\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    var merge_1 = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n    completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var node = compoundWriteApply(compoundWriteChildCompoundWrite(merge_1, new Path(childName)), childNode);\n      completeChildren = completeChildren.updateImmediateChild(childName, node);\n    }); // Add any complete children we have from the set\n\n    compoundWriteGetCompleteChildren(merge_1).forEach(function (namedNode) {\n      completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n    compoundWriteGetCompleteChildren(merge).forEach(function (namedNode) {\n      completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n    });\n    return completeChildren;\n  }\n}\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\n\n\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\n  assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n  var path = pathChild(treePath, childPath);\n\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\n\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\n    }\n  }\n}\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\n\n\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\n  var path = pathChild(treePath, childKey);\n  var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\n      return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\n    } else {\n      return null;\n    }\n  }\n}\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\n\n\nfunction writeTreeShadowingWrite(writeTree, path) {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\n\n\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\n  var toIterate;\n  var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n  var shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n\n  toIterate = toIterate.withIndex(index);\n\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    var nodes = [];\n    var cmp = index.getCompare();\n    var iter = reverse ? toIterate.getReverseIteratorFrom(startPost, index) : toIterate.getIteratorFrom(startPost, index);\n    var next = iter.getNext();\n\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n\n      next = iter.getNext();\n    }\n\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nfunction newWriteTree() {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\n\n\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n  return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n}\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\n\n\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\n  return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\n}\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\n\n\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\n  return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\n}\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\n\n\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\n  return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\n}\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\n\n\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\n  return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\n}\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\n\n\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\n  return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\n}\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\n\n\nfunction writeTreeRefChild(writeTreeRef, childName) {\n  return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\n}\n\nfunction newWriteTreeRef(path, writeTree) {\n  return {\n    treePath: path,\n    writeTree: writeTree\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ChildChangeAccumulator =\n/** @class */\nfunction () {\n  function ChildChangeAccumulator() {\n    this.changeMap = new Map();\n  }\n\n  ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n    var type = change.type;\n    var childKey = change.childName;\n    assert(type === \"child_added\"\n    /* CHILD_ADDED */\n    || type === \"child_changed\"\n    /* CHILD_CHANGED */\n    || type === \"child_removed\"\n    /* CHILD_REMOVED */\n    , 'Only child changes supported for tracking');\n    assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n    var oldChange = this.changeMap.get(childKey);\n\n    if (oldChange) {\n      var oldType = oldChange.type;\n\n      if (type === \"child_added\"\n      /* CHILD_ADDED */\n      && oldType === \"child_removed\"\n      /* CHILD_REMOVED */\n      ) {\n          this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\n        } else if (type === \"child_removed\"\n      /* CHILD_REMOVED */\n      && oldType === \"child_added\"\n      /* CHILD_ADDED */\n      ) {\n          this.changeMap.delete(childKey);\n        } else if (type === \"child_removed\"\n      /* CHILD_REMOVED */\n      && oldType === \"child_changed\"\n      /* CHILD_CHANGED */\n      ) {\n          this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\n        } else if (type === \"child_changed\"\n      /* CHILD_CHANGED */\n      && oldType === \"child_added\"\n      /* CHILD_ADDED */\n      ) {\n          this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\n        } else if (type === \"child_changed\"\n      /* CHILD_CHANGED */\n      && oldType === \"child_changed\"\n      /* CHILD_CHANGED */\n      ) {\n          this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\n        } else {\n        throw assertionError('Illegal combination of changes: ' + change + ' occurred after ' + oldChange);\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  };\n\n  ChildChangeAccumulator.prototype.getChanges = function () {\n    return Array.from(this.changeMap.values());\n  };\n\n  return ChildChangeAccumulator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\n\nvar NoCompleteChildSource_ =\n/** @class */\nfunction () {\n  function NoCompleteChildSource_() {}\n\n  NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n    return null;\n  };\n\n  NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n    return null;\n  };\n\n  return NoCompleteChildSource_;\n}();\n/**\r\n * Singleton instance.\r\n */\n\n\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\n\nvar WriteTreeCompleteChildSource =\n/** @class */\nfunction () {\n  function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n    if (optCompleteServerCache_ === void 0) {\n      optCompleteServerCache_ = null;\n    }\n\n    this.writes_ = writes_;\n    this.viewCache_ = viewCache_;\n    this.optCompleteServerCache_ = optCompleteServerCache_;\n  }\n\n  WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n    var node = this.viewCache_.eventCache;\n\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      var serverNode = this.optCompleteServerCache_ != null ? new CacheNode(this.optCompleteServerCache_, true, false) : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  };\n\n  WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n    var completeServerData = this.optCompleteServerCache_ != null ? this.optCompleteServerCache_ : viewCacheGetCompleteServerSnap(this.viewCache_);\n    var nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\n\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  };\n\n  return WriteTreeCompleteChildSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction newViewProcessor(filter) {\n  return {\n    filter: filter\n  };\n}\n\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\n  assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\n  assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\n}\n\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\n  var accumulator = new ChildChangeAccumulator();\n  var newViewCache, filterServerNode;\n\n  if (operation.type === OperationType.OVERWRITE) {\n    var overwrite = operation;\n\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n\n      filterServerNode = overwrite.source.tagged || oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path);\n      newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    var merge = operation;\n\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered\n\n      filterServerNode = merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    var ackUserWrite = operation;\n\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n\n  var changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return {\n    viewCache: newViewCache,\n    changes: changes\n  };\n}\n\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\n  var eventSnap = newViewCache.eventCache;\n\n  if (eventSnap.isFullyInitialized()) {\n    var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    var oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n\n    if (accumulator.length > 0 || !oldViewCache.eventCache.isFullyInitialized() || isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap) || !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\n      accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\n  var oldEventSnap = viewCache.eventCache;\n\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    var newEventCache = void 0,\n        serverNode = void 0;\n\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\n\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        var serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        var completeChildren = serverCache instanceof ChildrenNode ? serverCache : ChildrenNode.EMPTY_NODE;\n        var completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\n        newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\n      } else {\n        var completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n        newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\n      }\n    } else {\n      var childKey = pathGetFront(changePath);\n\n      if (childKey === '.priority') {\n        assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\n        var oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode(); // we might have overwrites for this priority\n\n        var updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\n\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        var childChangePath = pathPopFront(changePath); // update child\n\n        var newEventChild = void 0;\n\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          var eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\n\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\n        }\n\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n\n    return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n  var oldServerSnap = oldViewCache.serverCache;\n  var newServerCache;\n  var serverFilter = filterServerNode ? viewProcessor.filter : viewProcessor.filter.getIndexedFilter();\n\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    var newServerNode = oldServerSnap.getNode().updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n  } else {\n    var childKey = pathGetFront(changePath);\n\n    if (!oldServerSnap.isCompleteForPath(changePath) && pathGetLength(changePath) > 1) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n\n    var childChangePath = pathPopFront(changePath);\n    var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n    } else {\n      newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\n    }\n  }\n\n  var newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\n  var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n  return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\n}\n\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n  var oldEventSnap = oldViewCache.eventCache;\n  var newViewCache, newEventCache;\n  var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\n    newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\n  } else {\n    var childKey = pathGetFront(changePath);\n\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\n      newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n    } else {\n      var childChangePath = pathPopFront(changePath);\n      var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      var newChild = void 0;\n\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        var childNode = source.getCompleteChild(childKey);\n\n        if (childNode != null) {\n          if (pathGetBack(childChangePath) === '.priority' && childNode.getChild(pathParent(childChangePath)).isEmpty()) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n\n      if (!oldChild.equals(newChild)) {\n        var newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  var curViewCache = viewCache;\n  changedChildren.foreach(function (relativePath, childNode) {\n    var writePath = pathChild(path, relativePath);\n\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n    }\n  });\n  changedChildren.foreach(function (relativePath, childNode) {\n    var writePath = pathChild(path, relativePath);\n\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n    }\n  });\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\n  merge.foreach(function (relativePath, childNode) {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (viewCache.serverCache.getNode().isEmpty() && !viewCache.serverCache.isFullyInitialized()) {\n    return viewCache;\n  } // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n\n\n  var curViewCache = viewCache;\n  var viewMergeTree;\n\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\n  }\n\n  var serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n    if (serverNode.hasChild(childKey)) {\n      var serverChild = viewCache.serverCache.getNode().getImmediateChild(childKey);\n      var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\n      curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n    }\n  });\n  viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n    var isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) && childMergeTree.value === undefined;\n\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      var serverChild = viewCache.serverCache.getNode().getImmediateChild(childKey);\n      var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\n      curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n    }\n  });\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  } // Only filter server node if it is currently filtered\n\n\n  var filterServerNode = viewCache.serverCache.isFiltered(); // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n\n  var serverCache = viewCache.serverCache;\n\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (pathIsEmpty(ackPath) && serverCache.isFullyInitialized() || serverCache.isCompleteForPath(ackPath)) {\n      return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      var changedChildren_1 = new ImmutableTree(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\n        changedChildren_1 = changedChildren_1.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    var changedChildren_2 = new ImmutableTree(null);\n    affectedTree.foreach(function (mergePath, value) {\n      var serverCachePath = pathChild(ackPath, mergePath);\n\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n      }\n    });\n    return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n  }\n}\n\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\n  var oldServerNode = viewCache.serverCache;\n  var newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\n  return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\n}\n\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\n  var complete;\n\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n    var oldEventCache = viewCache.eventCache.getNode();\n    var newEventCache = void 0;\n\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      var newNode = void 0;\n\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n      } else {\n        var serverChildren = viewCache.serverCache.getNode();\n        assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\n        newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\n      }\n\n      newNode = newNode;\n      newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\n    } else {\n      var childKey = pathGetFront(path);\n      var newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\n\n      if (newChild == null && viewCache.serverCache.isCompleteForChild(childKey)) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\n      } else {\n        newEventCache = oldEventCache;\n      }\n\n      if (newEventCache.isEmpty() && viewCache.serverCache.isFullyInitialized()) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\n        }\n      }\n    }\n\n    complete = viewCache.serverCache.isFullyInitialized() || writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\n\n\nvar View =\n/** @class */\nfunction () {\n  function View(query_, initialViewCache) {\n    this.query_ = query_;\n    this.eventRegistrations_ = [];\n    var params = this.query_._queryParams;\n    var indexFilter = new IndexedFilter(params.getIndex());\n    var filter = queryParamsGetNodeFilter(params);\n    this.processor_ = newViewProcessor(filter);\n    var initialServerCache = initialViewCache.serverCache;\n    var initialEventCache = initialViewCache.eventCache; // Don't filter server node with other filter than index, wait for tagged listen\n\n    var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n    var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n    var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n    var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  Object.defineProperty(View.prototype, \"query\", {\n    get: function get() {\n      return this.query_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return View;\n}();\n\nfunction viewGetServerCache(view) {\n  return view.viewCache_.serverCache.getNode();\n}\n\nfunction viewGetCompleteNode(view) {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nfunction viewGetCompleteServerCache(view, path) {\n  var cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (view.query._queryParams.loadsAllData() || !pathIsEmpty(path) && !cache.getImmediateChild(pathGetFront(path)).isEmpty()) {\n      return cache.getChild(path);\n    }\n  }\n\n  return null;\n}\n\nfunction viewIsEmpty(view) {\n  return view.eventRegistrations_.length === 0;\n}\n\nfunction viewAddEventRegistration(view, eventRegistration) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\n\n\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\n  var cancelEvents = [];\n\n  if (cancelError) {\n    assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n    var path_1 = view.query._path;\n    view.eventRegistrations_.forEach(function (registration) {\n      var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    var remaining = [];\n\n    for (var i = 0; i < view.eventRegistrations_.length; ++i) {\n      var existing = view.eventRegistrations_[i];\n\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n\n  return cancelEvents;\n}\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\n\n\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\n  if (operation.type === OperationType.MERGE && operation.source.queryId !== null) {\n    assert(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\n    assert(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\n  }\n\n  var oldViewCache = view.viewCache_;\n  var result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n  assert(result.viewCache.serverCache.isFullyInitialized() || !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n  view.viewCache_ = result.viewCache;\n  return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\n}\n\nfunction viewGetInitialEvents(view, registration) {\n  var eventSnap = view.viewCache_.eventCache;\n  var initialChanges = [];\n\n  if (!eventSnap.getNode().isLeafNode()) {\n    var eventNode = eventSnap.getNode();\n    eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n\n  return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\n}\n\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\n  var registrations = eventRegistration ? [eventRegistration] : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar referenceConstructor;\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\n\nvar SyncPoint =\n/** @class */\nfunction () {\n  function SyncPoint() {\n    /**\r\n     * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n     * queryId and the value is the View for that query.\r\n     *\r\n     * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n     */\n    this.views = new Map();\n  }\n\n  return SyncPoint;\n}();\n\nfunction syncPointSetReferenceConstructor(val) {\n  assert(!referenceConstructor, '__referenceConstructor has already been defined');\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor() {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nfunction syncPointIsEmpty(syncPoint) {\n  return syncPoint.views.size === 0;\n}\n\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\n  var e_1, _a;\n\n  var queryId = operation.source.queryId;\n\n  if (queryId !== null) {\n    var view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\n  } else {\n    var events = [];\n\n    try {\n      for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n        events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return events;\n  }\n}\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\n  var queryId = query._queryIdentifier;\n  var view = syncPoint.views.get(queryId);\n\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    var eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\n    var eventCacheComplete = false;\n\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n\n    var viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\n    return new View(query, viewCache);\n  }\n\n  return view;\n}\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n  var view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\n\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  } // This is guaranteed to exist now, we just created anything that was missing\n\n\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */\n\n\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\n  var e_2, _a;\n\n  var queryId = query._queryIdentifier;\n  var removed = [];\n  var cancelEvents = [];\n  var hadCompleteView = syncPointHasCompleteView(syncPoint);\n\n  if (queryId === 'default') {\n    try {\n      // When you do ref.off(...), we search all views for the registration to remove.\n      for (var _b = __values(syncPoint.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n            viewQueryId = _d[0],\n            view = _d[1];\n\n        cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\n\n        if (viewIsEmpty(view)) {\n          syncPoint.views.delete(viewQueryId); // We'll deal with complete views later.\n\n          if (!view.query._queryParams.loadsAllData()) {\n            removed.push(view.query);\n          }\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    var view = syncPoint.views.get(queryId);\n\n    if (view) {\n      cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\n\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId); // We'll deal with complete views later.\n\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(new (syncPointGetReferenceConstructor())(query._repo, query._path));\n  }\n\n  return {\n    removed: removed,\n    events: cancelEvents\n  };\n}\n\nfunction syncPointGetQueryViews(syncPoint) {\n  var e_3, _a;\n\n  var result = [];\n\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n\n      if (!view.query._queryParams.loadsAllData()) {\n        result.push(view);\n      }\n    }\n  } catch (e_3_1) {\n    e_3 = {\n      error: e_3_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_3) throw e_3.error;\n    }\n  }\n\n  return result;\n}\n/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */\n\n\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\n  var e_4, _a;\n\n  var serverCache = null;\n\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n      serverCache = serverCache || viewGetCompleteServerCache(view, path);\n    }\n  } catch (e_4_1) {\n    e_4 = {\n      error: e_4_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_4) throw e_4.error;\n    }\n  }\n\n  return serverCache;\n}\n\nfunction syncPointViewForQuery(syncPoint, query) {\n  var params = query._queryParams;\n\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    var queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nfunction syncPointViewExistsForQuery(syncPoint, query) {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nfunction syncPointHasCompleteView(syncPoint) {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nfunction syncPointGetCompleteView(syncPoint) {\n  var e_5, _a;\n\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n\n      if (view.query._queryParams.loadsAllData()) {\n        return view;\n      }\n    }\n  } catch (e_5_1) {\n    e_5 = {\n      error: e_5_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_5) throw e_5.error;\n    }\n  }\n\n  return null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar referenceConstructor$1;\n\nfunction syncTreeSetReferenceConstructor(val) {\n  assert(!referenceConstructor$1, '__referenceConstructor has already been defined');\n  referenceConstructor$1 = val;\n}\n\nfunction syncTreeGetReferenceConstructor() {\n  assert(referenceConstructor$1, 'Reference.ts has not been loaded');\n  return referenceConstructor$1;\n}\n/**\r\n * Static tracker for next query tag.\r\n */\n\n\nvar syncTreeNextQueryTag_ = 1;\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\n\nvar SyncTree =\n/** @class */\nfunction () {\n  /**\r\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n   *   to server data.\r\n   */\n  function SyncTree(listenProvider_) {\n    this.listenProvider_ = listenProvider_;\n    /**\r\n     * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n     */\n\n    this.syncPointTree_ = new ImmutableTree(null);\n    /**\r\n     * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n     */\n\n    this.pendingWriteTree_ = newWriteTree();\n    this.tagToQueryMap = new Map();\n    this.queryToTagMap = new Map();\n  }\n\n  return SyncTree;\n}();\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\n  // Record pending write.\n  writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\n  }\n}\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n  var changeTree = ImmutableTree.fromObject(changedChildren);\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\n}\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeAckUserWrite(syncTree, writeId, revert) {\n  if (revert === void 0) {\n    revert = false;\n  }\n\n  var write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  var needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\n\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    var affectedTree_1 = new ImmutableTree(null);\n\n    if (write.snap != null) {\n      // overwrite\n      affectedTree_1 = affectedTree_1.set(newEmptyPath(), true);\n    } else {\n      each(write.children, function (pathString) {\n        affectedTree_1 = affectedTree_1.set(new Path(pathString), true);\n      });\n    }\n\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree_1, revert));\n  }\n}\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\n}\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\n  var changeTree = ImmutableTree.fromObject(changedChildren);\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\n}\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyListenComplete(syncTree, path) {\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\n}\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n\n  if (queryKey) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n        queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\n\n\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError) {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  var path = query._path;\n  var maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  var cancelEvents = []; // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n\n  if (maybeSyncPoint && (query._queryIdentifier === 'default' || syncPointViewExistsForQuery(maybeSyncPoint, query))) {\n    var removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\n\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    var removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events; // We may have just removed one of many listeners and can short-circuit this whole process\n    // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n    // properly set up.\n    //\n    // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n    // queryId === 'default'\n\n    var removingDefault = -1 !== removed.findIndex(function (query) {\n      return query._queryParams.loadsAllData();\n    });\n    var covered = syncTree.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n      return syncPointHasCompleteView(parentSyncPoint);\n    });\n\n    if (removingDefault && !covered) {\n      var subtree = syncTree.syncPointTree_.subtree(path); // There are potentially child listeners. Determine what if any listens we need to send before executing the\n      // removal\n\n      if (!subtree.isEmpty()) {\n        // We need to fold over our subtree and collect the listeners to send\n        var newViews = syncTreeCollectDistinctViewsForSubTree_(subtree); // Ok, we've collected all the listens we need. Set them up.\n\n        for (var i = 0; i < newViews.length; ++i) {\n          var view = newViews[i],\n              newQuery = view.query;\n          var listener = syncTreeCreateListenerForView_(syncTree, view);\n          syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery_(syncTree, newQuery), listener.hashFn, listener.onComplete);\n        }\n      }\n    } // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n    // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n    // Also, note that if we have a cancelError, it's already been removed at the provider level.\n\n\n    if (!covered && removed.length > 0 && !cancelError) {\n      // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n      // default. Otherwise, we need to iterate through and cancel each individual query\n      if (removingDefault) {\n        // We don't tag default listeners\n        var defaultTag = null;\n        syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\n      } else {\n        removed.forEach(function (queryToRemove) {\n          var tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\n          syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\n        });\n      }\n    } // Now, clear all of the tags we're tracking for the removed listens\n\n\n    syncTreeRemoveTags_(syncTree, removed);\n  }\n\n  return cancelEvents;\n}\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n\n  if (queryKey != null) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n        queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n\n  if (queryKey) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n        queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    var op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration) {\n  var path = query._path;\n  var serverCache = null;\n  var foundAncestorDefaultView = false; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n  syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n    var relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache = serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView = foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  var syncPoint = syncTree.syncPointTree_.get(path);\n\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView = foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache = serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  var serverCacheComplete;\n\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    var subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild(function (childName, childSyncPoint) {\n      var completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\n\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(childName, completeCache);\n      }\n    });\n  }\n\n  var viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    var queryKey = syncTreeMakeQueryKey_(query);\n    assert(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\n    var tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  var events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n\n  if (!viewAlreadyExists && !foundAncestorDefaultView) {\n    var view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n\n  return events;\n}\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */\n\n\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\n  var includeHiddenSets = true;\n  var writeTree = syncTree.pendingWriteTree_;\n  var serverCache = syncTree.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n    var relativePath = newRelativePath(pathSoFar, path);\n    var serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\n\n    if (serverCache) {\n      return serverCache;\n    }\n  });\n  return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\n}\n\nfunction syncTreeGetServerValue(syncTree, query) {\n  var path = query._path;\n  var serverCache = null; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n  syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n    var relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache = serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  var syncPoint = syncTree.syncPointTree_.get(path);\n\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache = serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  var serverCacheComplete = serverCache != null;\n  var serverCacheNode = serverCacheComplete ? new CacheNode(serverCache, true, false) : null;\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query._path);\n  var view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\n  return viewGetCompleteNode(view);\n}\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\n\n\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\n  return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_,\n  /*serverCache=*/\n  null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\n}\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\n\n\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n  } else {\n    var syncPoint = syncPointTree.get(newEmptyPath()); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    var events = [];\n    var childName = pathGetFront(operation.path);\n    var childOperation = operation.operationForChild(childName);\n    var childTree = syncPointTree.children.get(childName);\n\n    if (childTree && childOperation) {\n      var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n      var childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n    }\n\n    if (syncPoint) {\n      events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\n    }\n\n    return events;\n  }\n}\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\n\n\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\n  var syncPoint = syncPointTree.get(newEmptyPath()); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  var events = [];\n  syncPointTree.children.inorderTraversal(function (childName, childTree) {\n    var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n    var childWritesCache = writeTreeRefChild(writesCache, childName);\n    var childOperation = operation.operationForChild(childName);\n\n    if (childOperation) {\n      events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(syncTree, view) {\n  var query = view.query;\n  var tag = syncTreeTagForQuery_(syncTree, query);\n  return {\n    hashFn: function hashFn() {\n      var cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: function onComplete(status) {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        var error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(syncTree, query,\n        /*eventRegistration*/\n        null, error);\n      }\n    }\n  };\n}\n/**\r\n * Return the tag associated with the given query.\r\n */\n\n\nfunction syncTreeTagForQuery_(syncTree, query) {\n  var queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\n\n\nfunction syncTreeMakeQueryKey_(query) {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\n\n\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\n  return syncTree.tagToQueryMap.get(tag);\n}\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\n\n\nfunction syncTreeParseQueryKey_(queryKey) {\n  var splitIndex = queryKey.indexOf('$');\n  assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n/**\r\n * A helper method to apply tagged operations\r\n */\n\n\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\n  var syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\n\n\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\n  return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      var completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      var views_1 = [];\n\n      if (maybeChildSyncPoint) {\n        views_1 = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n\n      each(childMap, function (_key, childViews) {\n        views_1 = views_1.concat(childViews);\n      });\n      return views_1;\n    }\n  });\n}\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */\n\n\nfunction syncTreeQueryForListening_(query) {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree, queries) {\n  for (var j = 0; j < queries.length; ++j) {\n    var removedQuery = queries[j];\n\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      var removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      var removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n/**\r\n * Static accessor for query tags.\r\n */\n\n\nfunction syncTreeGetNextQueryTag_() {\n  return syncTreeNextQueryTag_++;\n}\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */\n\n\nfunction syncTreeSetupListener_(syncTree, query, view) {\n  var path = query._path;\n  var tag = syncTreeTagForQuery_(syncTree, query);\n  var listener = syncTreeCreateListenerForView_(syncTree, view);\n  var events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\n  var subtree = syncTree.syncPointTree_.subtree(path); // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n\n  if (tag) {\n    assert(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n      if (!pathIsEmpty(relativePath) && maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n        return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n      } else {\n        // No default listener here, flatten any deeper queries into an array\n        var queries_1 = [];\n\n        if (maybeChildSyncPoint) {\n          queries_1 = queries_1.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(function (view) {\n            return view.query;\n          }));\n        }\n\n        each(childMap, function (_key, childQueries) {\n          queries_1 = queries_1.concat(childQueries);\n        });\n        return queries_1;\n      }\n    });\n\n    for (var i = 0; i < queriesToStop.length; ++i) {\n      var queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery_(syncTree, queryToStop));\n    }\n  }\n\n  return events;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ExistingValueProvider =\n/** @class */\nfunction () {\n  function ExistingValueProvider(node_) {\n    this.node_ = node_;\n  }\n\n  ExistingValueProvider.prototype.getImmediateChild = function (childName) {\n    var child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  };\n\n  ExistingValueProvider.prototype.node = function () {\n    return this.node_;\n  };\n\n  return ExistingValueProvider;\n}();\n\nvar DeferredValueProvider =\n/** @class */\nfunction () {\n  function DeferredValueProvider(syncTree, path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  DeferredValueProvider.prototype.getImmediateChild = function (childName) {\n    var childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  };\n\n  DeferredValueProvider.prototype.node = function () {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  };\n\n  return DeferredValueProvider;\n}();\n/**\r\n * Generate placeholders for deferred values.\r\n */\n\n\nvar generateWithValues = function generateWithValues(values) {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\n\n\nvar resolveDeferredLeafValue = function resolveDeferredLeafValue(value, existingVal, serverValues) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nvar resolveScalarDeferredValue = function resolveScalarDeferredValue(op, existing, serverValues) {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'];\n\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nvar resolveComplexDeferredValue = function resolveComplexDeferredValue(op, existing, unused) {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n\n  var delta = op['increment'];\n\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  var existingNode = existing.node();\n  assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls'); // Incrementing a non-number sets the value to the incremented amount\n\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  var leaf = existingNode;\n  var existingVal = leaf.getValue();\n\n  if (typeof existingVal !== 'number') {\n    return delta;\n  } // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n\n\n  return existingVal + delta;\n};\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */\n\n\nvar resolveDeferredValueTree = function resolveDeferredValueTree(path, node, syncTree, serverValues) {\n  return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\n};\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\n\n\nvar resolveDeferredValueSnapshot = function resolveDeferredValueSnapshot(node, existing, serverValues) {\n  return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\n};\n\nfunction resolveDeferredValue(node, existingVal, serverValues) {\n  var rawPri = node.getPriority().val();\n  var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\n  var newNode;\n\n  if (node.isLeafNode()) {\n    var leafNode = node;\n    var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\n\n    if (value !== leafNode.getValue() || priority !== leafNode.getPriority().val()) {\n      return new LeafNode(value, nodeFromJSON$1(priority));\n    } else {\n      return node;\n    }\n  } else {\n    var childrenNode = node;\n    newNode = childrenNode;\n\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n\n    childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\n\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\n\n\nvar Tree =\n/** @class */\nfunction () {\n  /**\r\n   * @param name - Optional name of the node.\r\n   * @param parent - Optional parent node.\r\n   * @param node - Optional node to wrap.\r\n   */\n  function Tree(name, parent, node) {\n    if (name === void 0) {\n      name = '';\n    }\n\n    if (parent === void 0) {\n      parent = null;\n    }\n\n    if (node === void 0) {\n      node = {\n        children: {},\n        childCount: 0\n      };\n    }\n\n    this.name = name;\n    this.parent = parent;\n    this.node = node;\n  }\n\n  return Tree;\n}();\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */\n\n\nfunction treeSubTree(tree, pathObj) {\n  // TODO: Require pathObj to be Path?\n  var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  var child = tree,\n      next = pathGetFront(path);\n\n  while (next !== null) {\n    var childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */\n\n\nfunction treeGetValue(tree) {\n  return tree.node.value;\n}\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */\n\n\nfunction treeSetValue(tree, value) {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n/**\r\n * @returns Whether the tree has any children.\r\n */\n\n\nfunction treeHasChildren(tree) {\n  return tree.node.childCount > 0;\n}\n/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */\n\n\nfunction treeIsEmpty(tree) {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */\n\n\nfunction treeForEachChild(tree, action) {\n  each(tree.node.children, function (child, childTree) {\n    action(new Tree(child, tree, childTree));\n  });\n}\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */\n\n\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, function (child) {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */\n\n\nfunction treeForEachAncestor(tree, action, includeSelf) {\n  var node = includeSelf ? tree : tree.parent;\n\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n\n    node = node.parent;\n  }\n\n  return false;\n}\n/**\r\n * @returns The path of this tree node, as a Path.\r\n */\n\n\nfunction treeGetPath(tree) {\n  return new Path(tree.parent === null ? tree.name : treeGetPath(tree.parent) + '/' + tree.name);\n}\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\n\n\nfunction treeUpdateParents(tree) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */\n\n\nfunction treeUpdateChild(tree, childName, child) {\n  var childEmpty = treeIsEmpty(child);\n  var childExists = contains(tree.node.children, childName);\n\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * True for invalid Firebase keys\r\n */\n\n\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\n\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\n\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nvar isValidKey = function isValidKey(key) {\n  return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key);\n};\n\nvar isValidPathString = function isValidPathString(pathString) {\n  return typeof pathString === 'string' && pathString.length !== 0 && !INVALID_PATH_REGEX_.test(pathString);\n};\n\nvar isValidRootPathString = function isValidRootPathString(pathString) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nvar isValidPriority = function isValidPriority(priority) {\n  return priority === null || typeof priority === 'string' || typeof priority === 'number' && !isInvalidJSONNumber(priority) || priority && typeof priority === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  contains(priority, '.sv');\n};\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\n\n\nvar validateFirebaseDataArg = function validateFirebaseDataArg(fnName, value, path, optional) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefix(fnName, 'value'), value, path);\n};\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\n\n\nvar validateFirebaseData = function validateFirebaseData(errorPrefix, data, path_) {\n  var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\n  }\n\n  if (typeof data === 'function') {\n    throw new Error(errorPrefix + 'contains a function ' + validationPathToErrorString(path) + ' with contents = ' + data.toString());\n  }\n\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + validationPathToErrorString(path));\n  } // Check max leaf size, but try to avoid the utf8 conversion if we can.\n\n\n  if (typeof data === 'string' && data.length > MAX_LEAF_SIZE_ / 3 && stringLength(data) > MAX_LEAF_SIZE_) {\n    throw new Error(errorPrefix + 'contains a string greater than ' + MAX_LEAF_SIZE_ + ' utf8 bytes ' + validationPathToErrorString(path) + \" ('\" + data.substring(0, 50) + \"...')\");\n  } // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n\n\n  if (data && typeof data === 'object') {\n    var hasDotValue_1 = false;\n    var hasActualChild_1 = false;\n    each(data, function (key, value) {\n      if (key === '.value') {\n        hasDotValue_1 = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild_1 = true;\n\n        if (!isValidKey(key)) {\n          throw new Error(errorPrefix + ' contains an invalid key (' + key + ') ' + validationPathToErrorString(path) + '.  Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue_1 && hasActualChild_1) {\n      throw new Error(errorPrefix + ' contains \".value\" child ' + validationPathToErrorString(path) + ' in addition to actual children.');\n    }\n  }\n};\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\n\n\nvar validateFirebaseMergePaths = function validateFirebaseMergePaths(errorPrefix, mergePaths) {\n  var i, curPath;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    var keys = pathSlice(curPath);\n\n    for (var j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) ;else if (!isValidKey(keys[j])) {\n        throw new Error(errorPrefix + 'contains an invalid key (' + keys[j] + ') in path ' + curPath.toString() + '. Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n      }\n    }\n  } // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n\n\n  mergePaths.sort(pathCompare);\n  var prevPath = null;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(errorPrefix + 'contains a path ' + prevPath.toString() + ' that is ancestor of another path ' + curPath.toString());\n    }\n\n    prevPath = curPath;\n  }\n};\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\n\n\nvar validateFirebaseMergeDataArg = function validateFirebaseMergeDataArg(fnName, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  var errorPrefix$1 = errorPrefix(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\n  }\n\n  var mergePaths = [];\n  each(data, function (key, value) {\n    var curPath = new Path(key);\n    validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\n\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(errorPrefix$1 + \"contains an invalid value for '\" + curPath.toString() + \"', which must be a valid \" + 'Firebase priority (a string, finite number, server value, or null).');\n      }\n    }\n\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix$1, mergePaths);\n};\n\nvar validatePriority = function validatePriority(fnName, priority, optional) {\n  if (optional && priority === undefined) {\n    return;\n  }\n\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(errorPrefix(fnName, 'priority') + 'is ' + priority.toString() + ', but must be a valid Firebase priority (a string, finite number, ' + 'server value, or null).');\n  } // Special case to allow importing data with a .sv.\n\n\n  if (!isValidPriority(priority)) {\n    throw new Error(errorPrefix(fnName, 'priority') + 'must be a valid Firebase priority ' + '(a string, finite number, server value, or null).');\n  }\n};\n\nvar validateEventType = function validateEventType(fnName, eventType, optional) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n\n    default:\n      throw new Error(errorPrefix(fnName, 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n  }\n};\n\nvar validateKey = function validateKey(fnName, argumentName, key, optional) {\n  if (optional && key === undefined) {\n    return;\n  }\n\n  if (!isValidKey(key)) {\n    throw new Error(errorPrefix(fnName, argumentName) + 'was an invalid key = \"' + key + '\".  Firebase keys must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n  }\n};\n\nvar validatePathString = function validatePathString(fnName, argumentName, pathString, optional) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, argumentName) + 'was an invalid path = \"' + pathString + '\". Paths must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n  }\n};\n\nvar validateRootPathString = function validateRootPathString(fnName, argumentName, pathString, optional) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\nvar validateWritablePath = function validateWritablePath(fnName, path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nvar validateUrl = function validateUrl(fnName, parsedUrl) {\n  // TODO = Validate server better.\n  var pathString = parsedUrl.path.toString();\n\n  if (!(typeof parsedUrl.repoInfo.host === 'string') || parsedUrl.repoInfo.host.length === 0 || !isValidKey(parsedUrl.repoInfo.namespace) && parsedUrl.repoInfo.host.split(':')[0] !== 'localhost' || pathString.length !== 0 && !isValidRootPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, 'url') + 'must be a valid firebase URL and ' + 'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n  }\n};\n\nvar validateBoolean = function validateBoolean(fnName, argumentName, bool, optional) {\n  if (optional && bool === undefined) {\n    return;\n  }\n\n  if (typeof bool !== 'boolean') {\n    throw new Error(errorPrefix(fnName, argumentName) + 'must be a boolean.');\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\n\n\nvar EventQueue =\n/** @class */\nfunction () {\n  function EventQueue() {\n    this.eventLists_ = [];\n    /**\r\n     * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n     */\n\n    this.recursionDepth_ = 0;\n  }\n\n  return EventQueue;\n}();\n/**\r\n * @param eventDataList - The new events to queue.\r\n */\n\n\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  var currList = null;\n\n  for (var i = 0; i < eventDataList.length; i++) {\n    var data = eventDataList[i];\n    var path = data.getPath();\n\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = {\n        events: [],\n        path: path\n      };\n    }\n\n    currList.events.push(data);\n  }\n\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */\n\n\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\n    return pathEquals(eventPath, path);\n  });\n}\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */\n\n\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\n    return pathContains(eventPath, changedPath) || pathContains(changedPath, eventPath);\n  });\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\n  eventQueue.recursionDepth_++;\n  var sentAll = true;\n\n  for (var i = 0; i < eventQueue.eventLists_.length; i++) {\n    var eventList = eventQueue.eventLists_[i];\n\n    if (eventList) {\n      var eventPath = eventList.path;\n\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n/**\r\n * Iterates through the list and raises each event\r\n */\n\n\nfunction eventListRaise(eventList) {\n  for (var i = 0; i < eventList.events.length; i++) {\n    var eventData = eventList.events[i];\n\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      var eventFn = eventData.getEventRunner();\n\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n\n      exceptionGuard(eventFn);\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\n\nvar MAX_TRANSACTION_RETRIES = 25;\n/**\r\n * A connection to a single data repository.\r\n */\n\nvar Repo =\n/** @class */\nfunction () {\n  function Repo(repoInfo_, forceRestClient_, authTokenProvider_, appCheckProvider_) {\n    this.repoInfo_ = repoInfo_;\n    this.forceRestClient_ = forceRestClient_;\n    this.authTokenProvider_ = authTokenProvider_;\n    this.appCheckProvider_ = appCheckProvider_;\n    this.dataUpdateCount = 0;\n    this.statsListener_ = null;\n    this.eventQueue_ = new EventQueue();\n    this.nextWriteId_ = 1;\n    this.interceptServerDataCallback_ = null;\n    /** A list of data pieces and paths to be set when this client disconnects. */\n\n    this.onDisconnect_ = newSparseSnapshotTree();\n    /** Stores queues of outstanding transactions for Firebase locations. */\n\n    this.transactionQueueTree_ = new Tree(); // TODO: This should be @private but it's used by test_access.js and internal.js\n\n    this.persistentConnection_ = null; // This key is intentionally not updated if RepoInfo is later changed or replaced\n\n    this.key = this.repoInfo_.toURLString();\n  }\n  /**\r\n   * @returns The URL corresponding to the root of this Firebase.\r\n   */\n\n\n  Repo.prototype.toString = function () {\n    return (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host;\n  };\n\n  return Repo;\n}();\n\nfunction repoStart(repo, appId, authOverride) {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(repo.repoInfo_, function (pathString, data, isMerge, tag) {\n      repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n    }, repo.authTokenProvider_, repo.appCheckProvider_); // Minor hack: Fire onConnect immediately, since there's no actual connection.\n\n    setTimeout(function () {\n      return repoOnConnectStatus(repo,\n      /* connectStatus= */\n      true);\n    }, 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n      }\n\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, appId, function (pathString, data, isMerge, tag) {\n      repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n    }, function (connectStatus) {\n      repoOnConnectStatus(repo, connectStatus);\n    }, function (updates) {\n      repoOnServerInfoUpdate(repo, updates);\n    }, repo.authTokenProvider_, repo.appCheckProvider_, authOverride);\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(function (token) {\n    repo.server_.refreshAuthToken(token);\n  });\n  repo.appCheckProvider_.addTokenChangeListener(function (result) {\n    repo.server_.refreshAppCheckToken(result.token);\n  }); // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, function () {\n    return new StatsReporter(repo.stats_, repo.server_);\n  }); // Used for .info.\n\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: function startListening(query, tag, currentHashFn, onComplete) {\n      var infoEvents = [];\n      var node = repo.infoData_.getNode(query._path); // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query._path, node);\n        setTimeout(function () {\n          onComplete('ok');\n        }, 0);\n      }\n\n      return infoEvents;\n    },\n    stopListening: function stopListening() {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: function startListening(query, tag, currentHashFn, onComplete) {\n      repo.server_.listen(query, currentHashFn, tag, function (status, data) {\n        var events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\n      }); // No synchronous events for network-backed sync trees\n\n      return [];\n    },\n    stopListening: function stopListening(query, tag) {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */\n\n\nfunction repoServerTime(repo) {\n  var offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  var offset = offsetNode.val() || 0;\n  return new Date().getTime() + offset;\n}\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\n\n\nfunction repoGenerateServerValues(repo) {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\n\n\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\n  // For testing.\n  repo.dataUpdateCount++;\n  var path = new Path(pathString);\n  data = repo.interceptServerDataCallback_ ? repo.interceptServerDataCallback_(pathString, data) : data;\n  var events = [];\n\n  if (tag) {\n    if (isMerge) {\n      var taggedChildren = map(data, function (raw) {\n        return nodeFromJSON$1(raw);\n      });\n      events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\n    } else {\n      var taggedSnap = nodeFromJSON$1(data);\n      events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\n    }\n  } else if (isMerge) {\n    var changedChildren = map(data, function (raw) {\n      return nodeFromJSON$1(raw);\n    });\n    events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\n  } else {\n    var snap = nodeFromJSON$1(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n\n  var affectedPath = path;\n\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n} // TODO: This should be @private but it's used by test_access.js and internal.js\n\n\nfunction repoInterceptServerData(repo, callback) {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo, connectStatus) {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo, updates) {\n  each(updates, function (key, value) {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo, pathString, value) {\n  var path = new Path('/.info/' + pathString);\n  var newNode = nodeFromJSON$1(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  var events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo) {\n  return repo.nextWriteId_++;\n}\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\n\n\nfunction repoGetValue(repo, query) {\n  // Only active queries are cached. There is no persisted cache.\n  var cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n\n  return repo.server_.get(query).then(function (payload) {\n    var node = nodeFromJSON$1(payload).withIndex(query._queryParams.getIndex());\n    var events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query._path, node);\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n    return Promise.resolve(node);\n  }, function (err) {\n    repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n    return Promise.reject(new Error(err));\n  });\n}\n\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  }); // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n\n  var serverValues = repoGenerateServerValues(repo);\n  var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\n  var existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\n  var writeId = repoGetNextWriteId(repo);\n  var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(path.toString(), newNodeUnresolved.val(\n  /*export=*/\n  true), function (status, errorReason) {\n    var success = status === 'ok';\n\n    if (!success) {\n      warn('set at ' + path + ' failed: ' + status);\n    }\n\n    var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n  var affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath); // We queued the events above, so just flush the queue here\n\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\n  repoLog(repo, 'update', {\n    path: path.toString(),\n    value: childrenToMerge\n  }); // Start with our existing data and merge each child into it.\n\n  var empty = true;\n  var serverValues = repoGenerateServerValues(repo);\n  var changedChildren = {};\n  each(childrenToMerge, function (changedKey, changedValue) {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON$1(changedValue), repo.serverSyncTree_, serverValues);\n  });\n\n  if (!empty) {\n    var writeId_1 = repoGetNextWriteId(repo);\n    var events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId_1);\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n      var success = status === 'ok';\n\n      if (!success) {\n        warn('update at ' + path + ' failed: ' + status);\n      }\n\n      var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId_1, !success);\n      var affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    });\n    each(childrenToMerge, function (changedPath) {\n      var affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\n      repoRerunTransactions(repo, affectedPath);\n    }); // We queued the events above, so just flush the queue here\n\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\n\n\nfunction repoRunOnDisconnectEvents(repo) {\n  repoLog(repo, 'onDisconnectEvents');\n  var serverValues = repoGenerateServerValues(repo);\n  var resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), function (path, node) {\n    var resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\n    sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n  });\n  var events = [];\n  sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), function (path, snap) {\n    events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\n    var affectedPath = repoAbortTransactions(repo, path);\n    repoRerunTransactions(repo, affectedPath);\n  });\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\n  repo.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\n  var newNode = nodeFromJSON$1(value);\n  repo.server_.onDisconnectPut(path.toString(), newNode.val(\n  /*export=*/\n  true), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\n  var newNode = nodeFromJSON$1(value, priority);\n  repo.server_.onDisconnectPut(path.toString(), newNode.val(\n  /*export=*/\n  true), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n    if (status === 'ok') {\n      each(childrenToMerge, function (childName, childNode) {\n        var newChildNode = nodeFromJSON$1(childNode);\n        sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\n      });\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\n  var events;\n\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\n  } else {\n    events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\n  }\n\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  var events;\n\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\n  } else {\n    events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\n  }\n\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nfunction repoInterrupt(repo) {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nfunction repoResume(repo) {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nfunction repoStats(repo, showDelta) {\n  if (showDelta === void 0) {\n    showDelta = false;\n  }\n\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  var stats;\n\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n    return Math.max(currentValue.length, previousValue);\n  }, 0);\n  each(stats, function (stat, value) {\n    var paddedStat = stat; // pad stat names to be the same length (plus 2 extra spaces).\n\n    for (var i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n\n    console.log(paddedStat + value);\n  });\n}\n\nfunction repoStatsIncrementCounter(repo, metric) {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo) {\n  var varArgs = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    varArgs[_i - 1] = arguments[_i];\n  }\n\n  var prefix = '';\n\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n\n  log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\n}\n\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\n  if (callback) {\n    exceptionGuard(function () {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        var code = (status || 'error').toUpperCase();\n        var message = code;\n\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        var error = new Error(message); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        error.code = code;\n        callback(error);\n      }\n    });\n  }\n}\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */\n\n\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, unwatcher, applyLocally) {\n  repoLog(repo, 'transaction on ' + path); // Initialize transaction.\n\n  var transaction = {\n    path: path,\n    update: transactionUpdate,\n    onComplete: onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally: applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher: unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  }; // Run transaction initially.\n\n  var currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  var newVal = transaction.update(currentState.val());\n\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path); // Mark as run and add to our queue.\n\n    transaction.status = 0\n    /* RUN */\n    ;\n    var queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    var nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n    treeSetValue(queueNode, nodeQueue); // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n\n    var priorityForNode = void 0;\n\n    if (typeof newVal === 'object' && newVal !== null && contains(newVal, '.priority')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal, '.priority');\n      assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' + 'Priority must be a valid string, finite number, server value, or null.');\n    } else {\n      var currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) || ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    var serverValues = repoGenerateServerValues(repo);\n    var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n    var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n/**\r\n * @param excludeSets - A specific set to exclude\r\n */\n\n\nfunction repoGetLatestState(repo, path, excludeSets) {\n  return syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) || ChildrenNode.EMPTY_NODE;\n}\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */\n\n\nfunction repoSendReadyTransactions(repo, node) {\n  if (node === void 0) {\n    node = repo.transactionQueueTree_;\n  } // Before recursing, make sure any completed transactions are removed.\n\n\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    var queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n    var allRun = queue.every(function (transaction) {\n      return transaction.status === 0\n      /* RUN */\n      ;\n    }); // If they're all run (and not sent), we can send them.  Else, we must wait.\n\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, function (childNode) {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */\n\n\nfunction repoSendTransactionQueue(repo, path, queue) {\n  // Mark transactions as sent and increment retry count!\n  var setsToIgnore = queue.map(function (txn) {\n    return txn.currentWriteId;\n  });\n  var latestState = repoGetLatestState(repo, path, setsToIgnore);\n  var snapToSend = latestState;\n  var latestHash = latestState.hash();\n\n  for (var i = 0; i < queue.length; i++) {\n    var txn = queue[i];\n    assert(txn.status === 0\n    /* RUN */\n    , 'tryToSendTransactionQueue_: items in queue should all be run.');\n    txn.status = 1\n    /* SENT */\n    ;\n    txn.retryCount++;\n    var relativePath = newRelativePath(path, txn.path); // If we've gotten to this point, the output snapshot must be defined.\n\n    snapToSend = snapToSend.updateChild(relativePath\n    /** @type {!Node} */\n    , txn.currentOutputSnapshotRaw);\n  }\n\n  var dataToSend = snapToSend.val(true);\n  var pathToSend = path; // Send the put.\n\n  repo.server_.put(pathToSend.toString(), dataToSend, function (status) {\n    repoLog(repo, 'transaction put response', {\n      path: pathToSend.toString(),\n      status: status\n    });\n    var events = [];\n\n    if (status === 'ok') {\n      // Queue up the callbacks and fire them after cleaning up all of our\n      // transaction state, since the callback could trigger more\n      // transactions or sets.\n      var callbacks = [];\n\n      var _loop_1 = function _loop_1(i) {\n        queue[i].status = 2\n        /* COMPLETED */\n        ;\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\n\n        if (queue[i].onComplete) {\n          // We never unset the output snapshot, and given that this\n          // transaction is complete, it should be set\n          callbacks.push(function () {\n            return queue[i].onComplete(null, true, queue[i].currentOutputSnapshotResolved);\n          });\n        }\n\n        queue[i].unwatcher();\n      };\n\n      for (var i = 0; i < queue.length; i++) {\n        _loop_1(i);\n      } // Now remove the completed transactions.\n\n\n      repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path)); // There may be pending transactions that we can now send.\n\n      repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events); // Finally, trigger onComplete callbacks.\n\n      for (var i = 0; i < callbacks.length; i++) {\n        exceptionGuard(callbacks[i]);\n      }\n    } else {\n      // transactions are no longer sent.  Update their status appropriately.\n      if (status === 'datastale') {\n        for (var i = 0; i < queue.length; i++) {\n          if (queue[i].status === 3\n          /* SENT_NEEDS_ABORT */\n          ) {\n              queue[i].status = 4\n              /* NEEDS_ABORT */\n              ;\n            } else {\n            queue[i].status = 0\n            /* RUN */\n            ;\n          }\n        }\n      } else {\n        warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n\n        for (var i = 0; i < queue.length; i++) {\n          queue[i].status = 4\n          /* NEEDS_ABORT */\n          ;\n          queue[i].abortReason = status;\n        }\n      }\n\n      repoRerunTransactions(repo, path);\n    }\n  }, latestHash);\n}\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */\n\n\nfunction repoRerunTransactions(repo, changedPath) {\n  var rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\n  var path = treeGetPath(rootMostTransactionNode);\n  var queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n  return path;\n}\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */\n\n\nfunction repoRerunTransactionQueue(repo, queue, path) {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  } // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n\n\n  var callbacks = [];\n  var events = []; // Ignore all of the sets we're going to re-run.\n\n  var txnsToRerun = queue.filter(function (q) {\n    return q.status === 0\n    /* RUN */\n    ;\n  });\n  var setsToIgnore = txnsToRerun.map(function (q) {\n    return q.currentWriteId;\n  });\n\n  var _loop_2 = function _loop_2(i) {\n    var transaction = queue[i];\n    var relativePath = newRelativePath(path, transaction.path);\n    var abortTransaction = false,\n        abortReason;\n    assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n\n    if (transaction.status === 4\n    /* NEEDS_ABORT */\n    ) {\n        abortTransaction = true;\n        abortReason = transaction.abortReason;\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n      } else if (transaction.status === 0\n    /* RUN */\n    ) {\n        if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n          abortTransaction = true;\n          abortReason = 'maxretry';\n          events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n        } else {\n          // This code reruns a transaction\n          var currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\n          transaction.currentInputSnapshot = currentNode;\n          var newData = queue[i].update(currentNode.val());\n\n          if (newData !== undefined) {\n            validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\n            var newDataNode = nodeFromJSON$1(newData);\n            var hasExplicitPriority = typeof newData === 'object' && newData != null && contains(newData, '.priority');\n\n            if (!hasExplicitPriority) {\n              // Keep the old priority if there wasn't a priority explicitly specified.\n              newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n            }\n\n            var oldWriteId = transaction.currentWriteId;\n            var serverValues = repoGenerateServerValues(repo);\n            var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\n            transaction.currentOutputSnapshotRaw = newDataNode;\n            transaction.currentOutputSnapshotResolved = newNodeResolved;\n            transaction.currentWriteId = repoGetNextWriteId(repo); // Mutates setsToIgnore in place\n\n            setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n            events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\n          } else {\n            abortTransaction = true;\n            abortReason = 'nodata';\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n          }\n        }\n      }\n\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = 2\n      /* COMPLETED */\n      ; // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(function () {\n            return queue[i].onComplete(null, false, queue[i].currentInputSnapshot);\n          });\n        } else {\n          callbacks.push(function () {\n            return queue[i].onComplete(new Error(abortReason), false, null);\n          });\n        }\n      }\n    }\n  };\n\n  for (var i = 0; i < queue.length; i++) {\n    _loop_2(i);\n  } // Clean up completed transactions.\n\n\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_); // Now fire callbacks, now that we're in a good, known state.\n\n  for (var i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  } // Try to send the transaction result to the server.\n\n\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */\n\n\nfunction repoGetAncestorTransactionNode(repo, path) {\n  var front; // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n\n  var transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */\n\n\nfunction repoBuildTransactionQueue(repo, transactionNode) {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  var transactionQueue = [];\n  repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue); // Sort them by the order the transactions were created.\n\n  transactionQueue.sort(function (a, b) {\n    return a.order - b.order;\n  });\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\n  var nodeQueue = treeGetValue(node);\n\n  if (nodeQueue) {\n    for (var i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, function (child) {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\n\n\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\n  var queue = treeGetValue(node);\n\n  if (queue) {\n    var to = 0;\n\n    for (var from = 0; from < queue.length; from++) {\n      if (queue[from].status !== 2\n      /* COMPLETED */\n      ) {\n          queue[to] = queue[from];\n          to++;\n        }\n    }\n\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, function (childNode) {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */\n\n\nfunction repoAbortTransactions(repo, path) {\n  var affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n  var transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n  treeForEachAncestor(transactionNode, function (node) {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n  repoAbortTransactionsOnNode(repo, transactionNode);\n  treeForEachDescendant(transactionNode, function (node) {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n  return affectedPath;\n}\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */\n\n\nfunction repoAbortTransactionsOnNode(repo, node) {\n  var queue = treeGetValue(node);\n\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    var callbacks = []; // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n\n    var events = [];\n    var lastSent = -1;\n\n    for (var i = 0; i < queue.length; i++) {\n      if (queue[i].status === 3\n      /* SENT_NEEDS_ABORT */\n      ) ;else if (queue[i].status === 1\n      /* SENT */\n      ) {\n          assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n          lastSent = i; // Mark transaction for abort when it comes back.\n\n          queue[i].status = 3\n          /* SENT_NEEDS_ABORT */\n          ;\n          queue[i].abortReason = 'set';\n        } else {\n        assert(queue[i].status === 0\n        /* RUN */\n        , 'Unexpected transaction status in abort'); // We can abort it immediately.\n\n        queue[i].unwatcher();\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\n\n        if (queue[i].onComplete) {\n          callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, null));\n        }\n      }\n    }\n\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    } // Now fire the callbacks.\n\n\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\n\n    for (var i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction decodePath(pathString) {\n  var pathStringDecoded = '';\n  var pieces = pathString.split('/');\n\n  for (var i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      var piece = pieces[i];\n\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n\n      pathStringDecoded += '/' + piece;\n    }\n  }\n\n  return pathStringDecoded;\n}\n/**\r\n * @returns key value hash\r\n */\n\n\nfunction decodeQuery(queryString) {\n  var e_1, _a;\n\n  var results = {};\n\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n\n  try {\n    for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var segment = _c.value;\n\n      if (segment.length === 0) {\n        continue;\n      }\n\n      var kv = segment.split('=');\n\n      if (kv.length === 2) {\n        results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n      } else {\n        warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return results;\n}\n\nvar parseRepoInfo = function parseRepoInfo(dataURL, nodeAdmin) {\n  var parsedUrl = parseDatabaseURL(dataURL),\n      namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(parsedUrl.host + ' is no longer supported. ' + 'Please use <YOUR FIREBASE>.firebaseio.com instead');\n  } // Catch common error of uninitialized namespace value.\n\n\n  if ((!namespace || namespace === 'undefined') && parsedUrl.domain !== 'localhost') {\n    fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n  return {\n    repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly,\n    /*persistenceKey=*/\n    '',\n    /*includeNamespaceInQueryParams=*/\n    namespace !== parsedUrl.subdomain),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nvar parseDatabaseURL = function parseDatabaseURL(dataURL) {\n  // Default to empty strings in the event of a malformed string.\n  var host = '',\n      domain = '',\n      subdomain = '',\n      pathString = '',\n      namespace = ''; // Always default to SSL, unless otherwise specified.\n\n  var secure = true,\n      scheme = 'https',\n      port = 443; // Don't do any validation here. The caller is responsible for validating the result of parsing.\n\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    var colonInd = dataURL.indexOf('//');\n\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    } // Parse host, path, and query string.\n\n\n    var slashInd = dataURL.indexOf('/');\n\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n\n    var questionMarkInd = dataURL.indexOf('?');\n\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n\n    var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd))); // If we have a port, use scheme for determining if it's secure.\n\n    colonInd = host.indexOf(':');\n\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    var hostWithoutPort = host.slice(0, colonInd);\n\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      var dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1); // Normalize namespaces to lowercase to share storage / connection.\n\n      namespace = subdomain;\n    } // Always treat the value of the `ns` as the namespace name if it is present.\n\n\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host: host,\n    port: port,\n    domain: domain,\n    subdomain: subdomain,\n    secure: secure,\n    scheme: scheme,\n    pathString: pathString,\n    namespace: namespace\n  };\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\n\n\nvar DataEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n   * @param eventRegistration - The function to call to with the event data. User provided\r\n   * @param snapshot - The data backing the event\r\n   * @param prevName - Optional, the name of the previous child for child_* events.\r\n   */\n  function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n    this.eventType = eventType;\n    this.eventRegistration = eventRegistration;\n    this.snapshot = snapshot;\n    this.prevName = prevName;\n  }\n\n  DataEvent.prototype.getPath = function () {\n    var ref = this.snapshot.ref;\n\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  };\n\n  DataEvent.prototype.getEventType = function () {\n    return this.eventType;\n  };\n\n  DataEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n\n  DataEvent.prototype.toString = function () {\n    return this.getPath().toString() + ':' + this.eventType + ':' + stringify(this.snapshot.exportVal());\n  };\n\n  return DataEvent;\n}();\n\nvar CancelEvent =\n/** @class */\nfunction () {\n  function CancelEvent(eventRegistration, error, path) {\n    this.eventRegistration = eventRegistration;\n    this.error = error;\n    this.path = path;\n  }\n\n  CancelEvent.prototype.getPath = function () {\n    return this.path;\n  };\n\n  CancelEvent.prototype.getEventType = function () {\n    return 'cancel';\n  };\n\n  CancelEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n\n  CancelEvent.prototype.toString = function () {\n    return this.path.toString() + ':cancel';\n  };\n\n  return CancelEvent;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */\n\n\nvar CallbackContext =\n/** @class */\nfunction () {\n  function CallbackContext(snapshotCallback, cancelCallback) {\n    this.snapshotCallback = snapshotCallback;\n    this.cancelCallback = cancelCallback;\n  }\n\n  CallbackContext.prototype.onValue = function (expDataSnapshot, previousChildName) {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  };\n\n  CallbackContext.prototype.onCancel = function (error) {\n    assert(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback');\n    return this.cancelCallback.call(null, error);\n  };\n\n  Object.defineProperty(CallbackContext.prototype, \"hasCancelCallback\", {\n    get: function get() {\n      return !!this.cancelCallback;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  CallbackContext.prototype.matches = function (other) {\n    return this.snapshotCallback === other.snapshotCallback || this.snapshotCallback.userCallback === other.snapshotCallback.userCallback && this.snapshotCallback.context === other.snapshotCallback.context;\n  };\n\n  return CallbackContext;\n}();\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */\n\n\nvar OnDisconnect =\n/** @class */\nfunction () {\n  /** @hideconstructor */\n  function OnDisconnect(_repo, _path) {\n    this._repo = _repo;\n    this._path = _path;\n  }\n  /**\r\n   * Cancels all previously queued `onDisconnect()` set or update events for this\r\n   * location and all children.\r\n   *\r\n   * If a write has been queued for this location via a `set()` or `update()` at a\r\n   * parent location, the write at this location will be canceled, though writes\r\n   * to sibling locations will still occur.\r\n   *\r\n   * @returns Resolves when synchronization to the server is complete.\r\n   */\n\n\n  OnDisconnect.prototype.cancel = function () {\n    var deferred = new Deferred();\n    repoOnDisconnectCancel(this._repo, this._path, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Ensures the data at this location is deleted when the client is disconnected\r\n   * (due to closing the browser, navigating to a new page, or network issues).\r\n   *\r\n   * @returns Resolves when synchronization to the server is complete.\r\n   */\n\n\n  OnDisconnect.prototype.remove = function () {\n    validateWritablePath('OnDisconnect.remove', this._path);\n    var deferred = new Deferred();\n    repoOnDisconnectSet(this._repo, this._path, null, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Ensures the data at this location is set to the specified value when the\r\n   * client is disconnected (due to closing the browser, navigating to a new page,\r\n   * or network issues).\r\n   *\r\n   * `set()` is especially useful for implementing \"presence\" systems, where a\r\n   * value should be changed or cleared when a user disconnects so that they\r\n   * appear \"offline\" to other users. See\r\n   * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n   * for more information.\r\n   *\r\n   * Note that `onDisconnect` operations are only triggered once. If you want an\r\n   * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n   * the `onDisconnect` operations each time.\r\n   *\r\n   * @param value - The value to be written to this location on disconnect (can\r\n   * be an object, array, string, number, boolean, or null).\r\n   * @returns Resolves when synchronization to the Database is complete.\r\n   */\n\n\n  OnDisconnect.prototype.set = function (value) {\n    validateWritablePath('OnDisconnect.set', this._path);\n    validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\n    var deferred = new Deferred();\n    repoOnDisconnectSet(this._repo, this._path, value, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Ensures the data at this location is set to the specified value and priority\r\n   * when the client is disconnected (due to closing the browser, navigating to a\r\n   * new page, or network issues).\r\n   *\r\n   * @param value - The value to be written to this location on disconnect (can\r\n   * be an object, array, string, number, boolean, or null).\r\n   * @param priority - The priority to be written (string, number, or null).\r\n   * @returns Resolves when synchronization to the Database is complete.\r\n   */\n\n\n  OnDisconnect.prototype.setWithPriority = function (value, priority) {\n    validateWritablePath('OnDisconnect.setWithPriority', this._path);\n    validateFirebaseDataArg('OnDisconnect.setWithPriority', value, this._path, false);\n    validatePriority('OnDisconnect.setWithPriority', priority, false);\n    var deferred = new Deferred();\n    repoOnDisconnectSetWithPriority(this._repo, this._path, value, priority, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Writes multiple values at this location when the client is disconnected (due\r\n   * to closing the browser, navigating to a new page, or network issues).\r\n   *\r\n   * The `values` argument contains multiple property-value pairs that will be\r\n   * written to the Database together. Each child property can either be a simple\r\n   * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n   * from the current location to the data to update.\r\n   *\r\n   * As opposed to the `set()` method, `update()` can be use to selectively update\r\n   * only the referenced properties at the current location (instead of replacing\r\n   * all the child properties at the current location).\r\n   *\r\n   * @param values - Object containing multiple values.\r\n   * @returns Resolves when synchronization to the Database is complete.\r\n   */\n\n\n  OnDisconnect.prototype.update = function (values) {\n    validateWritablePath('OnDisconnect.update', this._path);\n    validateFirebaseMergeDataArg('OnDisconnect.update', values, this._path, false);\n    var deferred = new Deferred();\n    repoOnDisconnectUpdate(this._repo, this._path, values, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @internal\r\n */\n\n\nvar QueryImpl =\n/** @class */\nfunction () {\n  /**\r\n   * @hideconstructor\r\n   */\n  function QueryImpl(_repo, _path, _queryParams, _orderByCalled) {\n    this._repo = _repo;\n    this._path = _path;\n    this._queryParams = _queryParams;\n    this._orderByCalled = _orderByCalled;\n  }\n\n  Object.defineProperty(QueryImpl.prototype, \"key\", {\n    get: function get() {\n      if (pathIsEmpty(this._path)) {\n        return null;\n      } else {\n        return pathGetBack(this._path);\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(QueryImpl.prototype, \"ref\", {\n    get: function get() {\n      return new ReferenceImpl(this._repo, this._path);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(QueryImpl.prototype, \"_queryIdentifier\", {\n    get: function get() {\n      var obj = queryParamsGetQueryObject(this._queryParams);\n      var id = ObjectToUniqueKey(obj);\n      return id === '{}' ? 'default' : id;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(QueryImpl.prototype, \"_queryObject\", {\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     */\n    get: function get() {\n      return queryParamsGetQueryObject(this._queryParams);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  QueryImpl.prototype.isEqual = function (other) {\n    other = getModularInstance(other);\n\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    var sameRepo = this._repo === other._repo;\n    var samePath = pathEquals(this._path, other._path);\n    var sameQueryIdentifier = this._queryIdentifier === other._queryIdentifier;\n    return sameRepo && samePath && sameQueryIdentifier;\n  };\n\n  QueryImpl.prototype.toJSON = function () {\n    return this.toString();\n  };\n\n  QueryImpl.prototype.toString = function () {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  };\n\n  return QueryImpl;\n}();\n/**\r\n * Validates that no other order by call has been made\r\n */\n\n\nfunction validateNoPreviousOrderByCall(query, fnName) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n/**\r\n * Validates start/end values for queries.\r\n */\n\n\nfunction validateQueryEndpoints(params) {\n  var startNode = null;\n  var endNode = null;\n\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' + 'startAt(), endAt(), or equalTo().';\n    var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' + 'endAt(), endBefore(), or equalTo() must be a string.';\n\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (startNode != null && !isValidPriority(startNode) || endNode != null && !isValidPriority(endNode)) {\n      throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' + 'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' + '(null, a number, or a string).');\n    }\n  } else {\n    assert(params.getIndex() instanceof PathIndex || params.getIndex() === VALUE_INDEX, 'unknown index type.');\n\n    if (startNode != null && typeof startNode === 'object' || endNode != null && typeof endNode === 'object') {\n      throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' + 'equalTo() cannot be an object.');\n    }\n  }\n}\n/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */\n\n\nfunction validateLimit(params) {\n  if (params.hasStart() && params.hasEnd() && params.hasLimit() && !params.hasAnchoredLimit()) {\n    throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" + 'limitToFirst() or limitToLast() instead.');\n  }\n}\n/**\r\n * @internal\r\n */\n\n\nvar ReferenceImpl =\n/** @class */\nfunction (_super) {\n  __extends(ReferenceImpl, _super);\n  /** @hideconstructor */\n\n\n  function ReferenceImpl(repo, path) {\n    return _super.call(this, repo, path, new QueryParams(), false) || this;\n  }\n\n  Object.defineProperty(ReferenceImpl.prototype, \"parent\", {\n    get: function get() {\n      var parentPath = pathParent(this._path);\n      return parentPath === null ? null : new ReferenceImpl(this._repo, parentPath);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceImpl.prototype, \"root\", {\n    get: function get() {\n      var ref = this;\n\n      while (ref.parent !== null) {\n        ref = ref.parent;\n      }\n\n      return ref;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ReferenceImpl;\n}(QueryImpl);\n/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */\n\n\nvar DataSnapshot =\n/** @class */\nfunction () {\n  /**\r\n   * @param _node - A SnapshotNode to wrap.\r\n   * @param ref - The location this snapshot came from.\r\n   * @param _index - The iteration order for this snapshot\r\n   * @hideconstructor\r\n   */\n  function DataSnapshot(_node,\n  /**\r\n   * The location of this DataSnapshot.\r\n   */\n  ref, _index) {\n    this._node = _node;\n    this.ref = ref;\n    this._index = _index;\n  }\n\n  Object.defineProperty(DataSnapshot.prototype, \"priority\", {\n    /**\r\n     * Gets the priority value of the data in this `DataSnapshot`.\r\n     *\r\n     * Applications need not use priority but can order collections by\r\n     * ordinary properties (see\r\n     * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n     * ).\r\n     */\n    get: function get() {\n      // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n      return this._node.getPriority().val();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    /**\r\n     * The key (last part of the path) of the location of this `DataSnapshot`.\r\n     *\r\n     * The last token in a Database location is considered its key. For example,\r\n     * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n     * `DataSnapshot` will return the key for the location that generated it.\r\n     * However, accessing the key on the root URL of a Database will return\r\n     * `null`.\r\n     */\n    get: function get() {\n      return this.ref.key;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataSnapshot.prototype, \"size\", {\n    /** Returns the number of child properties of this `DataSnapshot`. */\n    get: function get() {\n      return this._node.numChildren();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Gets another `DataSnapshot` for the location at the specified relative path.\r\n   *\r\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n   * another `DataSnapshot` for the location at the specified relative path. The\r\n   * relative path can either be a simple child name (for example, \"ada\") or a\r\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n   * whose value is `null`) is returned.\r\n   *\r\n   * @param path - A relative path to the location of child data.\r\n   */\n\n  DataSnapshot.prototype.child = function (path) {\n    var childPath = new Path(path);\n    var childRef = child(this.ref, path);\n    return new DataSnapshot(this._node.getChild(childPath), childRef, PRIORITY_INDEX);\n  };\n  /**\r\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n   * efficient than using `snapshot.val() !== null`.\r\n   */\n\n\n  DataSnapshot.prototype.exists = function () {\n    return !this._node.isEmpty();\n  };\n  /**\r\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n   *\r\n   * The `exportVal()` method is similar to `val()`, except priority information\r\n   * is included (if available), making it suitable for backing up your data.\r\n   *\r\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n   *   Array, string, number, boolean, or `null`).\r\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  DataSnapshot.prototype.exportVal = function () {\n    return this._node.val(true);\n  };\n  /**\r\n   * Enumerates the top-level children in the `DataSnapshot`.\r\n   *\r\n   * Because of the way JavaScript objects work, the ordering of data in the\r\n   * JavaScript object returned by `val()` is not guaranteed to match the\r\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n   * where `forEach()` comes in handy. It guarantees the children of a\r\n   * `DataSnapshot` will be iterated in their query order.\r\n   *\r\n   * If no explicit `orderBy*()` method is used, results are returned\r\n   * ordered by key (unless priorities are used, in which case, results are\r\n   * returned by priority).\r\n   *\r\n   * @param action - A function that will be called for each child DataSnapshot.\r\n   * The callback can return true to cancel further enumeration.\r\n   * @returns true if enumeration was canceled due to your callback returning\r\n   * true.\r\n   */\n\n\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    var childrenNode = this._node; // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n\n    return !!childrenNode.forEachChild(this._index, function (key, node) {\n      return action(new DataSnapshot(node, child(_this.ref, key), PRIORITY_INDEX));\n    });\n  };\n  /**\r\n   * Returns true if the specified child path has (non-null) data.\r\n   *\r\n   * @param path - A relative path to the location of a potential child.\r\n   * @returns `true` if data exists at the specified child path; else\r\n   *  `false`.\r\n   */\n\n\n  DataSnapshot.prototype.hasChild = function (path) {\n    var childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  };\n  /**\r\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n   * properties.\r\n   *\r\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n   * children. If it does, you can enumerate them using `forEach()`. If it\r\n   * doesn't, then either this snapshot contains a primitive value (which can be\r\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n   * `null`).\r\n   *\r\n   * @returns true if this snapshot has any children; else false.\r\n   */\n\n\n  DataSnapshot.prototype.hasChildren = function () {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  };\n  /**\r\n   * Returns a JSON-serializable representation of this object.\r\n   */\n\n\n  DataSnapshot.prototype.toJSON = function () {\n    return this.exportVal();\n  };\n  /**\r\n   * Extracts a JavaScript value from a `DataSnapshot`.\r\n   *\r\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n   * scalar type (string, number, or boolean), an array, or an object. It may\r\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n   * data).\r\n   *\r\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n   *   Array, string, number, boolean, or `null`).\r\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  DataSnapshot.prototype.val = function () {\n    return this._node.val();\n  };\n\n  return DataSnapshot;\n}();\n/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */\n\n\nfunction ref(db, path) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('ref');\n\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */\n\n\nfunction refFromURL(db, url) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('refFromURL');\n\n  var parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n  var repoInfo = parsedURL.repoInfo;\n\n  if (!db._repo.repoInfo_.isCustomHost() && repoInfo.host !== db._repo.repoInfo_.host) {\n    fatal('refFromURL' + ': Host name does not match the current database: ' + '(found ' + repoInfo.host + ' but expected ' + db._repo.repoInfo_.host + ')');\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */\n\n\nfunction child(parent, path) {\n  parent = getModularInstance(parent);\n\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\r\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */\n\n\nfunction push(parent, value) {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  var now = repoServerTime(parent._repo);\n  var name = nextPushId(now); // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n\n  var thennablePushRef = child(parent, name);\n  var pushRef = child(parent, name);\n  var promise;\n\n  if (value != null) {\n    promise = set(pushRef, value).then(function () {\n      return pushRef;\n    });\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef;\n}\n/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */\n\n\nfunction remove(ref) {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\n\n\nfunction set(ref, value) {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  var deferred = new Deferred();\n  repoSetWithPriority(ref._repo, ref._path, value,\n  /*priority=*/\n  null, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\n\n\nfunction setPriority(ref, priority) {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  var deferred = new Deferred();\n  repoSetWithPriority(ref._repo, pathChild(ref._path, '.priority'), priority, null, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\n\n\nfunction setWithPriority(ref, value, priority) {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  var deferred = new Deferred();\n  repoSetWithPriority(ref._repo, ref._path, value, priority, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */\n\n\nfunction update(ref, values) {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  var deferred = new Deferred();\n  repoUpdate(ref._repo, ref._path, values, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A promise which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */\n\n\nfunction get(query) {\n  query = getModularInstance(query);\n  return repoGetValue(query._repo, query).then(function (node) {\n    return new DataSnapshot(node, new ReferenceImpl(query._repo, query._path), query._queryParams.getIndex());\n  });\n}\n/**\r\n * Represents registration for 'value' events.\r\n */\n\n\nvar ValueEventRegistration =\n/** @class */\nfunction () {\n  function ValueEventRegistration(callbackContext) {\n    this.callbackContext = callbackContext;\n  }\n\n  ValueEventRegistration.prototype.respondsTo = function (eventType) {\n    return eventType === 'value';\n  };\n\n  ValueEventRegistration.prototype.createEvent = function (change, query) {\n    var index = query._queryParams.getIndex();\n\n    return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, new ReferenceImpl(query._repo, query._path), index));\n  };\n\n  ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n    var _this = this;\n\n    if (eventData.getEventType() === 'cancel') {\n      return function () {\n        return _this.callbackContext.onCancel(eventData.error);\n      };\n    } else {\n      return function () {\n        return _this.callbackContext.onValue(eventData.snapshot, null);\n      };\n    }\n  };\n\n  ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n\n  ValueEventRegistration.prototype.matches = function (other) {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  };\n\n  ValueEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callbackContext !== null;\n  };\n\n  return ValueEventRegistration;\n}();\n/**\r\n * Represents the registration of a child_x event.\r\n */\n\n\nvar ChildEventRegistration =\n/** @class */\nfunction () {\n  function ChildEventRegistration(eventType, callbackContext) {\n    this.eventType = eventType;\n    this.callbackContext = callbackContext;\n  }\n\n  ChildEventRegistration.prototype.respondsTo = function (eventType) {\n    var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck = eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  };\n\n  ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n\n  ChildEventRegistration.prototype.createEvent = function (change, query) {\n    assert(change.childName != null, 'Child events should have a childName.');\n    var childRef = child(new ReferenceImpl(query._repo, query._path), change.childName);\n\n    var index = query._queryParams.getIndex();\n\n    return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, childRef, index), change.prevName);\n  };\n\n  ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n    var _this = this;\n\n    if (eventData.getEventType() === 'cancel') {\n      return function () {\n        return _this.callbackContext.onCancel(eventData.error);\n      };\n    } else {\n      return function () {\n        return _this.callbackContext.onValue(eventData.snapshot, eventData.prevName);\n      };\n    }\n  };\n\n  ChildEventRegistration.prototype.matches = function (other) {\n    if (other instanceof ChildEventRegistration) {\n      return this.eventType === other.eventType && (!this.callbackContext || !other.callbackContext || this.callbackContext.matches(other.callbackContext));\n    }\n\n    return false;\n  };\n\n  ChildEventRegistration.prototype.hasAnyCallback = function () {\n    return !!this.callbackContext;\n  };\n\n  return ChildEventRegistration;\n}();\n\nfunction addEventListener(query, eventType, callback, cancelCallbackOrListenOptions, options) {\n  var cancelCallback;\n\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    var userCallback_1 = callback;\n\n    var onceCallback = function onceCallback(dataSnapshot, previousChildName) {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback_1(dataSnapshot, previousChildName);\n    };\n\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  var callbackContext = new CallbackContext(callback, cancelCallback || undefined);\n  var container = eventType === 'value' ? new ValueEventRegistration(callbackContext) : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return function () {\n    return repoRemoveEventCallbackForQuery(query._repo, query, container);\n  };\n}\n\nfunction onValue(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'value', callback, cancelCallbackOrListenOptions, options);\n}\n\nfunction onChildAdded(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_added', callback, cancelCallbackOrListenOptions, options);\n}\n\nfunction onChildChanged(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_changed', callback, cancelCallbackOrListenOptions, options);\n}\n\nfunction onChildMoved(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_moved', callback, cancelCallbackOrListenOptions, options);\n}\n\nfunction onChildRemoved(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_removed', callback, cancelCallbackOrListenOptions, options);\n}\n/**\r\n * Detaches a callback previously attached with `on()`.\r\n *\r\n * Detach a callback previously attached with `on()`. Note that if `on()` was\r\n * called multiple times with the same eventType and callback, the callback\r\n * will be called multiple times for each event, and `off()` must be called\r\n * multiple times to remove the callback. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */\n\n\nfunction off(query, eventType, callback) {\n  var container = null;\n  var expCallback = callback ? new CallbackContext(callback) : null;\n\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */\n\n\nvar QueryConstraint =\n/** @class */\nfunction () {\n  function QueryConstraint() {}\n\n  return QueryConstraint;\n}();\n\nvar QueryEndAtConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryEndAtConstraint, _super);\n\n  function QueryEndAtConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryEndAtConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    var newParams = queryParamsEndAt(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n\n    if (query._queryParams.hasEnd()) {\n      throw new Error('endAt: Starting point was already set (by another call to endAt, ' + 'endBefore or equalTo).');\n    }\n\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n\n  return QueryEndAtConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */\n\n\nfunction endAt(value, key) {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nvar QueryEndBeforeConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryEndBeforeConstraint, _super);\n\n  function QueryEndBeforeConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryEndBeforeConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    var newParams = queryParamsEndBefore(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n\n    if (query._queryParams.hasEnd()) {\n      throw new Error('endBefore: Starting point was already set (by another call to endAt, ' + 'endBefore or equalTo).');\n    }\n\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n\n  return QueryEndBeforeConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value lesss than or equal\r\n * to the specified value and a a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\n\n\nfunction endBefore(value, key) {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nvar QueryStartAtConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryStartAtConstraint, _super);\n\n  function QueryStartAtConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryStartAtConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    var newParams = queryParamsStartAt(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n\n    if (query._queryParams.hasStart()) {\n      throw new Error('startAt: Starting point was already set (by another call to startAt, ' + 'startBefore or equalTo).');\n    }\n\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n\n  return QueryStartAtConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\n\n\nfunction startAt(value, key) {\n  if (value === void 0) {\n    value = null;\n  }\n\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nvar QueryStartAfterConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryStartAfterConstraint, _super);\n\n  function QueryStartAfterConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryStartAfterConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    var newParams = queryParamsStartAfter(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n\n    if (query._queryParams.hasStart()) {\n      throw new Error('startAfter: Starting point was already set (by another call to startAt, ' + 'startAfter, or equalTo).');\n    }\n\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n\n  return QueryStartAfterConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\n\n\nfunction startAfter(value, key) {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nvar QueryLimitToFirstConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryLimitToFirstConstraint, _super);\n\n  function QueryLimitToFirstConstraint(_limit) {\n    var _this = _super.call(this) || this;\n\n    _this._limit = _limit;\n    return _this;\n  }\n\n  QueryLimitToFirstConstraint.prototype._apply = function (query) {\n    if (query._queryParams.hasLimit()) {\n      throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst ' + 'or limitToLast).');\n    }\n\n    return new QueryImpl(query._repo, query._path, queryParamsLimitToFirst(query._queryParams, this._limit), query._orderByCalled);\n  };\n\n  return QueryLimitToFirstConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\n\n\nfunction limitToFirst(limit) {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nvar QueryLimitToLastConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryLimitToLastConstraint, _super);\n\n  function QueryLimitToLastConstraint(_limit) {\n    var _this = _super.call(this) || this;\n\n    _this._limit = _limit;\n    return _this;\n  }\n\n  QueryLimitToLastConstraint.prototype._apply = function (query) {\n    if (query._queryParams.hasLimit()) {\n      throw new Error('limitToLast: Limit was already set (by another call to limitToFirst ' + 'or limitToLast).');\n    }\n\n    return new QueryImpl(query._repo, query._path, queryParamsLimitToLast(query._queryParams, this._limit), query._orderByCalled);\n  };\n\n  return QueryLimitToLastConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\n\n\nfunction limitToLast(limit) {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nvar QueryOrderByChildConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryOrderByChildConstraint, _super);\n\n  function QueryOrderByChildConstraint(_path) {\n    var _this = _super.call(this) || this;\n\n    _this._path = _path;\n    return _this;\n  }\n\n  QueryOrderByChildConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    var parsedPath = new Path(this._path);\n\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');\n    }\n\n    var index = new PathIndex(parsedPath);\n    var newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  return QueryOrderByChildConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */\n\n\nfunction orderByChild(path) {\n  if (path === '$key') {\n    throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');\n  } else if (path === '$priority') {\n    throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');\n  } else if (path === '$value') {\n    throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');\n  }\n\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nvar QueryOrderByKeyConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryOrderByKeyConstraint, _super);\n\n  function QueryOrderByKeyConstraint() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  QueryOrderByKeyConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    var newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  return QueryOrderByKeyConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\n\n\nfunction orderByKey() {\n  return new QueryOrderByKeyConstraint();\n}\n\nvar QueryOrderByPriorityConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryOrderByPriorityConstraint, _super);\n\n  function QueryOrderByPriorityConstraint() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  QueryOrderByPriorityConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    var newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  return QueryOrderByPriorityConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */\n\n\nfunction orderByPriority() {\n  return new QueryOrderByPriorityConstraint();\n}\n\nvar QueryOrderByValueConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryOrderByValueConstraint, _super);\n\n  function QueryOrderByValueConstraint() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  QueryOrderByValueConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    var newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  return QueryOrderByValueConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\n\n\nfunction orderByValue() {\n  return new QueryOrderByValueConstraint();\n}\n\nvar QueryEqualToValueConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryEqualToValueConstraint, _super);\n\n  function QueryEqualToValueConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryEqualToValueConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n\n    if (query._queryParams.hasStart()) {\n      throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or ' + 'equalTo).');\n    }\n\n    if (query._queryParams.hasEnd()) {\n      throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or ' + 'equalTo).');\n    }\n\n    return new QueryEndAtConstraint(this._value, this._key)._apply(new QueryStartAtConstraint(this._value, this._key)._apply(query));\n  };\n\n  return QueryEqualToValueConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\n\n\nfunction equalTo(value, key) {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */\n\n\nfunction query(query) {\n  var e_1, _a;\n\n  var queryConstraints = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    queryConstraints[_i - 1] = arguments[_i];\n  }\n\n  var queryImpl = getModularInstance(query);\n\n  try {\n    for (var queryConstraints_1 = __values(queryConstraints), queryConstraints_1_1 = queryConstraints_1.next(); !queryConstraints_1_1.done; queryConstraints_1_1 = queryConstraints_1.next()) {\n      var constraint = queryConstraints_1_1.value;\n      queryImpl = constraint._apply(queryImpl);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (queryConstraints_1_1 && !queryConstraints_1_1.done && (_a = queryConstraints_1.return)) _a.call(queryConstraints_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return queryImpl;\n}\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\n\n\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\n\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n/**\r\n * Creates and caches Repo instances.\r\n */\n\nvar repos = {};\n/**\r\n * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n */\n\nvar useRestClient = false;\n/**\r\n * Update an existing repo in place to point to a new host/port.\r\n */\n\nfunction repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider) {\n  repo.repoInfo_ = new RepoInfo(host + \":\" + port,\n  /* secure= */\n  false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */\n\n\nfunction repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url, nodeAdmin) {\n  var dbUrl = url || app.options.databaseURL;\n\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\"Can't determine Firebase Database URL. Be sure to include \" + ' a Project ID when calling firebase.initializeApp().');\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\n  }\n\n  var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  var repoInfo = parsedUrl.repoInfo;\n  var isEmulator;\n  var dbEmulatorHost = undefined;\n\n  if (typeof process !== 'undefined') {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  var authTokenProvider = nodeAdmin && isEmulator ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER) : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal('Database URL must point to the root of a Firebase Database ' + '(not including a child path).');\n  }\n\n  var repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider, new AppCheckTokenProvider(app.name, appCheckProvider));\n  return new FirebaseDatabase(repo, app);\n}\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\n\n\nfunction repoManagerDeleteRepo(repo, appName) {\n  var appRepos = repos[appName]; // This should never happen...\n\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(\"Database \" + appName + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n  }\n\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */\n\n\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider, appCheckProvider) {\n  var appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  var repo = appRepos[repoInfo.toURLString()];\n\n  if (repo) {\n    fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n  }\n\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n  return repo;\n}\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\n\n\nfunction repoManagerForceRestClient(forceRestClient) {\n  useRestClient = forceRestClient;\n}\n/**\r\n * Class representing a Firebase Realtime Database.\r\n */\n\n\nvar FirebaseDatabase =\n/** @class */\nfunction () {\n  /** @hideconstructor */\n  function FirebaseDatabase(_repoInternal,\n  /** The FirebaseApp associated with this Realtime Database instance. */\n  app) {\n    this._repoInternal = _repoInternal;\n    this.app = app;\n    /** Represents a database instance. */\n\n    this['type'] = 'database';\n    /** Track if the instance has been used (root or repo accessed) */\n\n    this._instanceStarted = false;\n  }\n\n  Object.defineProperty(FirebaseDatabase.prototype, \"_repo\", {\n    get: function get() {\n      if (!this._instanceStarted) {\n        repoStart(this._repoInternal, this.app.options.appId, this.app.options['databaseAuthVariableOverride']);\n        this._instanceStarted = true;\n      }\n\n      return this._repoInternal;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseDatabase.prototype, \"_root\", {\n    get: function get() {\n      if (!this._rootInternal) {\n        this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n      }\n\n      return this._rootInternal;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  FirebaseDatabase.prototype._delete = function () {\n    this._checkNotDeleted('delete');\n\n    repoManagerDeleteRepo(this._repo, this.app.name);\n    this._repoInternal = null;\n    this._rootInternal = null;\n    return Promise.resolve();\n  };\n\n  FirebaseDatabase.prototype._checkNotDeleted = function (apiName) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  };\n\n  return FirebaseDatabase;\n}();\n/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n */\n\n\nfunction useDatabaseEmulator(db, host, port, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('useEmulator');\n\n  if (db._instanceStarted) {\n    fatal('Cannot call useEmulator() after instance has already been initialized.');\n  }\n\n  var repo = db._repoInternal;\n  var tokenProvider = undefined;\n\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal('mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".');\n    }\n\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    var token = createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  } // Modify the repo to apply emulator settings\n\n\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */\n\n\nfunction goOffline(db) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('goOffline');\n\n  repoInterrupt(db._repo);\n}\n/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */\n\n\nfunction goOnline(db) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('goOnline');\n\n  repoResume(db._repo);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */\n\nfunction serverTimestamp() {\n  return SERVER_TIMESTAMP;\n}\n/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */\n\n\nfunction _increment(delta) {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A type for the resolve value of Firebase.transaction.\r\n */\n\n\nvar TransactionResult =\n/** @class */\nfunction () {\n  /** @hideconstructor */\n  function TransactionResult(\n  /** Whether the transaction was successfully committed. */\n  committed,\n  /** The resulting data snapshot. */\n  snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  }\n  /** Returns a JSON-serializable representation of this object. */\n\n\n  TransactionResult.prototype.toJSON = function () {\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n\n  return TransactionResult;\n}();\n/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `transaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A Promise that can optionally be used instead of the onComplete\r\n * callback to handle success and failure.\r\n */\n\n\nfunction runTransaction(ref, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ntransactionUpdate, options) {\n  var _a;\n\n  ref = getModularInstance(ref);\n  validateWritablePath('Reference.transaction', ref._path);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'Reference.transaction failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  var applyLocally = (_a = options === null || options === void 0 ? void 0 : options.applyLocally) !== null && _a !== void 0 ? _a : true;\n  var deferred = new Deferred();\n\n  var promiseComplete = function promiseComplete(error, committed, node) {\n    var dataSnapshot = null;\n\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot(node, new ReferenceImpl(ref._repo, ref._path), PRIORITY_INDEX);\n      deferred.resolve(new TransactionResult(committed, dataSnapshot));\n    }\n  }; // Add a watch to make sure we get server updates.\n\n\n  var unwatcher = onValue(ref, function () {});\n  repoStartTransaction(ref._repo, ref._path, transactionUpdate, promiseComplete, unwatcher, applyLocally);\n  return deferred.promise;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar OnDisconnect$1 =\n/** @class */\nfunction () {\n  function OnDisconnect(_delegate) {\n    this._delegate = _delegate;\n  }\n\n  OnDisconnect.prototype.cancel = function (onComplete) {\n    validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.cancel', 'onComplete', onComplete, true);\n\n    var result = this._delegate.cancel();\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  OnDisconnect.prototype.remove = function (onComplete) {\n    validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.remove', 'onComplete', onComplete, true);\n\n    var result = this._delegate.remove();\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  OnDisconnect.prototype.set = function (value, onComplete) {\n    validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateCallback('OnDisconnect.set', 'onComplete', onComplete, true);\n\n    var result = this._delegate.set(value);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n    validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateCallback('OnDisconnect.setWithPriority', 'onComplete', onComplete, true);\n\n    var result = this._delegate.setWithPriority(value, priority);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n    validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n    }\n\n    validateCallback('OnDisconnect.update', 'onComplete', onComplete, true);\n\n    var result = this._delegate.update(objectToMerge);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TransactionResult$1 =\n/** @class */\nfunction () {\n  /**\r\n   * A type for the resolve value of Firebase.transaction.\r\n   */\n  function TransactionResult(committed, snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  } // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  TransactionResult.prototype.toJSON = function () {\n    validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n\n  return TransactionResult;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\n\n\nvar DataSnapshot$1 =\n/** @class */\nfunction () {\n  function DataSnapshot(_database, _delegate) {\n    this._database = _database;\n    this._delegate = _delegate;\n  }\n  /**\r\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n   * empty.\r\n   *\r\n   * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.val = function () {\n    validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this._delegate.val();\n  };\n  /**\r\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n   * the entire node contents.\r\n   * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.exportVal = function () {\n    validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this._delegate.exportVal();\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  DataSnapshot.prototype.toJSON = function () {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this._delegate.toJSON();\n  };\n  /**\r\n   * Returns whether the snapshot contains a non-null value.\r\n   *\r\n   * @returns Whether the snapshot contains a non-null value, or is empty.\r\n   */\n\n\n  DataSnapshot.prototype.exists = function () {\n    validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return this._delegate.exists();\n  };\n  /**\r\n   * Returns a DataSnapshot of the specified child node's contents.\r\n   *\r\n   * @param path - Path to a child.\r\n   * @returns DataSnapshot for child node.\r\n   */\n\n\n  DataSnapshot.prototype.child = function (path) {\n    validateArgCount('DataSnapshot.child', 0, 1, arguments.length); // Ensure the childPath is a string (can be a number)\n\n    path = String(path);\n    validatePathString('DataSnapshot.child', 'path', path, false);\n    return new DataSnapshot(this._database, this._delegate.child(path));\n  };\n  /**\r\n   * Returns whether the snapshot contains a child at the specified path.\r\n   *\r\n   * @param path - Path to a child.\r\n   * @returns Whether the child exists.\r\n   */\n\n\n  DataSnapshot.prototype.hasChild = function (path) {\n    validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 'path', path, false);\n    return this._delegate.hasChild(path);\n  };\n  /**\r\n   * Returns the priority of the object, or null if no priority was set.\r\n   *\r\n   * @returns The priority.\r\n   */\n\n\n  DataSnapshot.prototype.getPriority = function () {\n    validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\n    return this._delegate.priority;\n  };\n  /**\r\n   * Iterates through child nodes and calls the specified action for each one.\r\n   *\r\n   * @param action - Callback function to be called\r\n   * for each child.\r\n   * @returns True if forEach was canceled by action returning true for\r\n   * one of the child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n\n    validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    validateCallback('DataSnapshot.forEach', 'action', action, false);\n    return this._delegate.forEach(function (expDataSnapshot) {\n      return action(new DataSnapshot(_this._database, expDataSnapshot));\n    });\n  };\n  /**\r\n   * Returns whether this DataSnapshot has children.\r\n   * @returns True if the DataSnapshot contains 1 or more child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.hasChildren = function () {\n    validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n    return this._delegate.hasChildren();\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    get: function get() {\n      return this._delegate.key;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the number of children for this DataSnapshot.\r\n   * @returns The number of children that this DataSnapshot contains.\r\n   */\n\n  DataSnapshot.prototype.numChildren = function () {\n    validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n    return this._delegate.size;\n  };\n  /**\r\n   * @returns The Firebase reference for the location this snapshot's data came\r\n   * from.\r\n   */\n\n\n  DataSnapshot.prototype.getRef = function () {\n    validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n    return new Reference(this._database, this._delegate.ref);\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return DataSnapshot;\n}();\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\n\n\nvar Query =\n/** @class */\nfunction () {\n  function Query(database, _delegate) {\n    this.database = database;\n    this._delegate = _delegate;\n  }\n\n  Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n    var _this = this;\n\n    var _a;\n\n    validateArgCount('Query.on', 2, 4, arguments.length);\n    validateCallback('Query.on', 'callback', callback, false);\n    var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n\n    var valueCallback = function valueCallback(expSnapshot, previousChildName) {\n      callback.call(ret.context, new DataSnapshot$1(_this.database, expSnapshot), previousChildName);\n    };\n\n    valueCallback.userCallback = callback;\n    valueCallback.context = ret.context;\n    var cancelCallback = (_a = ret.cancel) === null || _a === void 0 ? void 0 : _a.bind(ret.context);\n\n    switch (eventType) {\n      case 'value':\n        onValue(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      case 'child_added':\n        onChildAdded(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      case 'child_removed':\n        onChildRemoved(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      case 'child_changed':\n        onChildChanged(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      case 'child_moved':\n        onChildMoved(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      default:\n        throw new Error(errorPrefix('Query.on', 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n    }\n  };\n\n  Query.prototype.off = function (eventType, callback, context) {\n    validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', eventType, true);\n    validateCallback('Query.off', 'callback', callback, true);\n    validateContextObject('Query.off', 'context', context, true);\n\n    if (callback) {\n      var valueCallback = function valueCallback() {};\n\n      valueCallback.userCallback = callback;\n      valueCallback.context = context;\n      off(this._delegate, eventType, valueCallback);\n    } else {\n      off(this._delegate, eventType);\n    }\n  };\n  /**\r\n   * Get the server-value for this query, or return a cached value if not connected.\r\n   */\n\n\n  Query.prototype.get = function () {\n    var _this = this;\n\n    return get(this._delegate).then(function (expSnapshot) {\n      return new DataSnapshot$1(_this.database, expSnapshot);\n    });\n  };\n  /**\r\n   * Attaches a listener, waits for the first event, and then removes the listener\r\n   */\n\n\n  Query.prototype.once = function (eventType, callback, failureCallbackOrContext, context) {\n    var _this = this;\n\n    validateArgCount('Query.once', 1, 4, arguments.length);\n    validateCallback('Query.once', 'callback', callback, true);\n    var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\n    var deferred = new Deferred();\n\n    var valueCallback = function valueCallback(expSnapshot, previousChildName) {\n      var result = new DataSnapshot$1(_this.database, expSnapshot);\n\n      if (callback) {\n        callback.call(ret.context, result, previousChildName);\n      }\n\n      deferred.resolve(result);\n    };\n\n    valueCallback.userCallback = callback;\n    valueCallback.context = ret.context;\n\n    var cancelCallback = function cancelCallback(error) {\n      if (ret.cancel) {\n        ret.cancel.call(ret.context, error);\n      }\n\n      deferred.reject(error);\n    };\n\n    switch (eventType) {\n      case 'value':\n        onValue(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      case 'child_added':\n        onChildAdded(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      case 'child_removed':\n        onChildRemoved(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      case 'child_changed':\n        onChildChanged(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      case 'child_moved':\n        onChildMoved(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      default:\n        throw new Error(errorPrefix('Query.once', 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n    }\n\n    return deferred.promise;\n  };\n  /**\r\n   * Set a limit and anchor it to the start of the window.\r\n   */\n\n\n  Query.prototype.limitToFirst = function (limit) {\n    validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, limitToFirst(limit)));\n  };\n  /**\r\n   * Set a limit and anchor it to the end of the window.\r\n   */\n\n\n  Query.prototype.limitToLast = function (limit) {\n    validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, limitToLast(limit)));\n  };\n  /**\r\n   * Given a child path, return a new query ordered by the specified grandchild path.\r\n   */\n\n\n  Query.prototype.orderByChild = function (path) {\n    validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByChild(path)));\n  };\n  /**\r\n   * Return a new query ordered by the KeyIndex\r\n   */\n\n\n  Query.prototype.orderByKey = function () {\n    validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByKey()));\n  };\n  /**\r\n   * Return a new query ordered by the PriorityIndex\r\n   */\n\n\n  Query.prototype.orderByPriority = function () {\n    validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByPriority()));\n  };\n  /**\r\n   * Return a new query ordered by the ValueIndex\r\n   */\n\n\n  Query.prototype.orderByValue = function () {\n    validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByValue()));\n  };\n\n  Query.prototype.startAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.startAt', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, startAt(value, name)));\n  };\n\n  Query.prototype.startAfter = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.startAfter', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, startAfter(value, name)));\n  };\n\n  Query.prototype.endAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.endAt', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, endAt(value, name)));\n  };\n\n  Query.prototype.endBefore = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.endBefore', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, endBefore(value, name)));\n  };\n  /**\r\n   * Load the selection of children with exactly the specified value, and, optionally,\r\n   * the specified name.\r\n   */\n\n\n  Query.prototype.equalTo = function (value, name) {\n    validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, equalTo(value, name)));\n  };\n  /**\r\n   * @returns URL for this location.\r\n   */\n\n\n  Query.prototype.toString = function () {\n    validateArgCount('Query.toString', 0, 0, arguments.length);\n    return this._delegate.toString();\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n\n\n  Query.prototype.toJSON = function () {\n    // An optional spacer argument is unnecessary for a string.\n    validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this._delegate.toJSON();\n  };\n  /**\r\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n   */\n\n\n  Query.prototype.isEqual = function (other) {\n    validateArgCount('Query.isEqual', 1, 1, arguments.length);\n\n    if (!(other instanceof Query)) {\n      var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n\n    return this._delegate.isEqual(other._delegate);\n  };\n  /**\r\n   * Helper used by .on and .once to extract the context and or cancel arguments.\r\n   * @param fnName - The function name (on or once)\r\n   *\r\n   */\n\n\n  Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n    var ret = {\n      cancel: undefined,\n      context: undefined\n    };\n\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext;\n      validateCallback(fnName, 'cancel', ret.cancel, true);\n      ret.context = context;\n      validateContextObject(fnName, 'context', ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext;\n      } else {\n        throw new Error(errorPrefix(fnName, 'cancelOrContext') + ' must either be a cancel callback or a context object.');\n      }\n    }\n\n    return ret;\n  };\n\n  Object.defineProperty(Query.prototype, \"ref\", {\n    get: function get() {\n      return new Reference(this.database, new ReferenceImpl(this._delegate._repo, this._delegate._path));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Query;\n}();\n\nvar Reference =\n/** @class */\nfunction (_super) {\n  __extends(Reference, _super);\n  /**\r\n   * Call options:\r\n   *   new Reference(Repo, Path) or\r\n   *   new Reference(url: string, string|RepoManager)\r\n   *\r\n   * Externally - this is the firebase.database.Reference type.\r\n   */\n\n\n  function Reference(database, _delegate) {\n    var _this = _super.call(this, database, new QueryImpl(_delegate._repo, _delegate._path, new QueryParams(), false)) || this;\n\n    _this.database = database;\n    _this._delegate = _delegate;\n    return _this;\n  }\n  /** @returns {?string} */\n\n\n  Reference.prototype.getKey = function () {\n    validateArgCount('Reference.key', 0, 0, arguments.length);\n    return this._delegate.key;\n  };\n\n  Reference.prototype.child = function (pathString) {\n    validateArgCount('Reference.child', 1, 1, arguments.length);\n\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    }\n\n    return new Reference(this.database, child(this._delegate, pathString));\n  };\n  /** @returns {?Reference} */\n\n\n  Reference.prototype.getParent = function () {\n    validateArgCount('Reference.parent', 0, 0, arguments.length);\n    var parent = this._delegate.parent;\n    return parent ? new Reference(this.database, parent) : null;\n  };\n  /** @returns {!Reference} */\n\n\n  Reference.prototype.getRoot = function () {\n    validateArgCount('Reference.root', 0, 0, arguments.length);\n    return new Reference(this.database, this._delegate.root);\n  };\n\n  Reference.prototype.set = function (newVal, onComplete) {\n    validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateCallback('Reference.set', 'onComplete', onComplete, true);\n    var result = set(this._delegate, newVal);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.update = function (values, onComplete) {\n    validateArgCount('Reference.update', 1, 2, arguments.length);\n\n    if (Array.isArray(values)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < values.length; ++i) {\n        newObjectToMerge['' + i] = values[i];\n      }\n\n      values = newObjectToMerge;\n      warn('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');\n    }\n\n    validateWritablePath('Reference.update', this._delegate._path);\n    validateCallback('Reference.update', 'onComplete', onComplete, true);\n    var result = update(this._delegate, values);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n    validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateCallback('Reference.setWithPriority', 'onComplete', onComplete, true);\n    var result = setWithPriority(this._delegate, newVal, newPriority);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.remove = function (onComplete) {\n    validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateCallback('Reference.remove', 'onComplete', onComplete, true);\n    var result = remove(this._delegate);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n    var _this = this;\n\n    validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateCallback('Reference.transaction', 'transactionUpdate', transactionUpdate, false);\n    validateCallback('Reference.transaction', 'onComplete', onComplete, true);\n    validateBoolean('Reference.transaction', 'applyLocally', applyLocally, true);\n    var result = runTransaction(this._delegate, transactionUpdate, {\n      applyLocally: applyLocally\n    }).then(function (transactionResult) {\n      return new TransactionResult$1(transactionResult.committed, new DataSnapshot$1(_this.database, transactionResult.snapshot));\n    });\n\n    if (onComplete) {\n      result.then(function (transactionResult) {\n        return onComplete(null, transactionResult.committed, transactionResult.snapshot);\n      }, function (error) {\n        return onComplete(error, false, null);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.setPriority = function (priority, onComplete) {\n    validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateCallback('Reference.setPriority', 'onComplete', onComplete, true);\n    var result = setPriority(this._delegate, priority);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.push = function (value, onComplete) {\n    var _this = this;\n\n    validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateCallback('Reference.push', 'onComplete', onComplete, true);\n    var expPromise = push(this._delegate, value);\n    var promise = expPromise.then(function (expRef) {\n      return new Reference(_this.database, expRef);\n    });\n\n    if (onComplete) {\n      promise.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    var result = new Reference(this.database, expPromise);\n    result.then = promise.then.bind(promise);\n    result.catch = promise.catch.bind(promise, undefined);\n    return result;\n  };\n\n  Reference.prototype.onDisconnect = function () {\n    validateWritablePath('Reference.onDisconnect', this._delegate._path);\n    return new OnDisconnect$1(new OnDisconnect(this._delegate._repo, this._delegate._path));\n  };\n\n  Object.defineProperty(Reference.prototype, \"key\", {\n    get: function get() {\n      return this.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    get: function get() {\n      return this.getParent();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    get: function get() {\n      return this.getRoot();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Reference;\n}(Query);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase database.\r\n */\n\n\nvar Database =\n/** @class */\nfunction () {\n  /**\r\n   * The constructor should not be called by users of our public API.\r\n   */\n  function Database(_delegate, app) {\n    var _this = this;\n\n    this._delegate = _delegate;\n    this.app = app;\n    this.INTERNAL = {\n      delete: function _delete() {\n        return _this._delegate._delete();\n      }\n    };\n  }\n  /**\r\n   * Modify this instance to communicate with the Realtime Database emulator.\r\n   *\r\n   * <p>Note: This method must be called before performing any other operation.\r\n   *\r\n   * @param host - the emulator host (ex: localhost)\r\n   * @param port - the emulator port (ex: 8080)\r\n   * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n   */\n\n\n  Database.prototype.useEmulator = function (host, port, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    useDatabaseEmulator(this._delegate, host, port, options);\n  };\n\n  Database.prototype.ref = function (path) {\n    validateArgCount('database.ref', 0, 1, arguments.length);\n\n    if (path instanceof Reference) {\n      var childRef = refFromURL(this._delegate, path.toString());\n      return new Reference(this, childRef);\n    } else {\n      var childRef = ref(this._delegate, path);\n      return new Reference(this, childRef);\n    }\n  };\n  /**\r\n   * Returns a reference to the root or the path specified in url.\r\n   * We throw a exception if the url is not in the same domain as the\r\n   * current repo.\r\n   * @returns Firebase reference.\r\n   */\n\n\n  Database.prototype.refFromURL = function (url) {\n    var apiName = 'database.refFromURL';\n    validateArgCount(apiName, 1, 1, arguments.length);\n    var childRef = refFromURL(this._delegate, url);\n    return new Reference(this, childRef);\n  }; // Make individual repo go offline.\n\n\n  Database.prototype.goOffline = function () {\n    validateArgCount('database.goOffline', 0, 0, arguments.length);\n    return goOffline(this._delegate);\n  };\n\n  Database.prototype.goOnline = function () {\n    validateArgCount('database.goOnline', 0, 0, arguments.length);\n    return goOnline(this._delegate);\n  };\n\n  Database.ServerValue = {\n    TIMESTAMP: serverTimestamp(),\n    increment: function increment(delta) {\n      return _increment(delta);\n    }\n  };\n  return Database;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */\n\n\nvar forceLongPolling = function forceLongPolling() {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nvar forceWebSockets = function forceWebSockets() {\n  BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\n\n\nvar isWebSocketsAvailable = function isWebSocketsAvailable() {\n  return WebSocketConnection['isAvailable']();\n};\n\nvar setSecurityDebugCallback = function setSecurityDebugCallback(ref, callback) {\n  var connection = ref._delegate._repo.persistentConnection_; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  connection.securityDebugCallback_ = callback;\n};\n\nvar stats = function stats(ref, showDelta) {\n  repoStats(ref._delegate._repo, showDelta);\n};\n\nvar statsIncrementCounter = function statsIncrementCounter(ref, metric) {\n  repoStatsIncrementCounter(ref._delegate._repo, metric);\n};\n\nvar dataUpdateCount = function dataUpdateCount(ref) {\n  return ref._delegate._repo.dataUpdateCount;\n};\n\nvar interceptServerData = function interceptServerData(ref, callback) {\n  return repoInterceptServerData(ref._delegate._repo, callback);\n};\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAuthImpl - custom auth implementation\r\n */\n\n\nfunction initStandalone(_a) {\n  var app = _a.app,\n      url = _a.url,\n      version = _a.version,\n      customAuthImpl = _a.customAuthImpl,\n      namespace = _a.namespace,\n      _b = _a.nodeAdmin,\n      nodeAdmin = _b === void 0 ? false : _b;\n  setSDKVersion(version);\n  /**\r\n   * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n   * any actual function.\r\n   */\n\n  var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\n  authProvider.setComponent(new Component('auth-internal', function () {\n    return customAuthImpl;\n  }, \"PRIVATE\"\n  /* PRIVATE */\n  ));\n  return {\n    instance: new Database(repoManagerDatabaseFromApp(app, authProvider,\n    /* appCheckProvider= */\n    undefined, url, nodeAdmin), app),\n    namespace: namespace\n  };\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DataConnection = PersistentConnection; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\n  this.sendRequest('q', {\n    p: pathString\n  }, onComplete);\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nPersistentConnection.prototype.echo = function (data, onEcho) {\n  this.sendRequest('echo', {\n    d: data\n  }, onEcho);\n}; // RealTimeConnection properties that we use in tests.\n\n\nvar RealTimeConnection = Connection;\n\nvar hijackHash = function hijackHash(newHash) {\n  var oldPut = PersistentConnection.prototype.put;\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nvar ConnectionTarget = RepoInfo;\n\nvar queryIdentifier = function queryIdentifier(query) {\n  return query._delegate._queryIdentifier;\n};\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */\n\n\nvar forceRestClient = function forceRestClient(_forceRestClient) {\n  repoManagerForceRestClient(_forceRestClient);\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar ServerValue = Database.ServerValue;\n\nfunction registerDatabase(instance) {\n  // set SDK_VERSION\n  setSDKVersion(instance.SDK_VERSION); // Register the Database Service with the 'firebase' namespace.\n\n  var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, _a) {\n    var url = _a.instanceIdentifier;\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n\n    var app = container.getProvider('app').getImmediate();\n    var authProvider = container.getProvider('auth-internal');\n    var appCheckProvider = container.getProvider('app-check-internal');\n    return new Database(repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url), app);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps( // firebase.database namespace properties\n  {\n    Reference: Reference,\n    Query: Query,\n    Database: Database,\n    DataSnapshot: DataSnapshot$1,\n    enableLogging: enableLogging,\n    INTERNAL: INTERNAL,\n    ServerValue: ServerValue,\n    TEST_ACCESS: TEST_ACCESS\n  }).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n\n  if (isNodeSdk()) {\n    module.exports = namespace;\n  }\n}\n\nregisterDatabase(firebase);\nexport { DataSnapshot$1 as DataSnapshot, Database, OnDisconnect$1 as OnDisconnect, Query, Reference, ServerValue, enableLogging, registerDatabase };"],"sourceRoot":""}