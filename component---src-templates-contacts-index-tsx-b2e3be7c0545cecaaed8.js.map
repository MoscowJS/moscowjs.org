{"version":3,"sources":["webpack://moscowjs.org/./node_modules/react-feather/dist/icons/user-x.js","webpack://moscowjs.org/./src/templates/contacts/index.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","UserX","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","x1","y1","x2","y2","displayName","Grid","styled","rhythm","GridItem","data","location","orgs","allAirtableorgs","nodes","reduce","result","Status","push","current","former","volunteer","title","airtablepages","Header","Container","as","Markdown","content","map","Item","Display_name","Photo","fluid","localFiles","childImageSharp","alt","About","href","Telegram","Email","Footer"],"mappings":"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","file":"component---src-templates-contacts-index-tsx-b2e3be7c0545cecaaed8.js","sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nvar UserX = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"8.5\",\n    cy: \"7\",\n    r: \"4\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"18\",\n    y1: \"8\",\n    x2: \"23\",\n    y2: \"13\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"23\",\n    y1: \"8\",\n    x2: \"18\",\n    y2: \"13\"\n  }));\n});\nUserX.displayName = 'UserX';\nexport default UserX;","import Img from \"gatsby-image\"\nimport React, { FunctionComponent } from \"react\"\nimport SEO from \"utils/seo\"\nimport { Container, Footer, Header, Item, Markdown } from \"components/layout\"\nimport { graphql, PageProps } from \"gatsby\"\nimport { OrgData, PagesData } from \"models\"\nimport { UserX } from \"react-feather\"\nimport styled from \"styled-components\"\nimport { rhythm } from \"utils/typography\"\n\nconst Grid = styled.ul`\n  --item-width: ${rhythm(4)};\n\n  margin: 0 0 ${rhythm(2)};\n  display: grid;\n  grid-template-columns: repeat(auto-fill, var(--item-width));\n  grid-gap: ${rhythm(0.5)};\n  justify-content: space-between;\n`\n\nconst GridItem = styled.li`\n  display: inline-block;\n  overflow: hidden;\n  text-align: center;\n  font-size: ${rhythm(0.5)};\n  margin: 0;\n`\n\nconst Page: FunctionComponent<\n  PageProps<{\n    airtablepages: { data: PagesData }\n    allAirtableorgs: {\n      nodes: Array<{\n        data: OrgData\n      }>\n    }\n  }>\n> = ({ data, location }) => {\n  const orgs = data.allAirtableorgs.nodes.reduce(\n    (result, { data }) => {\n      result[data.Status].push(data)\n      return result\n    },\n    {\n      current: [] as OrgData[],\n      former: [] as OrgData[],\n      volunteer: [] as OrgData[],\n    }\n  )\n\n  return (\n    <>\n      <SEO title={data.airtablepages.data.title} />\n      <Header location={location} />\n      <Container as=\"main\">\n        <Markdown>{data.airtablepages.data.content}</Markdown>\n\n        <h3>Организаторы</h3>\n        {orgs.current.map(data => {\n          return (\n            <Item key={data.Display_name}>\n              <Item.ImageContainer size=\"s\">\n                {data.Photo ? (\n                  <Img\n                    fluid={data.Photo.localFiles[0].childImageSharp.fluid}\n                    alt={data.Display_name}\n                  />\n                ) : (\n                  <UserX size=\"100%\" />\n                )}\n              </Item.ImageContainer>\n              <Item.Content>\n                <Item.Header>{data.Display_name}</Item.Header>\n                {data.About && <Markdown>{data.About}</Markdown>}\n                <div>\n                  telegram:{\" \"}\n                  <a href={`https://t.me/${data.Telegram}`}>\n                    t.me/{data.Telegram}\n                  </a>\n                </div>\n                <div>\n                  email: <a href={`mailto:${data.Email}`}>{data.Email}</a>\n                </div>\n              </Item.Content>\n            </Item>\n          )\n        })}\n\n        <h3>Бывшие организаторы</h3>\n        <Grid>\n          {orgs.former.map(data => (\n            <GridItem key={data.Display_name}>\n              <div>\n                {data.Photo ? (\n                  <Img\n                    fluid={data.Photo.localFiles[0].childImageSharp.fluid}\n                    alt={data.Display_name}\n                  />\n                ) : (\n                  <div\n                    css={`\n                      line-height: 0;\n                    `}\n                  >\n                    <UserX size=\"100%\" />\n                  </div>\n                )}\n                <p\n                  css={`\n                    text-align: center;\n                    font-size: ${rhythm(0.4)};\n                  `}\n                >\n                  {data.Display_name}\n                </p>\n              </div>\n            </GridItem>\n          ))}\n        </Grid>\n\n        <h3>Волонтеры</h3>\n        <ul>\n          {orgs.volunteer.map(data => (\n            <li>{data.Display_name}</li>\n          ))}\n        </ul>\n      </Container>\n      <Footer />\n    </>\n  )\n}\n\nexport const query = graphql`\n  query ($id: String!) {\n    airtablepages(id: { eq: $id }) {\n      data {\n        title\n        slug\n        content\n        description\n      }\n    }\n    allAirtableorgs(sort: { fields: data___Display_name, order: ASC }) {\n      nodes {\n        data {\n          Display_name\n          About\n          Email\n          Telegram\n          Status\n          Company\n          Photo {\n            localFiles {\n              childImageSharp {\n                fluid(\n                  cropFocus: CENTER\n                  quality: 80\n                  grayscale: true\n                  maxWidth: 300\n                  maxHeight: 300\n                  fit: COVER\n                ) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Page\n"],"sourceRoot":""}